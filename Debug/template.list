
template.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045d4  08000140  08000140  00010140  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000388  08004718  08004718  00014718  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08004aa0  08004aa0  00014aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08004aa8  08004aa8  00014aa8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08004aac  08004aac  00014aac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000674  20000000  08004ab0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000094  20000674  08005124  00020674  2**2
                  ALLOC
  8 ._user_heap_stack 00000400  20000708  08005124  00020708  2**0
                  ALLOC
  9 .ARM.attributes 00000029  00000000  00000000  00020674  2**0
                  CONTENTS, READONLY
 10 .debug_info   0000546b  00000000  00000000  0002069d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00000fef  00000000  00000000  00025b08  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 000002c8  00000000  00000000  00026af8  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000200  00000000  00000000  00026dc0  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00001b63  00000000  00000000  00026fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000011e7  00000000  00000000  00028b23  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  00029d0a  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00001280  00000000  00000000  00029d88  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	20000674 	.word	0x20000674
 800015c:	00000000 	.word	0x00000000
 8000160:	080046fc 	.word	0x080046fc

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	20000678 	.word	0x20000678
 800017c:	080046fc 	.word	0x080046fc

08000180 <strlen>:
 8000180:	4603      	mov	r3, r0
 8000182:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000186:	2a00      	cmp	r2, #0
 8000188:	d1fb      	bne.n	8000182 <strlen+0x2>
 800018a:	1a18      	subs	r0, r3, r0
 800018c:	3801      	subs	r0, #1
 800018e:	4770      	bx	lr

08000190 <__aeabi_drsub>:
 8000190:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000194:	e002      	b.n	800019c <__adddf3>
 8000196:	bf00      	nop

08000198 <__aeabi_dsub>:
 8000198:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800019c <__adddf3>:
 800019c:	b530      	push	{r4, r5, lr}
 800019e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001a6:	ea94 0f05 	teq	r4, r5
 80001aa:	bf08      	it	eq
 80001ac:	ea90 0f02 	teqeq	r0, r2
 80001b0:	bf1f      	itttt	ne
 80001b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80001ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80001be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001c2:	f000 80e2 	beq.w	800038a <__adddf3+0x1ee>
 80001c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ce:	bfb8      	it	lt
 80001d0:	426d      	neglt	r5, r5
 80001d2:	dd0c      	ble.n	80001ee <__adddf3+0x52>
 80001d4:	442c      	add	r4, r5
 80001d6:	ea80 0202 	eor.w	r2, r0, r2
 80001da:	ea81 0303 	eor.w	r3, r1, r3
 80001de:	ea82 0000 	eor.w	r0, r2, r0
 80001e2:	ea83 0101 	eor.w	r1, r3, r1
 80001e6:	ea80 0202 	eor.w	r2, r0, r2
 80001ea:	ea81 0303 	eor.w	r3, r1, r3
 80001ee:	2d36      	cmp	r5, #54	; 0x36
 80001f0:	bf88      	it	hi
 80001f2:	bd30      	pophi	{r4, r5, pc}
 80001f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000200:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000204:	d002      	beq.n	800020c <__adddf3+0x70>
 8000206:	4240      	negs	r0, r0
 8000208:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800020c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000210:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000214:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000218:	d002      	beq.n	8000220 <__adddf3+0x84>
 800021a:	4252      	negs	r2, r2
 800021c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000220:	ea94 0f05 	teq	r4, r5
 8000224:	f000 80a7 	beq.w	8000376 <__adddf3+0x1da>
 8000228:	f1a4 0401 	sub.w	r4, r4, #1
 800022c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000230:	db0d      	blt.n	800024e <__adddf3+0xb2>
 8000232:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000236:	fa22 f205 	lsr.w	r2, r2, r5
 800023a:	1880      	adds	r0, r0, r2
 800023c:	f141 0100 	adc.w	r1, r1, #0
 8000240:	fa03 f20e 	lsl.w	r2, r3, lr
 8000244:	1880      	adds	r0, r0, r2
 8000246:	fa43 f305 	asr.w	r3, r3, r5
 800024a:	4159      	adcs	r1, r3
 800024c:	e00e      	b.n	800026c <__adddf3+0xd0>
 800024e:	f1a5 0520 	sub.w	r5, r5, #32
 8000252:	f10e 0e20 	add.w	lr, lr, #32
 8000256:	2a01      	cmp	r2, #1
 8000258:	fa03 fc0e 	lsl.w	ip, r3, lr
 800025c:	bf28      	it	cs
 800025e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000262:	fa43 f305 	asr.w	r3, r3, r5
 8000266:	18c0      	adds	r0, r0, r3
 8000268:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800026c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000270:	d507      	bpl.n	8000282 <__adddf3+0xe6>
 8000272:	f04f 0e00 	mov.w	lr, #0
 8000276:	f1dc 0c00 	rsbs	ip, ip, #0
 800027a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800027e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000282:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000286:	d31b      	bcc.n	80002c0 <__adddf3+0x124>
 8000288:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800028c:	d30c      	bcc.n	80002a8 <__adddf3+0x10c>
 800028e:	0849      	lsrs	r1, r1, #1
 8000290:	ea5f 0030 	movs.w	r0, r0, rrx
 8000294:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000298:	f104 0401 	add.w	r4, r4, #1
 800029c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002a4:	f080 809a 	bcs.w	80003dc <__adddf3+0x240>
 80002a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002ac:	bf08      	it	eq
 80002ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002b2:	f150 0000 	adcs.w	r0, r0, #0
 80002b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80002ba:	ea41 0105 	orr.w	r1, r1, r5
 80002be:	bd30      	pop	{r4, r5, pc}
 80002c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002c4:	4140      	adcs	r0, r0
 80002c6:	eb41 0101 	adc.w	r1, r1, r1
 80002ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002ce:	f1a4 0401 	sub.w	r4, r4, #1
 80002d2:	d1e9      	bne.n	80002a8 <__adddf3+0x10c>
 80002d4:	f091 0f00 	teq	r1, #0
 80002d8:	bf04      	itt	eq
 80002da:	4601      	moveq	r1, r0
 80002dc:	2000      	moveq	r0, #0
 80002de:	fab1 f381 	clz	r3, r1
 80002e2:	bf08      	it	eq
 80002e4:	3320      	addeq	r3, #32
 80002e6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ea:	f1b3 0220 	subs.w	r2, r3, #32
 80002ee:	da0c      	bge.n	800030a <__adddf3+0x16e>
 80002f0:	320c      	adds	r2, #12
 80002f2:	dd08      	ble.n	8000306 <__adddf3+0x16a>
 80002f4:	f102 0c14 	add.w	ip, r2, #20
 80002f8:	f1c2 020c 	rsb	r2, r2, #12
 80002fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000300:	fa21 f102 	lsr.w	r1, r1, r2
 8000304:	e00c      	b.n	8000320 <__adddf3+0x184>
 8000306:	f102 0214 	add.w	r2, r2, #20
 800030a:	bfd8      	it	le
 800030c:	f1c2 0c20 	rsble	ip, r2, #32
 8000310:	fa01 f102 	lsl.w	r1, r1, r2
 8000314:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000318:	bfdc      	itt	le
 800031a:	ea41 010c 	orrle.w	r1, r1, ip
 800031e:	4090      	lslle	r0, r2
 8000320:	1ae4      	subs	r4, r4, r3
 8000322:	bfa2      	ittt	ge
 8000324:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000328:	4329      	orrge	r1, r5
 800032a:	bd30      	popge	{r4, r5, pc}
 800032c:	ea6f 0404 	mvn.w	r4, r4
 8000330:	3c1f      	subs	r4, #31
 8000332:	da1c      	bge.n	800036e <__adddf3+0x1d2>
 8000334:	340c      	adds	r4, #12
 8000336:	dc0e      	bgt.n	8000356 <__adddf3+0x1ba>
 8000338:	f104 0414 	add.w	r4, r4, #20
 800033c:	f1c4 0220 	rsb	r2, r4, #32
 8000340:	fa20 f004 	lsr.w	r0, r0, r4
 8000344:	fa01 f302 	lsl.w	r3, r1, r2
 8000348:	ea40 0003 	orr.w	r0, r0, r3
 800034c:	fa21 f304 	lsr.w	r3, r1, r4
 8000350:	ea45 0103 	orr.w	r1, r5, r3
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f1c4 040c 	rsb	r4, r4, #12
 800035a:	f1c4 0220 	rsb	r2, r4, #32
 800035e:	fa20 f002 	lsr.w	r0, r0, r2
 8000362:	fa01 f304 	lsl.w	r3, r1, r4
 8000366:	ea40 0003 	orr.w	r0, r0, r3
 800036a:	4629      	mov	r1, r5
 800036c:	bd30      	pop	{r4, r5, pc}
 800036e:	fa21 f004 	lsr.w	r0, r1, r4
 8000372:	4629      	mov	r1, r5
 8000374:	bd30      	pop	{r4, r5, pc}
 8000376:	f094 0f00 	teq	r4, #0
 800037a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800037e:	bf06      	itte	eq
 8000380:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000384:	3401      	addeq	r4, #1
 8000386:	3d01      	subne	r5, #1
 8000388:	e74e      	b.n	8000228 <__adddf3+0x8c>
 800038a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800038e:	bf18      	it	ne
 8000390:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000394:	d029      	beq.n	80003ea <__adddf3+0x24e>
 8000396:	ea94 0f05 	teq	r4, r5
 800039a:	bf08      	it	eq
 800039c:	ea90 0f02 	teqeq	r0, r2
 80003a0:	d005      	beq.n	80003ae <__adddf3+0x212>
 80003a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80003a6:	bf04      	itt	eq
 80003a8:	4619      	moveq	r1, r3
 80003aa:	4610      	moveq	r0, r2
 80003ac:	bd30      	pop	{r4, r5, pc}
 80003ae:	ea91 0f03 	teq	r1, r3
 80003b2:	bf1e      	ittt	ne
 80003b4:	2100      	movne	r1, #0
 80003b6:	2000      	movne	r0, #0
 80003b8:	bd30      	popne	{r4, r5, pc}
 80003ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80003be:	d105      	bne.n	80003cc <__adddf3+0x230>
 80003c0:	0040      	lsls	r0, r0, #1
 80003c2:	4149      	adcs	r1, r1
 80003c4:	bf28      	it	cs
 80003c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003ca:	bd30      	pop	{r4, r5, pc}
 80003cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003d0:	bf3c      	itt	cc
 80003d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003d6:	bd30      	popcc	{r4, r5, pc}
 80003d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003e4:	f04f 0000 	mov.w	r0, #0
 80003e8:	bd30      	pop	{r4, r5, pc}
 80003ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ee:	bf1a      	itte	ne
 80003f0:	4619      	movne	r1, r3
 80003f2:	4610      	movne	r0, r2
 80003f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003f8:	bf1c      	itt	ne
 80003fa:	460b      	movne	r3, r1
 80003fc:	4602      	movne	r2, r0
 80003fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000402:	bf06      	itte	eq
 8000404:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000408:	ea91 0f03 	teqeq	r1, r3
 800040c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000410:	bd30      	pop	{r4, r5, pc}
 8000412:	bf00      	nop

08000414 <__aeabi_ui2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000428:	f04f 0500 	mov.w	r5, #0
 800042c:	f04f 0100 	mov.w	r1, #0
 8000430:	e750      	b.n	80002d4 <__adddf3+0x138>
 8000432:	bf00      	nop

08000434 <__aeabi_i2d>:
 8000434:	f090 0f00 	teq	r0, #0
 8000438:	bf04      	itt	eq
 800043a:	2100      	moveq	r1, #0
 800043c:	4770      	bxeq	lr
 800043e:	b530      	push	{r4, r5, lr}
 8000440:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000444:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000448:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800044c:	bf48      	it	mi
 800044e:	4240      	negmi	r0, r0
 8000450:	f04f 0100 	mov.w	r1, #0
 8000454:	e73e      	b.n	80002d4 <__adddf3+0x138>
 8000456:	bf00      	nop

08000458 <__aeabi_f2d>:
 8000458:	0042      	lsls	r2, r0, #1
 800045a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800045e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000462:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000466:	bf1f      	itttt	ne
 8000468:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800046c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000470:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000474:	4770      	bxne	lr
 8000476:	f092 0f00 	teq	r2, #0
 800047a:	bf14      	ite	ne
 800047c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000480:	4770      	bxeq	lr
 8000482:	b530      	push	{r4, r5, lr}
 8000484:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000488:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800048c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000490:	e720      	b.n	80002d4 <__adddf3+0x138>
 8000492:	bf00      	nop

08000494 <__aeabi_ul2d>:
 8000494:	ea50 0201 	orrs.w	r2, r0, r1
 8000498:	bf08      	it	eq
 800049a:	4770      	bxeq	lr
 800049c:	b530      	push	{r4, r5, lr}
 800049e:	f04f 0500 	mov.w	r5, #0
 80004a2:	e00a      	b.n	80004ba <__aeabi_l2d+0x16>

080004a4 <__aeabi_l2d>:
 80004a4:	ea50 0201 	orrs.w	r2, r0, r1
 80004a8:	bf08      	it	eq
 80004aa:	4770      	bxeq	lr
 80004ac:	b530      	push	{r4, r5, lr}
 80004ae:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004b2:	d502      	bpl.n	80004ba <__aeabi_l2d+0x16>
 80004b4:	4240      	negs	r0, r0
 80004b6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004ba:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004be:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004c6:	f43f aedc 	beq.w	8000282 <__adddf3+0xe6>
 80004ca:	f04f 0203 	mov.w	r2, #3
 80004ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004d2:	bf18      	it	ne
 80004d4:	3203      	addne	r2, #3
 80004d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004da:	bf18      	it	ne
 80004dc:	3203      	addne	r2, #3
 80004de:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004e2:	f1c2 0320 	rsb	r3, r2, #32
 80004e6:	fa00 fc03 	lsl.w	ip, r0, r3
 80004ea:	fa20 f002 	lsr.w	r0, r0, r2
 80004ee:	fa01 fe03 	lsl.w	lr, r1, r3
 80004f2:	ea40 000e 	orr.w	r0, r0, lr
 80004f6:	fa21 f102 	lsr.w	r1, r1, r2
 80004fa:	4414      	add	r4, r2
 80004fc:	e6c1      	b.n	8000282 <__adddf3+0xe6>
 80004fe:	bf00      	nop

08000500 <__aeabi_dmul>:
 8000500:	b570      	push	{r4, r5, r6, lr}
 8000502:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000506:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800050a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800050e:	bf1d      	ittte	ne
 8000510:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000514:	ea94 0f0c 	teqne	r4, ip
 8000518:	ea95 0f0c 	teqne	r5, ip
 800051c:	f000 f8de 	bleq	80006dc <__aeabi_dmul+0x1dc>
 8000520:	442c      	add	r4, r5
 8000522:	ea81 0603 	eor.w	r6, r1, r3
 8000526:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800052a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800052e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000532:	bf18      	it	ne
 8000534:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000538:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800053c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000540:	d038      	beq.n	80005b4 <__aeabi_dmul+0xb4>
 8000542:	fba0 ce02 	umull	ip, lr, r0, r2
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800054e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000552:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000556:	f04f 0600 	mov.w	r6, #0
 800055a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800055e:	f09c 0f00 	teq	ip, #0
 8000562:	bf18      	it	ne
 8000564:	f04e 0e01 	orrne.w	lr, lr, #1
 8000568:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800056c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000570:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000574:	d204      	bcs.n	8000580 <__aeabi_dmul+0x80>
 8000576:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800057a:	416d      	adcs	r5, r5
 800057c:	eb46 0606 	adc.w	r6, r6, r6
 8000580:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000584:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000588:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800058c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000590:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000594:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000598:	bf88      	it	hi
 800059a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800059e:	d81e      	bhi.n	80005de <__aeabi_dmul+0xde>
 80005a0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005a4:	bf08      	it	eq
 80005a6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005aa:	f150 0000 	adcs.w	r0, r0, #0
 80005ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005b2:	bd70      	pop	{r4, r5, r6, pc}
 80005b4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005b8:	ea46 0101 	orr.w	r1, r6, r1
 80005bc:	ea40 0002 	orr.w	r0, r0, r2
 80005c0:	ea81 0103 	eor.w	r1, r1, r3
 80005c4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005c8:	bfc2      	ittt	gt
 80005ca:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005d2:	bd70      	popgt	{r4, r5, r6, pc}
 80005d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d8:	f04f 0e00 	mov.w	lr, #0
 80005dc:	3c01      	subs	r4, #1
 80005de:	f300 80ab 	bgt.w	8000738 <__aeabi_dmul+0x238>
 80005e2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005e6:	bfde      	ittt	le
 80005e8:	2000      	movle	r0, #0
 80005ea:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005ee:	bd70      	pople	{r4, r5, r6, pc}
 80005f0:	f1c4 0400 	rsb	r4, r4, #0
 80005f4:	3c20      	subs	r4, #32
 80005f6:	da35      	bge.n	8000664 <__aeabi_dmul+0x164>
 80005f8:	340c      	adds	r4, #12
 80005fa:	dc1b      	bgt.n	8000634 <__aeabi_dmul+0x134>
 80005fc:	f104 0414 	add.w	r4, r4, #20
 8000600:	f1c4 0520 	rsb	r5, r4, #32
 8000604:	fa00 f305 	lsl.w	r3, r0, r5
 8000608:	fa20 f004 	lsr.w	r0, r0, r4
 800060c:	fa01 f205 	lsl.w	r2, r1, r5
 8000610:	ea40 0002 	orr.w	r0, r0, r2
 8000614:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000618:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800061c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000620:	fa21 f604 	lsr.w	r6, r1, r4
 8000624:	eb42 0106 	adc.w	r1, r2, r6
 8000628:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800062c:	bf08      	it	eq
 800062e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f1c4 040c 	rsb	r4, r4, #12
 8000638:	f1c4 0520 	rsb	r5, r4, #32
 800063c:	fa00 f304 	lsl.w	r3, r0, r4
 8000640:	fa20 f005 	lsr.w	r0, r0, r5
 8000644:	fa01 f204 	lsl.w	r2, r1, r4
 8000648:	ea40 0002 	orr.w	r0, r0, r2
 800064c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000650:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000654:	f141 0100 	adc.w	r1, r1, #0
 8000658:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800065c:	bf08      	it	eq
 800065e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f1c4 0520 	rsb	r5, r4, #32
 8000668:	fa00 f205 	lsl.w	r2, r0, r5
 800066c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000670:	fa20 f304 	lsr.w	r3, r0, r4
 8000674:	fa01 f205 	lsl.w	r2, r1, r5
 8000678:	ea43 0302 	orr.w	r3, r3, r2
 800067c:	fa21 f004 	lsr.w	r0, r1, r4
 8000680:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000684:	fa21 f204 	lsr.w	r2, r1, r4
 8000688:	ea20 0002 	bic.w	r0, r0, r2
 800068c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000690:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000694:	bf08      	it	eq
 8000696:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800069a:	bd70      	pop	{r4, r5, r6, pc}
 800069c:	f094 0f00 	teq	r4, #0
 80006a0:	d10f      	bne.n	80006c2 <__aeabi_dmul+0x1c2>
 80006a2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006a6:	0040      	lsls	r0, r0, #1
 80006a8:	eb41 0101 	adc.w	r1, r1, r1
 80006ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006b0:	bf08      	it	eq
 80006b2:	3c01      	subeq	r4, #1
 80006b4:	d0f7      	beq.n	80006a6 <__aeabi_dmul+0x1a6>
 80006b6:	ea41 0106 	orr.w	r1, r1, r6
 80006ba:	f095 0f00 	teq	r5, #0
 80006be:	bf18      	it	ne
 80006c0:	4770      	bxne	lr
 80006c2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006c6:	0052      	lsls	r2, r2, #1
 80006c8:	eb43 0303 	adc.w	r3, r3, r3
 80006cc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006d0:	bf08      	it	eq
 80006d2:	3d01      	subeq	r5, #1
 80006d4:	d0f7      	beq.n	80006c6 <__aeabi_dmul+0x1c6>
 80006d6:	ea43 0306 	orr.w	r3, r3, r6
 80006da:	4770      	bx	lr
 80006dc:	ea94 0f0c 	teq	r4, ip
 80006e0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006e4:	bf18      	it	ne
 80006e6:	ea95 0f0c 	teqne	r5, ip
 80006ea:	d00c      	beq.n	8000706 <__aeabi_dmul+0x206>
 80006ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f0:	bf18      	it	ne
 80006f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006f6:	d1d1      	bne.n	800069c <__aeabi_dmul+0x19c>
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000700:	f04f 0000 	mov.w	r0, #0
 8000704:	bd70      	pop	{r4, r5, r6, pc}
 8000706:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800070a:	bf06      	itte	eq
 800070c:	4610      	moveq	r0, r2
 800070e:	4619      	moveq	r1, r3
 8000710:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000714:	d019      	beq.n	800074a <__aeabi_dmul+0x24a>
 8000716:	ea94 0f0c 	teq	r4, ip
 800071a:	d102      	bne.n	8000722 <__aeabi_dmul+0x222>
 800071c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000720:	d113      	bne.n	800074a <__aeabi_dmul+0x24a>
 8000722:	ea95 0f0c 	teq	r5, ip
 8000726:	d105      	bne.n	8000734 <__aeabi_dmul+0x234>
 8000728:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800072c:	bf1c      	itt	ne
 800072e:	4610      	movne	r0, r2
 8000730:	4619      	movne	r1, r3
 8000732:	d10a      	bne.n	800074a <__aeabi_dmul+0x24a>
 8000734:	ea81 0103 	eor.w	r1, r1, r3
 8000738:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800073c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000740:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000744:	f04f 0000 	mov.w	r0, #0
 8000748:	bd70      	pop	{r4, r5, r6, pc}
 800074a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800074e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000752:	bd70      	pop	{r4, r5, r6, pc}

08000754 <__aeabi_ddiv>:
 8000754:	b570      	push	{r4, r5, r6, lr}
 8000756:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800075a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800075e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000762:	bf1d      	ittte	ne
 8000764:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000768:	ea94 0f0c 	teqne	r4, ip
 800076c:	ea95 0f0c 	teqne	r5, ip
 8000770:	f000 f8a7 	bleq	80008c2 <__aeabi_ddiv+0x16e>
 8000774:	eba4 0405 	sub.w	r4, r4, r5
 8000778:	ea81 0e03 	eor.w	lr, r1, r3
 800077c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000780:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000784:	f000 8088 	beq.w	8000898 <__aeabi_ddiv+0x144>
 8000788:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800078c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000790:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000794:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000798:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800079c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007a0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007a4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007a8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007ac:	429d      	cmp	r5, r3
 80007ae:	bf08      	it	eq
 80007b0:	4296      	cmpeq	r6, r2
 80007b2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007b6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007ba:	d202      	bcs.n	80007c2 <__aeabi_ddiv+0x6e>
 80007bc:	085b      	lsrs	r3, r3, #1
 80007be:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c2:	1ab6      	subs	r6, r6, r2
 80007c4:	eb65 0503 	sbc.w	r5, r5, r3
 80007c8:	085b      	lsrs	r3, r3, #1
 80007ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ce:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007d2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 000c 	orrcs.w	r0, r0, ip
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000800:	085b      	lsrs	r3, r3, #1
 8000802:	ea4f 0232 	mov.w	r2, r2, rrx
 8000806:	ebb6 0e02 	subs.w	lr, r6, r2
 800080a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800080e:	bf22      	ittt	cs
 8000810:	1ab6      	subcs	r6, r6, r2
 8000812:	4675      	movcs	r5, lr
 8000814:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000822:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000826:	bf22      	ittt	cs
 8000828:	1ab6      	subcs	r6, r6, r2
 800082a:	4675      	movcs	r5, lr
 800082c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000830:	ea55 0e06 	orrs.w	lr, r5, r6
 8000834:	d018      	beq.n	8000868 <__aeabi_ddiv+0x114>
 8000836:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800083a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800083e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000842:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000846:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800084a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800084e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000852:	d1c0      	bne.n	80007d6 <__aeabi_ddiv+0x82>
 8000854:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000858:	d10b      	bne.n	8000872 <__aeabi_ddiv+0x11e>
 800085a:	ea41 0100 	orr.w	r1, r1, r0
 800085e:	f04f 0000 	mov.w	r0, #0
 8000862:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000866:	e7b6      	b.n	80007d6 <__aeabi_ddiv+0x82>
 8000868:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800086c:	bf04      	itt	eq
 800086e:	4301      	orreq	r1, r0
 8000870:	2000      	moveq	r0, #0
 8000872:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000876:	bf88      	it	hi
 8000878:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800087c:	f63f aeaf 	bhi.w	80005de <__aeabi_dmul+0xde>
 8000880:	ebb5 0c03 	subs.w	ip, r5, r3
 8000884:	bf04      	itt	eq
 8000886:	ebb6 0c02 	subseq.w	ip, r6, r2
 800088a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800088e:	f150 0000 	adcs.w	r0, r0, #0
 8000892:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800089c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008a0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008a4:	bfc2      	ittt	gt
 80008a6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008ae:	bd70      	popgt	{r4, r5, r6, pc}
 80008b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008b4:	f04f 0e00 	mov.w	lr, #0
 80008b8:	3c01      	subs	r4, #1
 80008ba:	e690      	b.n	80005de <__aeabi_dmul+0xde>
 80008bc:	ea45 0e06 	orr.w	lr, r5, r6
 80008c0:	e68d      	b.n	80005de <__aeabi_dmul+0xde>
 80008c2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008c6:	ea94 0f0c 	teq	r4, ip
 80008ca:	bf08      	it	eq
 80008cc:	ea95 0f0c 	teqeq	r5, ip
 80008d0:	f43f af3b 	beq.w	800074a <__aeabi_dmul+0x24a>
 80008d4:	ea94 0f0c 	teq	r4, ip
 80008d8:	d10a      	bne.n	80008f0 <__aeabi_ddiv+0x19c>
 80008da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008de:	f47f af34 	bne.w	800074a <__aeabi_dmul+0x24a>
 80008e2:	ea95 0f0c 	teq	r5, ip
 80008e6:	f47f af25 	bne.w	8000734 <__aeabi_dmul+0x234>
 80008ea:	4610      	mov	r0, r2
 80008ec:	4619      	mov	r1, r3
 80008ee:	e72c      	b.n	800074a <__aeabi_dmul+0x24a>
 80008f0:	ea95 0f0c 	teq	r5, ip
 80008f4:	d106      	bne.n	8000904 <__aeabi_ddiv+0x1b0>
 80008f6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008fa:	f43f aefd 	beq.w	80006f8 <__aeabi_dmul+0x1f8>
 80008fe:	4610      	mov	r0, r2
 8000900:	4619      	mov	r1, r3
 8000902:	e722      	b.n	800074a <__aeabi_dmul+0x24a>
 8000904:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000908:	bf18      	it	ne
 800090a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800090e:	f47f aec5 	bne.w	800069c <__aeabi_dmul+0x19c>
 8000912:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000916:	f47f af0d 	bne.w	8000734 <__aeabi_dmul+0x234>
 800091a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800091e:	f47f aeeb 	bne.w	80006f8 <__aeabi_dmul+0x1f8>
 8000922:	e712      	b.n	800074a <__aeabi_dmul+0x24a>

08000924 <__gedf2>:
 8000924:	f04f 3cff 	mov.w	ip, #4294967295
 8000928:	e006      	b.n	8000938 <__cmpdf2+0x4>
 800092a:	bf00      	nop

0800092c <__ledf2>:
 800092c:	f04f 0c01 	mov.w	ip, #1
 8000930:	e002      	b.n	8000938 <__cmpdf2+0x4>
 8000932:	bf00      	nop

08000934 <__cmpdf2>:
 8000934:	f04f 0c01 	mov.w	ip, #1
 8000938:	f84d cd04 	str.w	ip, [sp, #-4]!
 800093c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000940:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000944:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000948:	bf18      	it	ne
 800094a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800094e:	d01b      	beq.n	8000988 <__cmpdf2+0x54>
 8000950:	b001      	add	sp, #4
 8000952:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000956:	bf0c      	ite	eq
 8000958:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 800095c:	ea91 0f03 	teqne	r1, r3
 8000960:	bf02      	ittt	eq
 8000962:	ea90 0f02 	teqeq	r0, r2
 8000966:	2000      	moveq	r0, #0
 8000968:	4770      	bxeq	lr
 800096a:	f110 0f00 	cmn.w	r0, #0
 800096e:	ea91 0f03 	teq	r1, r3
 8000972:	bf58      	it	pl
 8000974:	4299      	cmppl	r1, r3
 8000976:	bf08      	it	eq
 8000978:	4290      	cmpeq	r0, r2
 800097a:	bf2c      	ite	cs
 800097c:	17d8      	asrcs	r0, r3, #31
 800097e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000982:	f040 0001 	orr.w	r0, r0, #1
 8000986:	4770      	bx	lr
 8000988:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800098c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000990:	d102      	bne.n	8000998 <__cmpdf2+0x64>
 8000992:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000996:	d107      	bne.n	80009a8 <__cmpdf2+0x74>
 8000998:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800099c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009a0:	d1d6      	bne.n	8000950 <__cmpdf2+0x1c>
 80009a2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009a6:	d0d3      	beq.n	8000950 <__cmpdf2+0x1c>
 80009a8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009ac:	4770      	bx	lr
 80009ae:	bf00      	nop

080009b0 <__aeabi_cdrcmple>:
 80009b0:	4684      	mov	ip, r0
 80009b2:	4610      	mov	r0, r2
 80009b4:	4662      	mov	r2, ip
 80009b6:	468c      	mov	ip, r1
 80009b8:	4619      	mov	r1, r3
 80009ba:	4663      	mov	r3, ip
 80009bc:	e000      	b.n	80009c0 <__aeabi_cdcmpeq>
 80009be:	bf00      	nop

080009c0 <__aeabi_cdcmpeq>:
 80009c0:	b501      	push	{r0, lr}
 80009c2:	f7ff ffb7 	bl	8000934 <__cmpdf2>
 80009c6:	2800      	cmp	r0, #0
 80009c8:	bf48      	it	mi
 80009ca:	f110 0f00 	cmnmi.w	r0, #0
 80009ce:	bd01      	pop	{r0, pc}

080009d0 <__aeabi_dcmpeq>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff fff4 	bl	80009c0 <__aeabi_cdcmpeq>
 80009d8:	bf0c      	ite	eq
 80009da:	2001      	moveq	r0, #1
 80009dc:	2000      	movne	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmplt>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffea 	bl	80009c0 <__aeabi_cdcmpeq>
 80009ec:	bf34      	ite	cc
 80009ee:	2001      	movcc	r0, #1
 80009f0:	2000      	movcs	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmple>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffe0 	bl	80009c0 <__aeabi_cdcmpeq>
 8000a00:	bf94      	ite	ls
 8000a02:	2001      	movls	r0, #1
 8000a04:	2000      	movhi	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpge>:
 8000a0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a10:	f7ff ffce 	bl	80009b0 <__aeabi_cdrcmple>
 8000a14:	bf94      	ite	ls
 8000a16:	2001      	movls	r0, #1
 8000a18:	2000      	movhi	r0, #0
 8000a1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a1e:	bf00      	nop

08000a20 <__aeabi_dcmpgt>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff ffc4 	bl	80009b0 <__aeabi_cdrcmple>
 8000a28:	bf34      	ite	cc
 8000a2a:	2001      	movcc	r0, #1
 8000a2c:	2000      	movcs	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmpun>:
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	d102      	bne.n	8000a44 <__aeabi_dcmpun+0x10>
 8000a3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a42:	d10a      	bne.n	8000a5a <__aeabi_dcmpun+0x26>
 8000a44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	d102      	bne.n	8000a54 <__aeabi_dcmpun+0x20>
 8000a4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a52:	d102      	bne.n	8000a5a <__aeabi_dcmpun+0x26>
 8000a54:	f04f 0000 	mov.w	r0, #0
 8000a58:	4770      	bx	lr
 8000a5a:	f04f 0001 	mov.w	r0, #1
 8000a5e:	4770      	bx	lr

08000a60 <__aeabi_d2iz>:
 8000a60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a68:	d215      	bcs.n	8000a96 <__aeabi_d2iz+0x36>
 8000a6a:	d511      	bpl.n	8000a90 <__aeabi_d2iz+0x30>
 8000a6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a74:	d912      	bls.n	8000a9c <__aeabi_d2iz+0x3c>
 8000a76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a86:	fa23 f002 	lsr.w	r0, r3, r2
 8000a8a:	bf18      	it	ne
 8000a8c:	4240      	negne	r0, r0
 8000a8e:	4770      	bx	lr
 8000a90:	f04f 0000 	mov.w	r0, #0
 8000a94:	4770      	bx	lr
 8000a96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a9a:	d105      	bne.n	8000aa8 <__aeabi_d2iz+0x48>
 8000a9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000aa0:	bf08      	it	eq
 8000aa2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000aa6:	4770      	bx	lr
 8000aa8:	f04f 0000 	mov.w	r0, #0
 8000aac:	4770      	bx	lr
 8000aae:	bf00      	nop

08000ab0 <__aeabi_uldivmod>:
 8000ab0:	b953      	cbnz	r3, 8000ac8 <__aeabi_uldivmod+0x18>
 8000ab2:	b94a      	cbnz	r2, 8000ac8 <__aeabi_uldivmod+0x18>
 8000ab4:	2900      	cmp	r1, #0
 8000ab6:	bf08      	it	eq
 8000ab8:	2800      	cmpeq	r0, #0
 8000aba:	bf1c      	itt	ne
 8000abc:	f04f 31ff 	movne.w	r1, #4294967295
 8000ac0:	f04f 30ff 	movne.w	r0, #4294967295
 8000ac4:	f000 b97a 	b.w	8000dbc <__aeabi_idiv0>
 8000ac8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000acc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ad0:	f000 f806 	bl	8000ae0 <__udivmoddi4>
 8000ad4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000ad8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000adc:	b004      	add	sp, #16
 8000ade:	4770      	bx	lr

08000ae0 <__udivmoddi4>:
 8000ae0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ae4:	468c      	mov	ip, r1
 8000ae6:	460e      	mov	r6, r1
 8000ae8:	4604      	mov	r4, r0
 8000aea:	9d08      	ldr	r5, [sp, #32]
 8000aec:	2b00      	cmp	r3, #0
 8000aee:	d150      	bne.n	8000b92 <__udivmoddi4+0xb2>
 8000af0:	428a      	cmp	r2, r1
 8000af2:	4617      	mov	r7, r2
 8000af4:	d96c      	bls.n	8000bd0 <__udivmoddi4+0xf0>
 8000af6:	fab2 fe82 	clz	lr, r2
 8000afa:	f1be 0f00 	cmp.w	lr, #0
 8000afe:	d00b      	beq.n	8000b18 <__udivmoddi4+0x38>
 8000b00:	f1ce 0c20 	rsb	ip, lr, #32
 8000b04:	fa01 f60e 	lsl.w	r6, r1, lr
 8000b08:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000b0c:	fa02 f70e 	lsl.w	r7, r2, lr
 8000b10:	ea4c 0c06 	orr.w	ip, ip, r6
 8000b14:	fa00 f40e 	lsl.w	r4, r0, lr
 8000b18:	0c3a      	lsrs	r2, r7, #16
 8000b1a:	fbbc f9f2 	udiv	r9, ip, r2
 8000b1e:	b2bb      	uxth	r3, r7
 8000b20:	fb02 cc19 	mls	ip, r2, r9, ip
 8000b24:	fb09 fa03 	mul.w	sl, r9, r3
 8000b28:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8000b2c:	ea48 460c 	orr.w	r6, r8, ip, lsl #16
 8000b30:	45b2      	cmp	sl, r6
 8000b32:	d90a      	bls.n	8000b4a <__udivmoddi4+0x6a>
 8000b34:	19f6      	adds	r6, r6, r7
 8000b36:	f109 31ff 	add.w	r1, r9, #4294967295
 8000b3a:	f080 8125 	bcs.w	8000d88 <__udivmoddi4+0x2a8>
 8000b3e:	45b2      	cmp	sl, r6
 8000b40:	f240 8122 	bls.w	8000d88 <__udivmoddi4+0x2a8>
 8000b44:	f1a9 0902 	sub.w	r9, r9, #2
 8000b48:	443e      	add	r6, r7
 8000b4a:	eba6 060a 	sub.w	r6, r6, sl
 8000b4e:	fbb6 f0f2 	udiv	r0, r6, r2
 8000b52:	fb02 6610 	mls	r6, r2, r0, r6
 8000b56:	fb00 f303 	mul.w	r3, r0, r3
 8000b5a:	b2a4      	uxth	r4, r4
 8000b5c:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8000b60:	42a3      	cmp	r3, r4
 8000b62:	d909      	bls.n	8000b78 <__udivmoddi4+0x98>
 8000b64:	19e4      	adds	r4, r4, r7
 8000b66:	f100 32ff 	add.w	r2, r0, #4294967295
 8000b6a:	f080 810b 	bcs.w	8000d84 <__udivmoddi4+0x2a4>
 8000b6e:	42a3      	cmp	r3, r4
 8000b70:	f240 8108 	bls.w	8000d84 <__udivmoddi4+0x2a4>
 8000b74:	3802      	subs	r0, #2
 8000b76:	443c      	add	r4, r7
 8000b78:	2100      	movs	r1, #0
 8000b7a:	1ae4      	subs	r4, r4, r3
 8000b7c:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000b80:	2d00      	cmp	r5, #0
 8000b82:	d062      	beq.n	8000c4a <__udivmoddi4+0x16a>
 8000b84:	2300      	movs	r3, #0
 8000b86:	fa24 f40e 	lsr.w	r4, r4, lr
 8000b8a:	602c      	str	r4, [r5, #0]
 8000b8c:	606b      	str	r3, [r5, #4]
 8000b8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b92:	428b      	cmp	r3, r1
 8000b94:	d907      	bls.n	8000ba6 <__udivmoddi4+0xc6>
 8000b96:	2d00      	cmp	r5, #0
 8000b98:	d055      	beq.n	8000c46 <__udivmoddi4+0x166>
 8000b9a:	2100      	movs	r1, #0
 8000b9c:	e885 0041 	stmia.w	r5, {r0, r6}
 8000ba0:	4608      	mov	r0, r1
 8000ba2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ba6:	fab3 f183 	clz	r1, r3
 8000baa:	2900      	cmp	r1, #0
 8000bac:	f040 808f 	bne.w	8000cce <__udivmoddi4+0x1ee>
 8000bb0:	42b3      	cmp	r3, r6
 8000bb2:	d302      	bcc.n	8000bba <__udivmoddi4+0xda>
 8000bb4:	4282      	cmp	r2, r0
 8000bb6:	f200 80fc 	bhi.w	8000db2 <__udivmoddi4+0x2d2>
 8000bba:	1a84      	subs	r4, r0, r2
 8000bbc:	eb66 0603 	sbc.w	r6, r6, r3
 8000bc0:	2001      	movs	r0, #1
 8000bc2:	46b4      	mov	ip, r6
 8000bc4:	2d00      	cmp	r5, #0
 8000bc6:	d040      	beq.n	8000c4a <__udivmoddi4+0x16a>
 8000bc8:	e885 1010 	stmia.w	r5, {r4, ip}
 8000bcc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000bd0:	b912      	cbnz	r2, 8000bd8 <__udivmoddi4+0xf8>
 8000bd2:	2701      	movs	r7, #1
 8000bd4:	fbb7 f7f2 	udiv	r7, r7, r2
 8000bd8:	fab7 fe87 	clz	lr, r7
 8000bdc:	f1be 0f00 	cmp.w	lr, #0
 8000be0:	d135      	bne.n	8000c4e <__udivmoddi4+0x16e>
 8000be2:	2101      	movs	r1, #1
 8000be4:	1bf6      	subs	r6, r6, r7
 8000be6:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8000bea:	fa1f f887 	uxth.w	r8, r7
 8000bee:	fbb6 f2fc 	udiv	r2, r6, ip
 8000bf2:	fb0c 6612 	mls	r6, ip, r2, r6
 8000bf6:	fb08 f002 	mul.w	r0, r8, r2
 8000bfa:	0c23      	lsrs	r3, r4, #16
 8000bfc:	ea43 4606 	orr.w	r6, r3, r6, lsl #16
 8000c00:	42b0      	cmp	r0, r6
 8000c02:	d907      	bls.n	8000c14 <__udivmoddi4+0x134>
 8000c04:	19f6      	adds	r6, r6, r7
 8000c06:	f102 33ff 	add.w	r3, r2, #4294967295
 8000c0a:	d202      	bcs.n	8000c12 <__udivmoddi4+0x132>
 8000c0c:	42b0      	cmp	r0, r6
 8000c0e:	f200 80d2 	bhi.w	8000db6 <__udivmoddi4+0x2d6>
 8000c12:	461a      	mov	r2, r3
 8000c14:	1a36      	subs	r6, r6, r0
 8000c16:	fbb6 f0fc 	udiv	r0, r6, ip
 8000c1a:	fb0c 6610 	mls	r6, ip, r0, r6
 8000c1e:	fb08 f800 	mul.w	r8, r8, r0
 8000c22:	b2a3      	uxth	r3, r4
 8000c24:	ea43 4406 	orr.w	r4, r3, r6, lsl #16
 8000c28:	45a0      	cmp	r8, r4
 8000c2a:	d907      	bls.n	8000c3c <__udivmoddi4+0x15c>
 8000c2c:	19e4      	adds	r4, r4, r7
 8000c2e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c32:	d202      	bcs.n	8000c3a <__udivmoddi4+0x15a>
 8000c34:	45a0      	cmp	r8, r4
 8000c36:	f200 80b9 	bhi.w	8000dac <__udivmoddi4+0x2cc>
 8000c3a:	4618      	mov	r0, r3
 8000c3c:	eba4 0408 	sub.w	r4, r4, r8
 8000c40:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8000c44:	e79c      	b.n	8000b80 <__udivmoddi4+0xa0>
 8000c46:	4629      	mov	r1, r5
 8000c48:	4628      	mov	r0, r5
 8000c4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c4e:	fa07 f70e 	lsl.w	r7, r7, lr
 8000c52:	f1ce 0320 	rsb	r3, lr, #32
 8000c56:	fa26 f203 	lsr.w	r2, r6, r3
 8000c5a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8000c5e:	fbb2 f1fc 	udiv	r1, r2, ip
 8000c62:	fa1f f887 	uxth.w	r8, r7
 8000c66:	fb0c 2211 	mls	r2, ip, r1, r2
 8000c6a:	fa06 f60e 	lsl.w	r6, r6, lr
 8000c6e:	fa20 f303 	lsr.w	r3, r0, r3
 8000c72:	fb01 f908 	mul.w	r9, r1, r8
 8000c76:	4333      	orrs	r3, r6
 8000c78:	0c1e      	lsrs	r6, r3, #16
 8000c7a:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 8000c7e:	45b1      	cmp	r9, r6
 8000c80:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c84:	d909      	bls.n	8000c9a <__udivmoddi4+0x1ba>
 8000c86:	19f6      	adds	r6, r6, r7
 8000c88:	f101 32ff 	add.w	r2, r1, #4294967295
 8000c8c:	f080 808c 	bcs.w	8000da8 <__udivmoddi4+0x2c8>
 8000c90:	45b1      	cmp	r9, r6
 8000c92:	f240 8089 	bls.w	8000da8 <__udivmoddi4+0x2c8>
 8000c96:	3902      	subs	r1, #2
 8000c98:	443e      	add	r6, r7
 8000c9a:	eba6 0609 	sub.w	r6, r6, r9
 8000c9e:	fbb6 f0fc 	udiv	r0, r6, ip
 8000ca2:	fb0c 6210 	mls	r2, ip, r0, r6
 8000ca6:	fb00 f908 	mul.w	r9, r0, r8
 8000caa:	b29e      	uxth	r6, r3
 8000cac:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 8000cb0:	45b1      	cmp	r9, r6
 8000cb2:	d907      	bls.n	8000cc4 <__udivmoddi4+0x1e4>
 8000cb4:	19f6      	adds	r6, r6, r7
 8000cb6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cba:	d271      	bcs.n	8000da0 <__udivmoddi4+0x2c0>
 8000cbc:	45b1      	cmp	r9, r6
 8000cbe:	d96f      	bls.n	8000da0 <__udivmoddi4+0x2c0>
 8000cc0:	3802      	subs	r0, #2
 8000cc2:	443e      	add	r6, r7
 8000cc4:	eba6 0609 	sub.w	r6, r6, r9
 8000cc8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ccc:	e78f      	b.n	8000bee <__udivmoddi4+0x10e>
 8000cce:	f1c1 0720 	rsb	r7, r1, #32
 8000cd2:	fa22 f807 	lsr.w	r8, r2, r7
 8000cd6:	408b      	lsls	r3, r1
 8000cd8:	ea48 0303 	orr.w	r3, r8, r3
 8000cdc:	fa26 f407 	lsr.w	r4, r6, r7
 8000ce0:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 8000ce4:	fbb4 f9fe 	udiv	r9, r4, lr
 8000ce8:	fa1f fc83 	uxth.w	ip, r3
 8000cec:	fb0e 4419 	mls	r4, lr, r9, r4
 8000cf0:	408e      	lsls	r6, r1
 8000cf2:	fa20 f807 	lsr.w	r8, r0, r7
 8000cf6:	fb09 fa0c 	mul.w	sl, r9, ip
 8000cfa:	ea48 0806 	orr.w	r8, r8, r6
 8000cfe:	ea4f 4618 	mov.w	r6, r8, lsr #16
 8000d02:	ea46 4404 	orr.w	r4, r6, r4, lsl #16
 8000d06:	45a2      	cmp	sl, r4
 8000d08:	fa02 f201 	lsl.w	r2, r2, r1
 8000d0c:	fa00 f601 	lsl.w	r6, r0, r1
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x244>
 8000d12:	18e4      	adds	r4, r4, r3
 8000d14:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d18:	d244      	bcs.n	8000da4 <__udivmoddi4+0x2c4>
 8000d1a:	45a2      	cmp	sl, r4
 8000d1c:	d942      	bls.n	8000da4 <__udivmoddi4+0x2c4>
 8000d1e:	f1a9 0902 	sub.w	r9, r9, #2
 8000d22:	441c      	add	r4, r3
 8000d24:	eba4 040a 	sub.w	r4, r4, sl
 8000d28:	fbb4 f0fe 	udiv	r0, r4, lr
 8000d2c:	fb0e 4410 	mls	r4, lr, r0, r4
 8000d30:	fb00 fc0c 	mul.w	ip, r0, ip
 8000d34:	fa1f f888 	uxth.w	r8, r8
 8000d38:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 8000d3c:	45a4      	cmp	ip, r4
 8000d3e:	d907      	bls.n	8000d50 <__udivmoddi4+0x270>
 8000d40:	18e4      	adds	r4, r4, r3
 8000d42:	f100 3eff 	add.w	lr, r0, #4294967295
 8000d46:	d229      	bcs.n	8000d9c <__udivmoddi4+0x2bc>
 8000d48:	45a4      	cmp	ip, r4
 8000d4a:	d927      	bls.n	8000d9c <__udivmoddi4+0x2bc>
 8000d4c:	3802      	subs	r0, #2
 8000d4e:	441c      	add	r4, r3
 8000d50:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d54:	fba0 8902 	umull	r8, r9, r0, r2
 8000d58:	eba4 0c0c 	sub.w	ip, r4, ip
 8000d5c:	45cc      	cmp	ip, r9
 8000d5e:	46c2      	mov	sl, r8
 8000d60:	46ce      	mov	lr, r9
 8000d62:	d315      	bcc.n	8000d90 <__udivmoddi4+0x2b0>
 8000d64:	d012      	beq.n	8000d8c <__udivmoddi4+0x2ac>
 8000d66:	b155      	cbz	r5, 8000d7e <__udivmoddi4+0x29e>
 8000d68:	ebb6 030a 	subs.w	r3, r6, sl
 8000d6c:	eb6c 060e 	sbc.w	r6, ip, lr
 8000d70:	fa06 f707 	lsl.w	r7, r6, r7
 8000d74:	40cb      	lsrs	r3, r1
 8000d76:	431f      	orrs	r7, r3
 8000d78:	40ce      	lsrs	r6, r1
 8000d7a:	602f      	str	r7, [r5, #0]
 8000d7c:	606e      	str	r6, [r5, #4]
 8000d7e:	2100      	movs	r1, #0
 8000d80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d84:	4610      	mov	r0, r2
 8000d86:	e6f7      	b.n	8000b78 <__udivmoddi4+0x98>
 8000d88:	4689      	mov	r9, r1
 8000d8a:	e6de      	b.n	8000b4a <__udivmoddi4+0x6a>
 8000d8c:	4546      	cmp	r6, r8
 8000d8e:	d2ea      	bcs.n	8000d66 <__udivmoddi4+0x286>
 8000d90:	ebb8 0a02 	subs.w	sl, r8, r2
 8000d94:	eb69 0e03 	sbc.w	lr, r9, r3
 8000d98:	3801      	subs	r0, #1
 8000d9a:	e7e4      	b.n	8000d66 <__udivmoddi4+0x286>
 8000d9c:	4670      	mov	r0, lr
 8000d9e:	e7d7      	b.n	8000d50 <__udivmoddi4+0x270>
 8000da0:	4618      	mov	r0, r3
 8000da2:	e78f      	b.n	8000cc4 <__udivmoddi4+0x1e4>
 8000da4:	4681      	mov	r9, r0
 8000da6:	e7bd      	b.n	8000d24 <__udivmoddi4+0x244>
 8000da8:	4611      	mov	r1, r2
 8000daa:	e776      	b.n	8000c9a <__udivmoddi4+0x1ba>
 8000dac:	3802      	subs	r0, #2
 8000dae:	443c      	add	r4, r7
 8000db0:	e744      	b.n	8000c3c <__udivmoddi4+0x15c>
 8000db2:	4608      	mov	r0, r1
 8000db4:	e706      	b.n	8000bc4 <__udivmoddi4+0xe4>
 8000db6:	3a02      	subs	r2, #2
 8000db8:	443e      	add	r6, r7
 8000dba:	e72b      	b.n	8000c14 <__udivmoddi4+0x134>

08000dbc <__aeabi_idiv0>:
 8000dbc:	4770      	bx	lr
 8000dbe:	bf00      	nop

08000dc0 <ADC_init>:
#include "stm32l1xx.h"
#include "adc.h"

// This function needs to be called before using sensors!
void ADC_init()
{
 8000dc0:	b480      	push	{r7}
 8000dc2:	af00      	add	r7, sp, #0
	RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 8000dc4:	4a10      	ldr	r2, [pc, #64]	; (8000e08 <ADC_init+0x48>)
 8000dc6:	4b10      	ldr	r3, [pc, #64]	; (8000e08 <ADC_init+0x48>)
 8000dc8:	6a1b      	ldr	r3, [r3, #32]
 8000dca:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000dce:	6213      	str	r3, [r2, #32]

	ADC1->CR2 &= ~ADC_CR2_CONT; // Single conversion mode
 8000dd0:	4a0e      	ldr	r2, [pc, #56]	; (8000e0c <ADC_init+0x4c>)
 8000dd2:	4b0e      	ldr	r3, [pc, #56]	; (8000e0c <ADC_init+0x4c>)
 8000dd4:	689b      	ldr	r3, [r3, #8]
 8000dd6:	f023 0302 	bic.w	r3, r3, #2
 8000dda:	6093      	str	r3, [r2, #8]
	ADC1->SMPR3 |= ADC_SMPR3_SMP0; // 384 bit conversion rate
 8000ddc:	4a0b      	ldr	r2, [pc, #44]	; (8000e0c <ADC_init+0x4c>)
 8000dde:	4b0b      	ldr	r3, [pc, #44]	; (8000e0c <ADC_init+0x4c>)
 8000de0:	695b      	ldr	r3, [r3, #20]
 8000de2:	f043 0307 	orr.w	r3, r3, #7
 8000de6:	6153      	str	r3, [r2, #20]
	ADC1->CR1 &= ~ADC_CR1_RES; // 12-Bit Resolution
 8000de8:	4a08      	ldr	r2, [pc, #32]	; (8000e0c <ADC_init+0x4c>)
 8000dea:	4b08      	ldr	r3, [pc, #32]	; (8000e0c <ADC_init+0x4c>)
 8000dec:	685b      	ldr	r3, [r3, #4]
 8000dee:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000df2:	6053      	str	r3, [r2, #4]
	ADC1->SQR5 &= ~ADC_SQR5_SQ1; // Start at channel zero
 8000df4:	4a05      	ldr	r2, [pc, #20]	; (8000e0c <ADC_init+0x4c>)
 8000df6:	4b05      	ldr	r3, [pc, #20]	; (8000e0c <ADC_init+0x4c>)
 8000df8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000dfa:	f023 031f 	bic.w	r3, r3, #31
 8000dfe:	6413      	str	r3, [r2, #64]	; 0x40
}
 8000e00:	bf00      	nop
 8000e02:	46bd      	mov	sp, r7
 8000e04:	bc80      	pop	{r7}
 8000e06:	4770      	bx	lr
 8000e08:	40023800 	.word	0x40023800
 8000e0c:	40012400 	.word	0x40012400

08000e10 <EXTI9_5_IRQHandler>:
 */

#include "exti_handlers.h"

void EXTI9_5_IRQHandler(void)
{
 8000e10:	b580      	push	{r7, lr}
 8000e12:	af00      	add	r7, sp, #0
	if (EXTI->PR & EXTI_PR_PR7)
 8000e14:	4b04      	ldr	r3, [pc, #16]	; (8000e28 <EXTI9_5_IRQHandler+0x18>)
 8000e16:	695b      	ldr	r3, [r3, #20]
 8000e18:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000e1c:	2b00      	cmp	r3, #0
 8000e1e:	d001      	beq.n	8000e24 <EXTI9_5_IRQHandler+0x14>
	{
        DHT22_IRQHandler();
 8000e20:	f000 fa98 	bl	8001354 <DHT22_IRQHandler>
	}
}
 8000e24:	bf00      	nop
 8000e26:	bd80      	pop	{r7, pc}
 8000e28:	40010400 	.word	0x40010400

08000e2c <GPIO_init>:

#include "gpio.h"
#include "stm32l1xx.h"

void GPIO_init()
{
 8000e2c:	b480      	push	{r7}
 8000e2e:	af00      	add	r7, sp, #0
	  RCC->AHBENR|=1;
 8000e30:	4a07      	ldr	r2, [pc, #28]	; (8000e50 <GPIO_init+0x24>)
 8000e32:	4b07      	ldr	r3, [pc, #28]	; (8000e50 <GPIO_init+0x24>)
 8000e34:	69db      	ldr	r3, [r3, #28]
 8000e36:	f043 0301 	orr.w	r3, r3, #1
 8000e3a:	61d3      	str	r3, [r2, #28]
	  GPIOA->MODER|=0x400;
 8000e3c:	4a05      	ldr	r2, [pc, #20]	; (8000e54 <GPIO_init+0x28>)
 8000e3e:	4b05      	ldr	r3, [pc, #20]	; (8000e54 <GPIO_init+0x28>)
 8000e40:	681b      	ldr	r3, [r3, #0]
 8000e42:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000e46:	6013      	str	r3, [r2, #0]
}
 8000e48:	bf00      	nop
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	bc80      	pop	{r7}
 8000e4e:	4770      	bx	lr
 8000e50:	40023800 	.word	0x40023800
 8000e54:	40020000 	.word	0x40020000

08000e58 <TIM2_Init>:
 */

#include "timers.h"

void TIM2_Init(void)
{
 8000e58:	b480      	push	{r7}
 8000e5a:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;
 8000e5c:	4a0d      	ldr	r2, [pc, #52]	; (8000e94 <TIM2_Init+0x3c>)
 8000e5e:	4b0d      	ldr	r3, [pc, #52]	; (8000e94 <TIM2_Init+0x3c>)
 8000e60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000e62:	f043 0301 	orr.w	r3, r3, #1
 8000e66:	6253      	str	r3, [r2, #36]	; 0x24
    TIM2->PSC = 32 - 1;
 8000e68:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e6c:	221f      	movs	r2, #31
 8000e6e:	629a      	str	r2, [r3, #40]	; 0x28
    TIM2->ARR = 0xFFFF;
 8000e70:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e74:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e78:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR1 |= TIM_CR1_CEN;
 8000e7a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000e7e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000e82:	681b      	ldr	r3, [r3, #0]
 8000e84:	f043 0301 	orr.w	r3, r3, #1
 8000e88:	6013      	str	r3, [r2, #0]
}
 8000e8a:	bf00      	nop
 8000e8c:	46bd      	mov	sp, r7
 8000e8e:	bc80      	pop	{r7}
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	40023800 	.word	0x40023800

08000e98 <USART2_init>:

#include "usart.h"
#include "stm32l1xx.h"

void USART2_init()
{
 8000e98:	b480      	push	{r7}
 8000e9a:	af00      	add	r7, sp, #0
	RCC->APB1ENR|=0x00020000; 	//set bit 17 (USART2 EN)
 8000e9c:	4a1c      	ldr	r2, [pc, #112]	; (8000f10 <USART2_init+0x78>)
 8000e9e:	4b1c      	ldr	r3, [pc, #112]	; (8000f10 <USART2_init+0x78>)
 8000ea0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ea2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ea6:	6253      	str	r3, [r2, #36]	; 0x24
	RCC->AHBENR|=0x00000001; 	//enable GPIOA port clock bit 0 (GPIOA EN)
 8000ea8:	4a19      	ldr	r2, [pc, #100]	; (8000f10 <USART2_init+0x78>)
 8000eaa:	4b19      	ldr	r3, [pc, #100]	; (8000f10 <USART2_init+0x78>)
 8000eac:	69db      	ldr	r3, [r3, #28]
 8000eae:	f043 0301 	orr.w	r3, r3, #1
 8000eb2:	61d3      	str	r3, [r2, #28]
	GPIOA->AFR[0]=0x00000700;	//GPIOx_AFRL p.188,AF7 p.177
 8000eb4:	4b17      	ldr	r3, [pc, #92]	; (8000f14 <USART2_init+0x7c>)
 8000eb6:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000eba:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0]|=0x00007000;	//GPIOx_AFRL p.188,AF7 p.177
 8000ebc:	4a15      	ldr	r2, [pc, #84]	; (8000f14 <USART2_init+0x7c>)
 8000ebe:	4b15      	ldr	r3, [pc, #84]	; (8000f14 <USART2_init+0x7c>)
 8000ec0:	6a1b      	ldr	r3, [r3, #32]
 8000ec2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 8000ec6:	6213      	str	r3, [r2, #32]
	GPIOA->MODER|=0x00000020; 	//MODER2=PA2(TX) to mode 10=alternate function mode. p184
 8000ec8:	4a12      	ldr	r2, [pc, #72]	; (8000f14 <USART2_init+0x7c>)
 8000eca:	4b12      	ldr	r3, [pc, #72]	; (8000f14 <USART2_init+0x7c>)
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	f043 0320 	orr.w	r3, r3, #32
 8000ed2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER|=0x00000080; 	//MODER2=PA3(RX) to mode 10=alternate function mode. p184
 8000ed4:	4a0f      	ldr	r2, [pc, #60]	; (8000f14 <USART2_init+0x7c>)
 8000ed6:	4b0f      	ldr	r3, [pc, #60]	; (8000f14 <USART2_init+0x7c>)
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000ede:	6013      	str	r3, [r2, #0]

	USART2->BRR = 0x00000116;	//115200 BAUD and crystal 32MHz. p710, 116
 8000ee0:	4b0d      	ldr	r3, [pc, #52]	; (8000f18 <USART2_init+0x80>)
 8000ee2:	f44f 728b 	mov.w	r2, #278	; 0x116
 8000ee6:	609a      	str	r2, [r3, #8]
	USART2->CR1 = 0x00000008;	//TE bit. p739-740. Enable transmit
 8000ee8:	4b0b      	ldr	r3, [pc, #44]	; (8000f18 <USART2_init+0x80>)
 8000eea:	2208      	movs	r2, #8
 8000eec:	60da      	str	r2, [r3, #12]
	USART2->CR1 |= 0x00000004;	//RE bit. p739-740. Enable receiver
 8000eee:	4a0a      	ldr	r2, [pc, #40]	; (8000f18 <USART2_init+0x80>)
 8000ef0:	4b09      	ldr	r3, [pc, #36]	; (8000f18 <USART2_init+0x80>)
 8000ef2:	68db      	ldr	r3, [r3, #12]
 8000ef4:	f043 0304 	orr.w	r3, r3, #4
 8000ef8:	60d3      	str	r3, [r2, #12]
	USART2->CR1 |= 0x00002000;	//UE bit. p739-740. Uart enable
 8000efa:	4a07      	ldr	r2, [pc, #28]	; (8000f18 <USART2_init+0x80>)
 8000efc:	4b06      	ldr	r3, [pc, #24]	; (8000f18 <USART2_init+0x80>)
 8000efe:	68db      	ldr	r3, [r3, #12]
 8000f00:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000f04:	60d3      	str	r3, [r2, #12]
}
 8000f06:	bf00      	nop
 8000f08:	46bd      	mov	sp, r7
 8000f0a:	bc80      	pop	{r7}
 8000f0c:	4770      	bx	lr
 8000f0e:	bf00      	nop
 8000f10:	40023800 	.word	0x40023800
 8000f14:	40020000 	.word	0x40020000
 8000f18:	40004400 	.word	0x40004400

08000f1c <USART2_write>:


void USART2_write(char data)
{
 8000f1c:	b480      	push	{r7}
 8000f1e:	b083      	sub	sp, #12
 8000f20:	af00      	add	r7, sp, #0
 8000f22:	4603      	mov	r3, r0
 8000f24:	71fb      	strb	r3, [r7, #7]
	while(!(USART2->SR&0x0080)){} 	//TXE: Transmit data register empty. p736-737
 8000f26:	bf00      	nop
 8000f28:	4b06      	ldr	r3, [pc, #24]	; (8000f44 <USART2_write+0x28>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	d0f9      	beq.n	8000f28 <USART2_write+0xc>
		USART2->DR=(data);		//p739
 8000f34:	4a03      	ldr	r2, [pc, #12]	; (8000f44 <USART2_write+0x28>)
 8000f36:	79fb      	ldrb	r3, [r7, #7]
 8000f38:	6053      	str	r3, [r2, #4]
}
 8000f3a:	bf00      	nop
 8000f3c:	370c      	adds	r7, #12
 8000f3e:	46bd      	mov	sp, r7
 8000f40:	bc80      	pop	{r7}
 8000f42:	4770      	bx	lr
 8000f44:	40004400 	.word	0x40004400

08000f48 <USART2_write_buffer>:

void USART2_write_buffer(char* buffer)
{
 8000f48:	b580      	push	{r7, lr}
 8000f4a:	b082      	sub	sp, #8
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
	while(*(buffer) != '\0')
 8000f50:	e007      	b.n	8000f62 <USART2_write_buffer+0x1a>
	{
		USART2_write(*buffer);
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	781b      	ldrb	r3, [r3, #0]
 8000f56:	4618      	mov	r0, r3
 8000f58:	f7ff ffe0 	bl	8000f1c <USART2_write>
		buffer++;
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	3301      	adds	r3, #1
 8000f60:	607b      	str	r3, [r7, #4]
	while(*(buffer) != '\0')
 8000f62:	687b      	ldr	r3, [r7, #4]
 8000f64:	781b      	ldrb	r3, [r3, #0]
 8000f66:	2b00      	cmp	r3, #0
 8000f68:	d1f3      	bne.n	8000f52 <USART2_write_buffer+0xa>
	}
	USART2_write('\r');
 8000f6a:	200d      	movs	r0, #13
 8000f6c:	f7ff ffd6 	bl	8000f1c <USART2_write>
	USART2_write('\n');
 8000f70:	200a      	movs	r0, #10
 8000f72:	f7ff ffd3 	bl	8000f1c <USART2_write>
}
 8000f76:	bf00      	nop
 8000f78:	3708      	adds	r7, #8
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	bd80      	pop	{r7, pc}
	...

08000f80 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000f80:	b480      	push	{r7}
 8000f82:	b083      	sub	sp, #12
 8000f84:	af00      	add	r7, sp, #0
 8000f86:	4603      	mov	r3, r0
 8000f88:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8000f8a:	4908      	ldr	r1, [pc, #32]	; (8000fac <NVIC_EnableIRQ+0x2c>)
 8000f8c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f90:	095b      	lsrs	r3, r3, #5
 8000f92:	79fa      	ldrb	r2, [r7, #7]
 8000f94:	f002 021f 	and.w	r2, r2, #31
 8000f98:	2001      	movs	r0, #1
 8000f9a:	fa00 f202 	lsl.w	r2, r0, r2
 8000f9e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8000fa2:	bf00      	nop
 8000fa4:	370c      	adds	r7, #12
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bc80      	pop	{r7}
 8000faa:	4770      	bx	lr
 8000fac:	e000e100 	.word	0xe000e100

08000fb0 <DHT22_SWITCH_MODE_OUTPUT>:
static volatile uint8_t dht_status = 0;
static uint8_t skip_bits = 0;


void DHT22_SWITCH_MODE_OUTPUT()
{
 8000fb0:	b480      	push	{r7}
 8000fb2:	af00      	add	r7, sp, #0
	GPIOA->MODER &= ~GPIO_MODER_MODER7;
 8000fb4:	4a07      	ldr	r2, [pc, #28]	; (8000fd4 <DHT22_SWITCH_MODE_OUTPUT+0x24>)
 8000fb6:	4b07      	ldr	r3, [pc, #28]	; (8000fd4 <DHT22_SWITCH_MODE_OUTPUT+0x24>)
 8000fb8:	681b      	ldr	r3, [r3, #0]
 8000fba:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000fbe:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= GPIO_MODER_MODER7_0;
 8000fc0:	4a04      	ldr	r2, [pc, #16]	; (8000fd4 <DHT22_SWITCH_MODE_OUTPUT+0x24>)
 8000fc2:	4b04      	ldr	r3, [pc, #16]	; (8000fd4 <DHT22_SWITCH_MODE_OUTPUT+0x24>)
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000fca:	6013      	str	r3, [r2, #0]
}
 8000fcc:	bf00      	nop
 8000fce:	46bd      	mov	sp, r7
 8000fd0:	bc80      	pop	{r7}
 8000fd2:	4770      	bx	lr
 8000fd4:	40020000 	.word	0x40020000

08000fd8 <DHT22_SWITCH_MODE_INPUT>:

void DHT22_SWITCH_MODE_INPUT()
{
 8000fd8:	b480      	push	{r7}
 8000fda:	af00      	add	r7, sp, #0
	GPIOA->MODER &= ~GPIO_MODER_MODER7;
 8000fdc:	4a04      	ldr	r2, [pc, #16]	; (8000ff0 <DHT22_SWITCH_MODE_INPUT+0x18>)
 8000fde:	4b04      	ldr	r3, [pc, #16]	; (8000ff0 <DHT22_SWITCH_MODE_INPUT+0x18>)
 8000fe0:	681b      	ldr	r3, [r3, #0]
 8000fe2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000fe6:	6013      	str	r3, [r2, #0]
}
 8000fe8:	bf00      	nop
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bc80      	pop	{r7}
 8000fee:	4770      	bx	lr
 8000ff0:	40020000 	.word	0x40020000

08000ff4 <DHT22_init>:

void DHT22_init()
{
 8000ff4:	b580      	push	{r7, lr}
 8000ff6:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_SYSCFGEN;
 8000ff8:	4a12      	ldr	r2, [pc, #72]	; (8001044 <DHT22_init+0x50>)
 8000ffa:	4b12      	ldr	r3, [pc, #72]	; (8001044 <DHT22_init+0x50>)
 8000ffc:	6a1b      	ldr	r3, [r3, #32]
 8000ffe:	f043 0301 	orr.w	r3, r3, #1
 8001002:	6213      	str	r3, [r2, #32]
    SYSCFG->EXTICR[1] &= ~SYSCFG_EXTICR2_EXTI7_PA;
 8001004:	4a10      	ldr	r2, [pc, #64]	; (8001048 <DHT22_init+0x54>)
 8001006:	4b10      	ldr	r3, [pc, #64]	; (8001048 <DHT22_init+0x54>)
 8001008:	68db      	ldr	r3, [r3, #12]
 800100a:	60d3      	str	r3, [r2, #12]
    SYSCFG->EXTICR[1] |= SYSCFG_EXTICR2_EXTI7_PA;
 800100c:	4a0e      	ldr	r2, [pc, #56]	; (8001048 <DHT22_init+0x54>)
 800100e:	4b0e      	ldr	r3, [pc, #56]	; (8001048 <DHT22_init+0x54>)
 8001010:	68db      	ldr	r3, [r3, #12]
 8001012:	60d3      	str	r3, [r2, #12]

    EXTI->IMR |= EXTI_IMR_MR7;
 8001014:	4a0d      	ldr	r2, [pc, #52]	; (800104c <DHT22_init+0x58>)
 8001016:	4b0d      	ldr	r3, [pc, #52]	; (800104c <DHT22_init+0x58>)
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800101e:	6013      	str	r3, [r2, #0]
    EXTI->FTSR |= EXTI_FTSR_FT7;
 8001020:	4a0a      	ldr	r2, [pc, #40]	; (800104c <DHT22_init+0x58>)
 8001022:	4b0a      	ldr	r3, [pc, #40]	; (800104c <DHT22_init+0x58>)
 8001024:	68db      	ldr	r3, [r3, #12]
 8001026:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800102a:	60d3      	str	r3, [r2, #12]
    EXTI->RTSR |= EXTI_RTSR_RT7;
 800102c:	4a07      	ldr	r2, [pc, #28]	; (800104c <DHT22_init+0x58>)
 800102e:	4b07      	ldr	r3, [pc, #28]	; (800104c <DHT22_init+0x58>)
 8001030:	689b      	ldr	r3, [r3, #8]
 8001032:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001036:	6093      	str	r3, [r2, #8]

    NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001038:	2017      	movs	r0, #23
 800103a:	f7ff ffa1 	bl	8000f80 <NVIC_EnableIRQ>
}
 800103e:	bf00      	nop
 8001040:	bd80      	pop	{r7, pc}
 8001042:	bf00      	nop
 8001044:	40023800 	.word	0x40023800
 8001048:	40010000 	.word	0x40010000
 800104c:	40010400 	.word	0x40010400

08001050 <DHT22_read>:

int DHT22_read(char *buffer, int buffer_size)
{
 8001050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001052:	b08b      	sub	sp, #44	; 0x2c
 8001054:	af04      	add	r7, sp, #16
 8001056:	6078      	str	r0, [r7, #4]
 8001058:	6039      	str	r1, [r7, #0]
    uint8_t current_byte = 0;
 800105a:	2300      	movs	r3, #0
 800105c:	757b      	strb	r3, [r7, #21]
    uint8_t byte_list[5] = {0};
 800105e:	f107 0308 	add.w	r3, r7, #8
 8001062:	2200      	movs	r2, #0
 8001064:	601a      	str	r2, [r3, #0]
 8001066:	711a      	strb	r2, [r3, #4]

    DHT22_start();
 8001068:	f000 f8c0 	bl	80011ec <DHT22_start>

    if (DHT22_wait_response())
 800106c:	f000 f8e2 	bl	8001234 <DHT22_wait_response>
 8001070:	4603      	mov	r3, r0
 8001072:	2b00      	cmp	r3, #0
 8001074:	d004      	beq.n	8001080 <DHT22_read+0x30>
    {
        USART2_write_buffer("DHT22 Not ready to send data!");
 8001076:	4853      	ldr	r0, [pc, #332]	; (80011c4 <DHT22_read+0x174>)
 8001078:	f7ff ff66 	bl	8000f48 <USART2_write_buffer>
        return DHT_ERROR;
 800107c:	2301      	movs	r3, #1
 800107e:	e09d      	b.n	80011bc <DHT22_read+0x16c>
    }

    SysTick->LOAD = TIMEOUT_20_MS - 1; // Set maximum allowable wait time
 8001080:	4b51      	ldr	r3, [pc, #324]	; (80011c8 <DHT22_read+0x178>)
 8001082:	4a52      	ldr	r2, [pc, #328]	; (80011cc <DHT22_read+0x17c>)
 8001084:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 8001086:	4b50      	ldr	r3, [pc, #320]	; (80011c8 <DHT22_read+0x178>)
 8001088:	2200      	movs	r2, #0
 800108a:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = 5;
 800108c:	4b4e      	ldr	r3, [pc, #312]	; (80011c8 <DHT22_read+0x178>)
 800108e:	2205      	movs	r2, #5
 8001090:	601a      	str	r2, [r3, #0]

    // Wait for data
    while(dht_status == DHT_MEASURING)
 8001092:	e00a      	b.n	80010aa <DHT22_read+0x5a>
    {
        if ((SysTick->CTRL) & 0x10000)
 8001094:	4b4c      	ldr	r3, [pc, #304]	; (80011c8 <DHT22_read+0x178>)
 8001096:	681b      	ldr	r3, [r3, #0]
 8001098:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800109c:	2b00      	cmp	r3, #0
 800109e:	d004      	beq.n	80010aa <DHT22_read+0x5a>
        {
    		USART2_write_buffer("DHT22 measurement error :/");
 80010a0:	484b      	ldr	r0, [pc, #300]	; (80011d0 <DHT22_read+0x180>)
 80010a2:	f7ff ff51 	bl	8000f48 <USART2_write_buffer>
            return DHT_ERROR;
 80010a6:	2301      	movs	r3, #1
 80010a8:	e088      	b.n	80011bc <DHT22_read+0x16c>
    while(dht_status == DHT_MEASURING)
 80010aa:	4b4a      	ldr	r3, [pc, #296]	; (80011d4 <DHT22_read+0x184>)
 80010ac:	781b      	ldrb	r3, [r3, #0]
 80010ae:	b2db      	uxtb	r3, r3
 80010b0:	2b03      	cmp	r3, #3
 80010b2:	d0ef      	beq.n	8001094 <DHT22_read+0x44>
        }
    }

	SysTick->CTRL = 0;
 80010b4:	4b44      	ldr	r3, [pc, #272]	; (80011c8 <DHT22_read+0x178>)
 80010b6:	2200      	movs	r2, #0
 80010b8:	601a      	str	r2, [r3, #0]

    if (dht_status == DHT_READY)
 80010ba:	4b46      	ldr	r3, [pc, #280]	; (80011d4 <DHT22_read+0x184>)
 80010bc:	781b      	ldrb	r3, [r3, #0]
 80010be:	b2db      	uxtb	r3, r3
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d17a      	bne.n	80011ba <DHT22_read+0x16a>
    {
	    EXTI->IMR &= ~EXTI_IMR_MR7;
 80010c4:	4a44      	ldr	r2, [pc, #272]	; (80011d8 <DHT22_read+0x188>)
 80010c6:	4b44      	ldr	r3, [pc, #272]	; (80011d8 <DHT22_read+0x188>)
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80010ce:	6013      	str	r3, [r2, #0]
    	dht_status = DHT_NOT_READY;
 80010d0:	4b40      	ldr	r3, [pc, #256]	; (80011d4 <DHT22_read+0x184>)
 80010d2:	2202      	movs	r2, #2
 80010d4:	701a      	strb	r2, [r3, #0]

    	DHT22_decode_pulses(pulses, byte_list);
 80010d6:	f107 0308 	add.w	r3, r7, #8
 80010da:	4619      	mov	r1, r3
 80010dc:	483f      	ldr	r0, [pc, #252]	; (80011dc <DHT22_read+0x18c>)
 80010de:	f000 f8f9 	bl	80012d4 <DHT22_decode_pulses>

		uint8_t humidity_int = byte_list[0];
 80010e2:	7a3b      	ldrb	r3, [r7, #8]
 80010e4:	753b      	strb	r3, [r7, #20]
		uint8_t humidity_dec = byte_list[1];
 80010e6:	7a7b      	ldrb	r3, [r7, #9]
 80010e8:	74fb      	strb	r3, [r7, #19]
		uint8_t temp_int = byte_list[2];
 80010ea:	7abb      	ldrb	r3, [r7, #10]
 80010ec:	74bb      	strb	r3, [r7, #18]
		uint8_t temp_dec = byte_list[3];
 80010ee:	7afb      	ldrb	r3, [r7, #11]
 80010f0:	747b      	strb	r3, [r7, #17]
		uint8_t checksum = byte_list[4];
 80010f2:	7b3b      	ldrb	r3, [r7, #12]
 80010f4:	743b      	strb	r3, [r7, #16]

		uint16_t humidity = (humidity_int << 8) | humidity_dec;
 80010f6:	7d3b      	ldrb	r3, [r7, #20]
 80010f8:	021b      	lsls	r3, r3, #8
 80010fa:	b21a      	sxth	r2, r3
 80010fc:	7cfb      	ldrb	r3, [r7, #19]
 80010fe:	b21b      	sxth	r3, r3
 8001100:	4313      	orrs	r3, r2
 8001102:	b21b      	sxth	r3, r3
 8001104:	81fb      	strh	r3, [r7, #14]
		uint16_t temperature = (temp_int << 8) | temp_dec;
 8001106:	7cbb      	ldrb	r3, [r7, #18]
 8001108:	021b      	lsls	r3, r3, #8
 800110a:	b21a      	sxth	r2, r3
 800110c:	7c7b      	ldrb	r3, [r7, #17]
 800110e:	b21b      	sxth	r3, r3
 8001110:	4313      	orrs	r3, r2
 8001112:	b21b      	sxth	r3, r3
 8001114:	82fb      	strh	r3, [r7, #22]
	    if (temp_int & 0x80) temperature = -temperature;
 8001116:	f997 3012 	ldrsb.w	r3, [r7, #18]
 800111a:	2b00      	cmp	r3, #0
 800111c:	da02      	bge.n	8001124 <DHT22_read+0xd4>
 800111e:	8afb      	ldrh	r3, [r7, #22]
 8001120:	425b      	negs	r3, r3
 8001122:	82fb      	strh	r3, [r7, #22]

		uint8_t expected_checksum = humidity_int + humidity_dec + temp_int + temp_dec;
 8001124:	7d3a      	ldrb	r2, [r7, #20]
 8001126:	7cfb      	ldrb	r3, [r7, #19]
 8001128:	4413      	add	r3, r2
 800112a:	b2da      	uxtb	r2, r3
 800112c:	7cbb      	ldrb	r3, [r7, #18]
 800112e:	4413      	add	r3, r2
 8001130:	b2da      	uxtb	r2, r3
 8001132:	7c7b      	ldrb	r3, [r7, #17]
 8001134:	4413      	add	r3, r2
 8001136:	737b      	strb	r3, [r7, #13]
		if (expected_checksum != checksum)
 8001138:	7b7a      	ldrb	r2, [r7, #13]
 800113a:	7c3b      	ldrb	r3, [r7, #16]
 800113c:	429a      	cmp	r2, r3
 800113e:	d00b      	beq.n	8001158 <DHT22_read+0x108>
		{
			snprintf(buffer, buffer_size, "Invalind checksum expected %.2X got %.2X", expected_checksum, checksum);
 8001140:	6839      	ldr	r1, [r7, #0]
 8001142:	7b7a      	ldrb	r2, [r7, #13]
 8001144:	7c3b      	ldrb	r3, [r7, #16]
 8001146:	9300      	str	r3, [sp, #0]
 8001148:	4613      	mov	r3, r2
 800114a:	4a25      	ldr	r2, [pc, #148]	; (80011e0 <DHT22_read+0x190>)
 800114c:	6878      	ldr	r0, [r7, #4]
 800114e:	f000 fbc7 	bl	80018e0 <snprintf>
			USART2_write_buffer(buffer);
 8001152:	6878      	ldr	r0, [r7, #4]
 8001154:	f7ff fef8 	bl	8000f48 <USART2_write_buffer>
		}

		snprintf(buffer, buffer_size, "Humidity %d.%d and temperature %d.%d", humidity / 10, humidity % 10, temperature / 10, temperature % 10);
 8001158:	6838      	ldr	r0, [r7, #0]
 800115a:	89fb      	ldrh	r3, [r7, #14]
 800115c:	4a21      	ldr	r2, [pc, #132]	; (80011e4 <DHT22_read+0x194>)
 800115e:	fba2 2303 	umull	r2, r3, r2, r3
 8001162:	08db      	lsrs	r3, r3, #3
 8001164:	b29b      	uxth	r3, r3
 8001166:	461e      	mov	r6, r3
 8001168:	89fa      	ldrh	r2, [r7, #14]
 800116a:	4b1e      	ldr	r3, [pc, #120]	; (80011e4 <DHT22_read+0x194>)
 800116c:	fba3 1302 	umull	r1, r3, r3, r2
 8001170:	08d9      	lsrs	r1, r3, #3
 8001172:	460b      	mov	r3, r1
 8001174:	009b      	lsls	r3, r3, #2
 8001176:	440b      	add	r3, r1
 8001178:	005b      	lsls	r3, r3, #1
 800117a:	1ad3      	subs	r3, r2, r3
 800117c:	b29b      	uxth	r3, r3
 800117e:	461c      	mov	r4, r3
 8001180:	8afb      	ldrh	r3, [r7, #22]
 8001182:	4a18      	ldr	r2, [pc, #96]	; (80011e4 <DHT22_read+0x194>)
 8001184:	fba2 2303 	umull	r2, r3, r2, r3
 8001188:	08db      	lsrs	r3, r3, #3
 800118a:	b29b      	uxth	r3, r3
 800118c:	461d      	mov	r5, r3
 800118e:	8afa      	ldrh	r2, [r7, #22]
 8001190:	4b14      	ldr	r3, [pc, #80]	; (80011e4 <DHT22_read+0x194>)
 8001192:	fba3 1302 	umull	r1, r3, r3, r2
 8001196:	08d9      	lsrs	r1, r3, #3
 8001198:	460b      	mov	r3, r1
 800119a:	009b      	lsls	r3, r3, #2
 800119c:	440b      	add	r3, r1
 800119e:	005b      	lsls	r3, r3, #1
 80011a0:	1ad3      	subs	r3, r2, r3
 80011a2:	b29b      	uxth	r3, r3
 80011a4:	9302      	str	r3, [sp, #8]
 80011a6:	9501      	str	r5, [sp, #4]
 80011a8:	9400      	str	r4, [sp, #0]
 80011aa:	4633      	mov	r3, r6
 80011ac:	4a0e      	ldr	r2, [pc, #56]	; (80011e8 <DHT22_read+0x198>)
 80011ae:	4601      	mov	r1, r0
 80011b0:	6878      	ldr	r0, [r7, #4]
 80011b2:	f000 fb95 	bl	80018e0 <snprintf>

		return DHT_READY;
 80011b6:	2300      	movs	r3, #0
 80011b8:	e000      	b.n	80011bc <DHT22_read+0x16c>
    }

    return DHT_ERROR;
 80011ba:	2301      	movs	r3, #1
}
 80011bc:	4618      	mov	r0, r3
 80011be:	371c      	adds	r7, #28
 80011c0:	46bd      	mov	sp, r7
 80011c2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011c4:	08004718 	.word	0x08004718
 80011c8:	e000e010 	.word	0xe000e010
 80011cc:	0009c3ff 	.word	0x0009c3ff
 80011d0:	08004738 	.word	0x08004738
 80011d4:	200006b9 	.word	0x200006b9
 80011d8:	40010400 	.word	0x40010400
 80011dc:	20000690 	.word	0x20000690
 80011e0:	08004754 	.word	0x08004754
 80011e4:	cccccccd 	.word	0xcccccccd
 80011e8:	08004780 	.word	0x08004780

080011ec <DHT22_start>:

void DHT22_start()
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	af00      	add	r7, sp, #0
    EXTI->IMR &= ~EXTI_IMR_MR7;
 80011f0:	4a0e      	ldr	r2, [pc, #56]	; (800122c <DHT22_start+0x40>)
 80011f2:	4b0e      	ldr	r3, [pc, #56]	; (800122c <DHT22_start+0x40>)
 80011f4:	681b      	ldr	r3, [r3, #0]
 80011f6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80011fa:	6013      	str	r3, [r2, #0]
    // MCU PULL LOW ~20ms
    DHT22_SWITCH_MODE_OUTPUT();
 80011fc:	f7ff fed8 	bl	8000fb0 <DHT22_SWITCH_MODE_OUTPUT>
    GPIOA->ODR &= ~GPIO_ODR_ODR_7;
 8001200:	4a0b      	ldr	r2, [pc, #44]	; (8001230 <DHT22_start+0x44>)
 8001202:	4b0b      	ldr	r3, [pc, #44]	; (8001230 <DHT22_start+0x44>)
 8001204:	695b      	ldr	r3, [r3, #20]
 8001206:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800120a:	6153      	str	r3, [r2, #20]
    delay_ms(20);
 800120c:	2014      	movs	r0, #20
 800120e:	f000 f951 	bl	80014b4 <delay_ms>

    // MCU RELEASE LINE 20-40us
    GPIOA->ODR |= GPIO_ODR_ODR_7;
 8001212:	4a07      	ldr	r2, [pc, #28]	; (8001230 <DHT22_start+0x44>)
 8001214:	4b06      	ldr	r3, [pc, #24]	; (8001230 <DHT22_start+0x44>)
 8001216:	695b      	ldr	r3, [r3, #20]
 8001218:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800121c:	6153      	str	r3, [r2, #20]
    DHT22_SWITCH_MODE_INPUT();
 800121e:	f7ff fedb 	bl	8000fd8 <DHT22_SWITCH_MODE_INPUT>
	delay_us(20);
 8001222:	2014      	movs	r0, #20
 8001224:	f000 f920 	bl	8001468 <delay_us>
}
 8001228:	bf00      	nop
 800122a:	bd80      	pop	{r7, pc}
 800122c:	40010400 	.word	0x40010400
 8001230:	40020000 	.word	0x40020000

08001234 <DHT22_wait_response>:

int DHT22_wait_response()
{
 8001234:	b580      	push	{r7, lr}
 8001236:	af00      	add	r7, sp, #0
    SysTick->LOAD = TIMEOUT_90_US - 1; // Set maximum allowable wait time
 8001238:	4b21      	ldr	r3, [pc, #132]	; (80012c0 <DHT22_wait_response+0x8c>)
 800123a:	f640 323f 	movw	r2, #2879	; 0xb3f
 800123e:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 8001240:	4b1f      	ldr	r3, [pc, #124]	; (80012c0 <DHT22_wait_response+0x8c>)
 8001242:	2200      	movs	r2, #0
 8001244:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = 5;
 8001246:	4b1e      	ldr	r3, [pc, #120]	; (80012c0 <DHT22_wait_response+0x8c>)
 8001248:	2205      	movs	r2, #5
 800124a:	601a      	str	r2, [r3, #0]

    while (!(GPIOA->IDR & GPIO_IDR_IDR_7))
 800124c:	e00a      	b.n	8001264 <DHT22_wait_response+0x30>
    {
        if ((SysTick->CTRL) & 0x10000)
 800124e:	4b1c      	ldr	r3, [pc, #112]	; (80012c0 <DHT22_wait_response+0x8c>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001256:	2b00      	cmp	r3, #0
 8001258:	d004      	beq.n	8001264 <DHT22_wait_response+0x30>
        {
    		USART2_write_buffer("Timeout error when waiting for DHT22 response PULL LOW");
 800125a:	481a      	ldr	r0, [pc, #104]	; (80012c4 <DHT22_wait_response+0x90>)
 800125c:	f7ff fe74 	bl	8000f48 <USART2_write_buffer>
            return DHT_ERROR;
 8001260:	2301      	movs	r3, #1
 8001262:	e02b      	b.n	80012bc <DHT22_wait_response+0x88>
    while (!(GPIOA->IDR & GPIO_IDR_IDR_7))
 8001264:	4b18      	ldr	r3, [pc, #96]	; (80012c8 <DHT22_wait_response+0x94>)
 8001266:	691b      	ldr	r3, [r3, #16]
 8001268:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800126c:	2b00      	cmp	r3, #0
 800126e:	d0ee      	beq.n	800124e <DHT22_wait_response+0x1a>
        }
    }

    EXTI->IMR |= EXTI_IMR_MR7;
 8001270:	4a16      	ldr	r2, [pc, #88]	; (80012cc <DHT22_wait_response+0x98>)
 8001272:	4b16      	ldr	r3, [pc, #88]	; (80012cc <DHT22_wait_response+0x98>)
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800127a:	6013      	str	r3, [r2, #0]

    SysTick->LOAD = TIMEOUT_90_US - 1; // Set maximum allowable wait time 85µs
 800127c:	4b10      	ldr	r3, [pc, #64]	; (80012c0 <DHT22_wait_response+0x8c>)
 800127e:	f640 323f 	movw	r2, #2879	; 0xb3f
 8001282:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 8001284:	4b0e      	ldr	r3, [pc, #56]	; (80012c0 <DHT22_wait_response+0x8c>)
 8001286:	2200      	movs	r2, #0
 8001288:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = 5;
 800128a:	4b0d      	ldr	r3, [pc, #52]	; (80012c0 <DHT22_wait_response+0x8c>)
 800128c:	2205      	movs	r2, #5
 800128e:	601a      	str	r2, [r3, #0]
    while (GPIOA->IDR & GPIO_IDR_IDR_7)
 8001290:	e00a      	b.n	80012a8 <DHT22_wait_response+0x74>
    {
        if ((SysTick->CTRL) & 0x10000)
 8001292:	4b0b      	ldr	r3, [pc, #44]	; (80012c0 <DHT22_wait_response+0x8c>)
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800129a:	2b00      	cmp	r3, #0
 800129c:	d004      	beq.n	80012a8 <DHT22_wait_response+0x74>
        {
    		USART2_write_buffer("Timeout error when waiting for DHT22 response GET READY");
 800129e:	480c      	ldr	r0, [pc, #48]	; (80012d0 <DHT22_wait_response+0x9c>)
 80012a0:	f7ff fe52 	bl	8000f48 <USART2_write_buffer>
            return DHT_ERROR;
 80012a4:	2301      	movs	r3, #1
 80012a6:	e009      	b.n	80012bc <DHT22_wait_response+0x88>
    while (GPIOA->IDR & GPIO_IDR_IDR_7)
 80012a8:	4b07      	ldr	r3, [pc, #28]	; (80012c8 <DHT22_wait_response+0x94>)
 80012aa:	691b      	ldr	r3, [r3, #16]
 80012ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80012b0:	2b00      	cmp	r3, #0
 80012b2:	d1ee      	bne.n	8001292 <DHT22_wait_response+0x5e>
        }
    }

    SysTick->CTRL = 0;
 80012b4:	4b02      	ldr	r3, [pc, #8]	; (80012c0 <DHT22_wait_response+0x8c>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	601a      	str	r2, [r3, #0]

    return 0;
 80012ba:	2300      	movs	r3, #0
}
 80012bc:	4618      	mov	r0, r3
 80012be:	bd80      	pop	{r7, pc}
 80012c0:	e000e010 	.word	0xe000e010
 80012c4:	080047a8 	.word	0x080047a8
 80012c8:	40020000 	.word	0x40020000
 80012cc:	40010400 	.word	0x40010400
 80012d0:	080047e0 	.word	0x080047e0

080012d4 <DHT22_decode_pulses>:

void DHT22_decode_pulses(volatile uint8_t *pulses, uint8_t *byte_list)
{
 80012d4:	b480      	push	{r7}
 80012d6:	b085      	sub	sp, #20
 80012d8:	af00      	add	r7, sp, #0
 80012da:	6078      	str	r0, [r7, #4]
 80012dc:	6039      	str	r1, [r7, #0]
    uint8_t current_byte = 0;
 80012de:	2300      	movs	r3, #0
 80012e0:	73fb      	strb	r3, [r7, #15]

    for (int bit = 1; bit <= BIT_COUNT; bit++)  // Fix: Use '<=' to capture all 40 bits
 80012e2:	2301      	movs	r3, #1
 80012e4:	60bb      	str	r3, [r7, #8]
 80012e6:	e02c      	b.n	8001342 <DHT22_decode_pulses+0x6e>
    {
        if (pulses[bit] > 20 && pulses[bit] < 32)
 80012e8:	68bb      	ldr	r3, [r7, #8]
 80012ea:	687a      	ldr	r2, [r7, #4]
 80012ec:	4413      	add	r3, r2
 80012ee:	781b      	ldrb	r3, [r3, #0]
 80012f0:	b2db      	uxtb	r3, r3
 80012f2:	2b14      	cmp	r3, #20
 80012f4:	d90a      	bls.n	800130c <DHT22_decode_pulses+0x38>
 80012f6:	68bb      	ldr	r3, [r7, #8]
 80012f8:	687a      	ldr	r2, [r7, #4]
 80012fa:	4413      	add	r3, r2
 80012fc:	781b      	ldrb	r3, [r3, #0]
 80012fe:	b2db      	uxtb	r3, r3
 8001300:	2b1f      	cmp	r3, #31
 8001302:	d803      	bhi.n	800130c <DHT22_decode_pulses+0x38>
        {
            current_byte = (current_byte << 1) | 0;
 8001304:	7bfb      	ldrb	r3, [r7, #15]
 8001306:	005b      	lsls	r3, r3, #1
 8001308:	73fb      	strb	r3, [r7, #15]
 800130a:	e006      	b.n	800131a <DHT22_decode_pulses+0x46>
        }
        else
        {
            current_byte = (current_byte << 1) | 1;
 800130c:	7bfb      	ldrb	r3, [r7, #15]
 800130e:	005b      	lsls	r3, r3, #1
 8001310:	b25b      	sxtb	r3, r3
 8001312:	f043 0301 	orr.w	r3, r3, #1
 8001316:	b25b      	sxtb	r3, r3
 8001318:	73fb      	strb	r3, [r7, #15]
        }

        if ((bit % 8) == 0)  // Fix: Store byte correctly after every 8 bits
 800131a:	68bb      	ldr	r3, [r7, #8]
 800131c:	f003 0307 	and.w	r3, r3, #7
 8001320:	2b00      	cmp	r3, #0
 8001322:	d10b      	bne.n	800133c <DHT22_decode_pulses+0x68>
        {
            byte_list[(bit / 8) - 1] = current_byte;
 8001324:	68bb      	ldr	r3, [r7, #8]
 8001326:	2b00      	cmp	r3, #0
 8001328:	da00      	bge.n	800132c <DHT22_decode_pulses+0x58>
 800132a:	3307      	adds	r3, #7
 800132c:	10db      	asrs	r3, r3, #3
 800132e:	3b01      	subs	r3, #1
 8001330:	683a      	ldr	r2, [r7, #0]
 8001332:	4413      	add	r3, r2
 8001334:	7bfa      	ldrb	r2, [r7, #15]
 8001336:	701a      	strb	r2, [r3, #0]
            current_byte = 0;
 8001338:	2300      	movs	r3, #0
 800133a:	73fb      	strb	r3, [r7, #15]
    for (int bit = 1; bit <= BIT_COUNT; bit++)  // Fix: Use '<=' to capture all 40 bits
 800133c:	68bb      	ldr	r3, [r7, #8]
 800133e:	3301      	adds	r3, #1
 8001340:	60bb      	str	r3, [r7, #8]
 8001342:	68bb      	ldr	r3, [r7, #8]
 8001344:	2b29      	cmp	r3, #41	; 0x29
 8001346:	ddcf      	ble.n	80012e8 <DHT22_decode_pulses+0x14>
        }
    }
}
 8001348:	bf00      	nop
 800134a:	3714      	adds	r7, #20
 800134c:	46bd      	mov	sp, r7
 800134e:	bc80      	pop	{r7}
 8001350:	4770      	bx	lr
	...

08001354 <DHT22_IRQHandler>:


void DHT22_IRQHandler()
{
 8001354:	b480      	push	{r7}
 8001356:	b083      	sub	sp, #12
 8001358:	af00      	add	r7, sp, #0
	static uint8_t index = 0;
	static uint16_t last_time = 0;
	uint16_t now = TIM2->CNT;
 800135a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800135e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001360:	80fb      	strh	r3, [r7, #6]
	uint16_t pulse_width;
	//uint16_t pulse_width = now - last_time;

	dht_status = DHT_MEASURING;
 8001362:	4b25      	ldr	r3, [pc, #148]	; (80013f8 <DHT22_IRQHandler+0xa4>)
 8001364:	2203      	movs	r2, #3
 8001366:	701a      	strb	r2, [r3, #0]

	if (GPIOA->IDR & GPIO_IDR_IDR_7) // Rising edge
 8001368:	4b24      	ldr	r3, [pc, #144]	; (80013fc <DHT22_IRQHandler+0xa8>)
 800136a:	691b      	ldr	r3, [r3, #16]
 800136c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001370:	2b00      	cmp	r3, #0
 8001372:	d009      	beq.n	8001388 <DHT22_IRQHandler+0x34>
	{
		last_time = now;
 8001374:	4a22      	ldr	r2, [pc, #136]	; (8001400 <DHT22_IRQHandler+0xac>)
 8001376:	88fb      	ldrh	r3, [r7, #6]
 8001378:	8013      	strh	r3, [r2, #0]
		GPIOA->ODR |= GPIO_ODR_ODR_5;
 800137a:	4a20      	ldr	r2, [pc, #128]	; (80013fc <DHT22_IRQHandler+0xa8>)
 800137c:	4b1f      	ldr	r3, [pc, #124]	; (80013fc <DHT22_IRQHandler+0xa8>)
 800137e:	695b      	ldr	r3, [r3, #20]
 8001380:	f043 0320 	orr.w	r3, r3, #32
 8001384:	6153      	str	r3, [r2, #20]
 8001386:	e025      	b.n	80013d4 <DHT22_IRQHandler+0x80>
	}

	else // Falling edge
	{
		pulse_width = (now >= last_time) ? (now - last_time) : (0xFFFF - last_time + now);
 8001388:	4b1d      	ldr	r3, [pc, #116]	; (8001400 <DHT22_IRQHandler+0xac>)
 800138a:	881b      	ldrh	r3, [r3, #0]
 800138c:	88fa      	ldrh	r2, [r7, #6]
 800138e:	429a      	cmp	r2, r3
 8001390:	d305      	bcc.n	800139e <DHT22_IRQHandler+0x4a>
 8001392:	4b1b      	ldr	r3, [pc, #108]	; (8001400 <DHT22_IRQHandler+0xac>)
 8001394:	881b      	ldrh	r3, [r3, #0]
 8001396:	88fa      	ldrh	r2, [r7, #6]
 8001398:	1ad3      	subs	r3, r2, r3
 800139a:	b29b      	uxth	r3, r3
 800139c:	e006      	b.n	80013ac <DHT22_IRQHandler+0x58>
 800139e:	4b18      	ldr	r3, [pc, #96]	; (8001400 <DHT22_IRQHandler+0xac>)
 80013a0:	881b      	ldrh	r3, [r3, #0]
 80013a2:	88fa      	ldrh	r2, [r7, #6]
 80013a4:	1ad3      	subs	r3, r2, r3
 80013a6:	b29b      	uxth	r3, r3
 80013a8:	3b01      	subs	r3, #1
 80013aa:	b29b      	uxth	r3, r3
 80013ac:	80bb      	strh	r3, [r7, #4]
		pulses[index] = pulse_width;
 80013ae:	4b15      	ldr	r3, [pc, #84]	; (8001404 <DHT22_IRQHandler+0xb0>)
 80013b0:	781b      	ldrb	r3, [r3, #0]
 80013b2:	461a      	mov	r2, r3
 80013b4:	88bb      	ldrh	r3, [r7, #4]
 80013b6:	b2d9      	uxtb	r1, r3
 80013b8:	4b13      	ldr	r3, [pc, #76]	; (8001408 <DHT22_IRQHandler+0xb4>)
 80013ba:	5499      	strb	r1, [r3, r2]
		index++;
 80013bc:	4b11      	ldr	r3, [pc, #68]	; (8001404 <DHT22_IRQHandler+0xb0>)
 80013be:	781b      	ldrb	r3, [r3, #0]
 80013c0:	3301      	adds	r3, #1
 80013c2:	b2da      	uxtb	r2, r3
 80013c4:	4b0f      	ldr	r3, [pc, #60]	; (8001404 <DHT22_IRQHandler+0xb0>)
 80013c6:	701a      	strb	r2, [r3, #0]
		GPIOA->ODR &= ~GPIO_ODR_ODR_5;
 80013c8:	4a0c      	ldr	r2, [pc, #48]	; (80013fc <DHT22_IRQHandler+0xa8>)
 80013ca:	4b0c      	ldr	r3, [pc, #48]	; (80013fc <DHT22_IRQHandler+0xa8>)
 80013cc:	695b      	ldr	r3, [r3, #20]
 80013ce:	f023 0320 	bic.w	r3, r3, #32
 80013d2:	6153      	str	r3, [r2, #20]
	}

	if (index >= BIT_COUNT)
 80013d4:	4b0b      	ldr	r3, [pc, #44]	; (8001404 <DHT22_IRQHandler+0xb0>)
 80013d6:	781b      	ldrb	r3, [r3, #0]
 80013d8:	2b28      	cmp	r3, #40	; 0x28
 80013da:	d905      	bls.n	80013e8 <DHT22_IRQHandler+0x94>
	{
		index = 0;
 80013dc:	4b09      	ldr	r3, [pc, #36]	; (8001404 <DHT22_IRQHandler+0xb0>)
 80013de:	2200      	movs	r2, #0
 80013e0:	701a      	strb	r2, [r3, #0]
		dht_status = DHT_READY;
 80013e2:	4b05      	ldr	r3, [pc, #20]	; (80013f8 <DHT22_IRQHandler+0xa4>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	701a      	strb	r2, [r3, #0]
	}

	EXTI->PR = EXTI_PR_PR7;
 80013e8:	4b08      	ldr	r3, [pc, #32]	; (800140c <DHT22_IRQHandler+0xb8>)
 80013ea:	2280      	movs	r2, #128	; 0x80
 80013ec:	615a      	str	r2, [r3, #20]
}
 80013ee:	bf00      	nop
 80013f0:	370c      	adds	r7, #12
 80013f2:	46bd      	mov	sp, r7
 80013f4:	bc80      	pop	{r7}
 80013f6:	4770      	bx	lr
 80013f8:	200006b9 	.word	0x200006b9
 80013fc:	40020000 	.word	0x40020000
 8001400:	200006ba 	.word	0x200006ba
 8001404:	200006bc 	.word	0x200006bc
 8001408:	20000690 	.word	0x20000690
 800140c:	40010400 	.word	0x40010400

08001410 <LMT84LP_init>:
#define T_MIN -50.0f
#define U_MIN 1.299f
#define U_MAX 0.183f

void LMT84LP_init()
{
 8001410:	b480      	push	{r7}
 8001412:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8001414:	4a07      	ldr	r2, [pc, #28]	; (8001434 <LMT84LP_init+0x24>)
 8001416:	4b07      	ldr	r3, [pc, #28]	; (8001434 <LMT84LP_init+0x24>)
 8001418:	69db      	ldr	r3, [r3, #28]
 800141a:	f043 0301 	orr.w	r3, r3, #1
 800141e:	61d3      	str	r3, [r2, #28]
	GPIOA->MODER |= GPIO_MODER_MODER0;
 8001420:	4a05      	ldr	r2, [pc, #20]	; (8001438 <LMT84LP_init+0x28>)
 8001422:	4b05      	ldr	r3, [pc, #20]	; (8001438 <LMT84LP_init+0x28>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	f043 0303 	orr.w	r3, r3, #3
 800142a:	6013      	str	r3, [r2, #0]
}
 800142c:	bf00      	nop
 800142e:	46bd      	mov	sp, r7
 8001430:	bc80      	pop	{r7}
 8001432:	4770      	bx	lr
 8001434:	40023800 	.word	0x40023800
 8001438:	40020000 	.word	0x40020000

0800143c <NSL19M51_init>:
#include <math.h>

// PIN PA1

void NSL19M51_init()
{
 800143c:	b480      	push	{r7}
 800143e:	af00      	add	r7, sp, #0
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8001440:	4a07      	ldr	r2, [pc, #28]	; (8001460 <NSL19M51_init+0x24>)
 8001442:	4b07      	ldr	r3, [pc, #28]	; (8001460 <NSL19M51_init+0x24>)
 8001444:	69db      	ldr	r3, [r3, #28]
 8001446:	f043 0301 	orr.w	r3, r3, #1
 800144a:	61d3      	str	r3, [r2, #28]
	GPIOA->MODER |= GPIO_MODER_MODER1;
 800144c:	4a05      	ldr	r2, [pc, #20]	; (8001464 <NSL19M51_init+0x28>)
 800144e:	4b05      	ldr	r3, [pc, #20]	; (8001464 <NSL19M51_init+0x28>)
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	f043 030c 	orr.w	r3, r3, #12
 8001456:	6013      	str	r3, [r2, #0]
}
 8001458:	bf00      	nop
 800145a:	46bd      	mov	sp, r7
 800145c:	bc80      	pop	{r7}
 800145e:	4770      	bx	lr
 8001460:	40023800 	.word	0x40023800
 8001464:	40020000 	.word	0x40020000

08001468 <delay_us>:
#include "timing.h"
#include "stm32l1xx.h"

void delay_us(unsigned long delay)
{
 8001468:	b480      	push	{r7}
 800146a:	b085      	sub	sp, #20
 800146c:	af00      	add	r7, sp, #0
 800146e:	6078      	str	r0, [r7, #4]
	unsigned long i = 0;
 8001470:	2300      	movs	r3, #0
 8001472:	60fb      	str	r3, [r7, #12]
	SysTick->LOAD = 32 - 1; //32 000 000 = 1s so 32 = 1 us
 8001474:	4b0e      	ldr	r3, [pc, #56]	; (80014b0 <delay_us+0x48>)
 8001476:	221f      	movs	r2, #31
 8001478:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 800147a:	4b0d      	ldr	r3, [pc, #52]	; (80014b0 <delay_us+0x48>)
 800147c:	2200      	movs	r2, #0
 800147e:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = 5;
 8001480:	4b0b      	ldr	r3, [pc, #44]	; (80014b0 <delay_us+0x48>)
 8001482:	2205      	movs	r2, #5
 8001484:	601a      	str	r2, [r3, #0]

	  while(i < delay)
 8001486:	e009      	b.n	800149c <delay_us+0x34>
	  {
		  while(!((SysTick->CTRL) & 0x10000)){}
 8001488:	bf00      	nop
 800148a:	4b09      	ldr	r3, [pc, #36]	; (80014b0 <delay_us+0x48>)
 800148c:	681b      	ldr	r3, [r3, #0]
 800148e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001492:	2b00      	cmp	r3, #0
 8001494:	d0f9      	beq.n	800148a <delay_us+0x22>
		  i++;
 8001496:	68fb      	ldr	r3, [r7, #12]
 8001498:	3301      	adds	r3, #1
 800149a:	60fb      	str	r3, [r7, #12]
	  while(i < delay)
 800149c:	68fa      	ldr	r2, [r7, #12]
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	429a      	cmp	r2, r3
 80014a2:	d3f1      	bcc.n	8001488 <delay_us+0x20>
	  }
}
 80014a4:	bf00      	nop
 80014a6:	3714      	adds	r7, #20
 80014a8:	46bd      	mov	sp, r7
 80014aa:	bc80      	pop	{r7}
 80014ac:	4770      	bx	lr
 80014ae:	bf00      	nop
 80014b0:	e000e010 	.word	0xe000e010

080014b4 <delay_ms>:

void delay_ms(unsigned long delay)
{
 80014b4:	b480      	push	{r7}
 80014b6:	b085      	sub	sp, #20
 80014b8:	af00      	add	r7, sp, #0
 80014ba:	6078      	str	r0, [r7, #4]
	unsigned long i = 0;
 80014bc:	2300      	movs	r3, #0
 80014be:	60fb      	str	r3, [r7, #12]
	SysTick->LOAD = 32000 - 1; //32 000 000 = 1s so 32 000 = 1 ms
 80014c0:	4b0e      	ldr	r3, [pc, #56]	; (80014fc <delay_ms+0x48>)
 80014c2:	f647 42ff 	movw	r2, #31999	; 0x7cff
 80014c6:	605a      	str	r2, [r3, #4]
	SysTick->VAL = 0;
 80014c8:	4b0c      	ldr	r3, [pc, #48]	; (80014fc <delay_ms+0x48>)
 80014ca:	2200      	movs	r2, #0
 80014cc:	609a      	str	r2, [r3, #8]
	SysTick->CTRL = 5;
 80014ce:	4b0b      	ldr	r3, [pc, #44]	; (80014fc <delay_ms+0x48>)
 80014d0:	2205      	movs	r2, #5
 80014d2:	601a      	str	r2, [r3, #0]
		  
	while(i < delay)
 80014d4:	e009      	b.n	80014ea <delay_ms+0x36>
	{	
		while(!((SysTick->CTRL) & 0x10000)){} //M3 Generic User Guide p. 159
 80014d6:	bf00      	nop
 80014d8:	4b08      	ldr	r3, [pc, #32]	; (80014fc <delay_ms+0x48>)
 80014da:	681b      	ldr	r3, [r3, #0]
 80014dc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80014e0:	2b00      	cmp	r3, #0
 80014e2:	d0f9      	beq.n	80014d8 <delay_ms+0x24>
		i++;
 80014e4:	68fb      	ldr	r3, [r7, #12]
 80014e6:	3301      	adds	r3, #1
 80014e8:	60fb      	str	r3, [r7, #12]
	while(i < delay)
 80014ea:	68fa      	ldr	r2, [r7, #12]
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	429a      	cmp	r2, r3
 80014f0:	d3f1      	bcc.n	80014d6 <delay_ms+0x22>
	}
}
 80014f2:	bf00      	nop
 80014f4:	3714      	adds	r7, #20
 80014f6:	46bd      	mov	sp, r7
 80014f8:	bc80      	pop	{r7}
 80014fa:	4770      	bx	lr
 80014fc:	e000e010 	.word	0xe000e010

08001500 <SetSysClock>:
void SetSysClock(void)
{
 8001500:	b480      	push	{r7}
 8001502:	b083      	sub	sp, #12
 8001504:	af00      	add	r7, sp, #0
	uint32_t status = 0;
 8001506:	2300      	movs	r3, #0
 8001508:	607b      	str	r3, [r7, #4]

  /* Enable HSI */
  RCC->CR |= (uint32_t)1;
 800150a:	4a3d      	ldr	r2, [pc, #244]	; (8001600 <SetSysClock+0x100>)
 800150c:	4b3c      	ldr	r3, [pc, #240]	; (8001600 <SetSysClock+0x100>)
 800150e:	681b      	ldr	r3, [r3, #0]
 8001510:	f043 0301 	orr.w	r3, r3, #1
 8001514:	6013      	str	r3, [r2, #0]

  /* Wait till HSI is ready and if Time out is reached exit */
 while(!(RCC->CR & (uint32_t)2)){} //CR bit 1 HSIRDY sets when HSI oscillator is stable. p141
 8001516:	bf00      	nop
 8001518:	4b39      	ldr	r3, [pc, #228]	; (8001600 <SetSysClock+0x100>)
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	f003 0302 	and.w	r3, r3, #2
 8001520:	2b00      	cmp	r3, #0
 8001522:	d0f9      	beq.n	8001518 <SetSysClock+0x18>

  if ((RCC->CR & (uint32_t)2) != 0) //if CR bit 1 HSIDRY high when oscillator is stable.
 8001524:	4b36      	ldr	r3, [pc, #216]	; (8001600 <SetSysClock+0x100>)
 8001526:	681b      	ldr	r3, [r3, #0]
 8001528:	f003 0302 	and.w	r3, r3, #2
 800152c:	2b00      	cmp	r3, #0
 800152e:	d002      	beq.n	8001536 <SetSysClock+0x36>
  {
    status = 1;
 8001530:	2301      	movs	r3, #1
 8001532:	607b      	str	r3, [r7, #4]
 8001534:	e001      	b.n	800153a <SetSysClock+0x3a>
  }
  else
  {
    status = 0;
 8001536:	2300      	movs	r3, #0
 8001538:	607b      	str	r3, [r7, #4]
  }

  if (status == 1)
 800153a:	687b      	ldr	r3, [r7, #4]
 800153c:	2b01      	cmp	r3, #1
 800153e:	d10b      	bne.n	8001558 <SetSysClock+0x58>
  {
    /*  PLL configuration: PLLCLK = (HSI * 4)/2 = 32 MHz */
	  //PLLSCR bit 16, PLLMUL bits 18-21, PLLDIV bits 22,23.
	  //0000 0000 1111 1101 0000 0000 0000 0000 corresponding bits
	  //these bits PLLSRC, PLLMUL and PLLDIV cleared
	  RCC->CFGR &= ~(0x00FD0000);
 8001540:	4a2f      	ldr	r2, [pc, #188]	; (8001600 <SetSysClock+0x100>)
 8001542:	4b2f      	ldr	r3, [pc, #188]	; (8001600 <SetSysClock+0x100>)
 8001544:	689b      	ldr	r3, [r3, #8]
 8001546:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
 800154a:	6093      	str	r3, [r2, #8]
	  //PLLMUL must be 0001 when multiplication=4 and PLLDIV must be 01 when division=2
	  //PLLSCR bit 16 must be 1 --> HSE oscillator clock selected as PLL input clock (done in previous line)
	  //0000 0000 0100 0100 0000 0000 0000 0000
	  RCC->CFGR |= 0x00440000;
 800154c:	4a2c      	ldr	r2, [pc, #176]	; (8001600 <SetSysClock+0x100>)
 800154e:	4b2c      	ldr	r3, [pc, #176]	; (8001600 <SetSysClock+0x100>)
 8001550:	689b      	ldr	r3, [r3, #8]
 8001552:	f443 0388 	orr.w	r3, r3, #4456448	; 0x440000
 8001556:	6093      	str	r3, [r2, #8]
    configuration. User can add here some code to deal with this error */
  }
  
  /*64-bit access is configured by setting the ACC64 bit in the Flash access control register (FLASH_ACR).
   *This access mode accelerates the execution of program operations.*/
  FLASH->ACR |= (uint32_t)4; //ACC64 bit 2, 64-bit access. 64-bit access is used to improve the performance. p84
 8001558:	4a2a      	ldr	r2, [pc, #168]	; (8001604 <SetSysClock+0x104>)
 800155a:	4b2a      	ldr	r3, [pc, #168]	; (8001604 <SetSysClock+0x104>)
 800155c:	681b      	ldr	r3, [r3, #0]
 800155e:	f043 0304 	orr.w	r3, r3, #4
 8001562:	6013      	str	r3, [r2, #0]
    /*Prefetch is enabled by setting the PRFTEN bit in the FLASH_ACR register.
    *This feature is useful if at least one wait state is needed to access the Flash memory.
	*Figure 5 shows the execution of sequential 32-bit instructions*/
  FLASH->ACR |= (uint32_t)2; //PRFTEN bit 1, prefetch enable. p84
 8001564:	4a27      	ldr	r2, [pc, #156]	; (8001604 <SetSysClock+0x104>)
 8001566:	4b27      	ldr	r3, [pc, #156]	; (8001604 <SetSysClock+0x104>)
 8001568:	681b      	ldr	r3, [r3, #0]
 800156a:	f043 0302 	orr.w	r3, r3, #2
 800156e:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= (uint32_t)1; //LATENCY one wait state bit 0. One wait state enabled. p84. p59
 8001570:	4a24      	ldr	r2, [pc, #144]	; (8001604 <SetSysClock+0x104>)
 8001572:	4b24      	ldr	r3, [pc, #144]	; (8001604 <SetSysClock+0x104>)
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	f043 0301 	orr.w	r3, r3, #1
 800157a:	6013      	str	r3, [r2, #0]

  RCC->APB1ENR |= 0x10000000; //bit 28 PWREN: Power interface clock enable. p158. p101
 800157c:	4a20      	ldr	r2, [pc, #128]	; (8001600 <SetSysClock+0x100>)
 800157e:	4b20      	ldr	r3, [pc, #128]	; (8001600 <SetSysClock+0x100>)
 8001580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001582:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001586:	6253      	str	r3, [r2, #36]	; 0x24
  PWR->CR = (uint32_t)(1<<11); //Bits 12:11 VOS[1:0]: Voltage scaling range selection, 01: 1.8 V (range 1). p121
 8001588:	4b1f      	ldr	r3, [pc, #124]	; (8001608 <SetSysClock+0x108>)
 800158a:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800158e:	601a      	str	r2, [r3, #0]
	of PWR_CR register. p102 1.8V needed for 32 MHz clock and lower voltages to save power.

	0: Regulator is ready in the selected voltage range
	1: Regulator voltage output is changing to the required VOS level.
	*/
  while((PWR->CSR & (uint32_t)(1<<4)) != 0){} //bit 4 VOSF: Voltage Scaling select flag. p125
 8001590:	bf00      	nop
 8001592:	4b1d      	ldr	r3, [pc, #116]	; (8001608 <SetSysClock+0x108>)
 8001594:	685b      	ldr	r3, [r3, #4]
 8001596:	f003 0310 	and.w	r3, r3, #16
 800159a:	2b00      	cmp	r3, #0
 800159c:	d1f9      	bne.n	8001592 <SetSysClock+0x92>
    
  RCC->CFGR &=(uint32_t)~(1<<7); //Bits 7:4 HPRE[3:0]: AHB prescaler. 0xxx: SYSCLK not divided. p144
 800159e:	4a18      	ldr	r2, [pc, #96]	; (8001600 <SetSysClock+0x100>)
 80015a0:	4b17      	ldr	r3, [pc, #92]	; (8001600 <SetSysClock+0x100>)
 80015a2:	689b      	ldr	r3, [r3, #8]
 80015a4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80015a8:	6093      	str	r3, [r2, #8]
  RCC->CFGR &=(uint32_t)~(1<<13); //Bits 13:11 PPRE2[2:0]: APB high-speed prescaler (APB2). p144
 80015aa:	4a15      	ldr	r2, [pc, #84]	; (8001600 <SetSysClock+0x100>)
 80015ac:	4b14      	ldr	r3, [pc, #80]	; (8001600 <SetSysClock+0x100>)
 80015ae:	689b      	ldr	r3, [r3, #8]
 80015b0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80015b4:	6093      	str	r3, [r2, #8]
  RCC->CFGR &=(uint32_t)~(1<<10); //Bits 10:8 PPRE1[2:0]: APB low-speed prescaler (APB1)p. 144
 80015b6:	4a12      	ldr	r2, [pc, #72]	; (8001600 <SetSysClock+0x100>)
 80015b8:	4b11      	ldr	r3, [pc, #68]	; (8001600 <SetSysClock+0x100>)
 80015ba:	689b      	ldr	r3, [r3, #8]
 80015bc:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80015c0:	6093      	str	r3, [r2, #8]

  RCC->CR |= (1<<24); //Bit 24 PLLON: PLL enable. p140
 80015c2:	4a0f      	ldr	r2, [pc, #60]	; (8001600 <SetSysClock+0x100>)
 80015c4:	4b0e      	ldr	r3, [pc, #56]	; (8001600 <SetSysClock+0x100>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80015cc:	6013      	str	r3, [r2, #0]
  while((RCC->CR & (uint32_t)(1<<25)) == 0){} //Bit 25 PLLRDY: PLL clock ready flag. p140
 80015ce:	bf00      	nop
 80015d0:	4b0b      	ldr	r3, [pc, #44]	; (8001600 <SetSysClock+0x100>)
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d0f9      	beq.n	80015d0 <SetSysClock+0xd0>
    
  /* Select PLL as system clock source */
  RCC->CFGR |= (uint32_t)3; //Bits 1:0 SW[1:0]: System clock switch, 11: PLL used as system clock
 80015dc:	4a08      	ldr	r2, [pc, #32]	; (8001600 <SetSysClock+0x100>)
 80015de:	4b08      	ldr	r3, [pc, #32]	; (8001600 <SetSysClock+0x100>)
 80015e0:	689b      	ldr	r3, [r3, #8]
 80015e2:	f043 0303 	orr.w	r3, r3, #3
 80015e6:	6093      	str	r3, [r2, #8]
    
  /*Bits 3:2 SWS[1:0]: System clock switch status, 11: PLL used as system clock.
   * These bits are set and cleared by hardware to indicate which clock source is used as
	system clock. 11: PLL used as system clock. p145.
   */
  while ((RCC->CFGR & (uint32_t)(3<<2))==0){}
 80015e8:	bf00      	nop
 80015ea:	4b05      	ldr	r3, [pc, #20]	; (8001600 <SetSysClock+0x100>)
 80015ec:	689b      	ldr	r3, [r3, #8]
 80015ee:	f003 030c 	and.w	r3, r3, #12
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	d0f9      	beq.n	80015ea <SetSysClock+0xea>
 80015f6:	bf00      	nop
 80015f8:	370c      	adds	r7, #12
 80015fa:	46bd      	mov	sp, r7
 80015fc:	bc80      	pop	{r7}
 80015fe:	4770      	bx	lr
 8001600:	40023800 	.word	0x40023800
 8001604:	40023c00 	.word	0x40023c00
 8001608:	40007000 	.word	0x40007000

0800160c <main>:
#include "timers.h"

#define BUFFER_SIZE 50

int main(void)
{
 800160c:	b580      	push	{r7, lr}
 800160e:	b08e      	sub	sp, #56	; 0x38
 8001610:	af00      	add	r7, sp, #0
	char buffer[BUFFER_SIZE];

	// CMSIS Initializations

	SetSysClock();
 8001612:	f7ff ff75 	bl	8001500 <SetSysClock>
	SystemCoreClockUpdate();
 8001616:	f000 f897 	bl	8001748 <SystemCoreClockUpdate>

	// Utils Initializations

	// Peripheral Initializations
	GPIO_init();
 800161a:	f7ff fc07 	bl	8000e2c <GPIO_init>
	USART2_init();
 800161e:	f7ff fc3b 	bl	8000e98 <USART2_init>
	TIM2_Init();
 8001622:	f7ff fc19 	bl	8000e58 <TIM2_Init>

	// Sensor Initializations
	LMT84LP_init();
 8001626:	f7ff fef3 	bl	8001410 <LMT84LP_init>
	NSL19M51_init();
 800162a:	f7ff ff07 	bl	800143c <NSL19M51_init>
	DHT22_init();
 800162e:	f7ff fce1 	bl	8000ff4 <DHT22_init>
	ADC_init();
 8001632:	f7ff fbc5 	bl	8000dc0 <ADC_init>
		//USART2_write_buffer(buffer, BUFFER_SIZE);

		//NSL19M51_read(buffer, BUFFER_SIZE);
		//USART2_write_buffer(buffer, BUFFER_SIZE);

		if(!(DHT22_read(buffer, BUFFER_SIZE)))
 8001636:	1d3b      	adds	r3, r7, #4
 8001638:	2132      	movs	r1, #50	; 0x32
 800163a:	4618      	mov	r0, r3
 800163c:	f7ff fd08 	bl	8001050 <DHT22_read>
 8001640:	4603      	mov	r3, r0
 8001642:	2b00      	cmp	r3, #0
 8001644:	d103      	bne.n	800164e <main+0x42>
		{
			USART2_write_buffer(buffer);
 8001646:	1d3b      	adds	r3, r7, #4
 8001648:	4618      	mov	r0, r3
 800164a:	f7ff fc7d 	bl	8000f48 <USART2_write_buffer>
		}

		//GPIOA->ODR &= ~GPIO_ODR_ODR_5; //0000 0000 clear bit 5. p186
		delay_ms(1000);
 800164e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001652:	f7ff ff2f 	bl	80014b4 <delay_ms>
		if(!(DHT22_read(buffer, BUFFER_SIZE)))
 8001656:	e7ee      	b.n	8001636 <main+0x2a>

08001658 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  movs r1, #0
 8001658:	2100      	movs	r1, #0
  b LoopCopyDataInit
 800165a:	e003      	b.n	8001664 <LoopCopyDataInit>

0800165c <CopyDataInit>:

CopyDataInit:
  ldr r3, =_sidata
 800165c:	4b0b      	ldr	r3, [pc, #44]	; (800168c <LoopFillZerobss+0x14>)
  ldr r3, [r3, r1]
 800165e:	585b      	ldr	r3, [r3, r1]
  str r3, [r0, r1]
 8001660:	5043      	str	r3, [r0, r1]
  adds r1, r1, #4
 8001662:	3104      	adds	r1, #4

08001664 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr r0, =_sdata
 8001664:	480a      	ldr	r0, [pc, #40]	; (8001690 <LoopFillZerobss+0x18>)
  ldr r3, =_edata
 8001666:	4b0b      	ldr	r3, [pc, #44]	; (8001694 <LoopFillZerobss+0x1c>)
  adds r2, r0, r1
 8001668:	1842      	adds	r2, r0, r1
  cmp r2, r3
 800166a:	429a      	cmp	r2, r3
  bcc CopyDataInit
 800166c:	d3f6      	bcc.n	800165c <CopyDataInit>
  ldr r2, =_sbss
 800166e:	4a0a      	ldr	r2, [pc, #40]	; (8001698 <LoopFillZerobss+0x20>)
  b LoopFillZerobss
 8001670:	e002      	b.n	8001678 <LoopFillZerobss>

08001672 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs r3, #0
 8001672:	2300      	movs	r3, #0
  str r3, [r2], #4
 8001674:	f842 3b04 	str.w	r3, [r2], #4

08001678 <LoopFillZerobss>:

LoopFillZerobss:
  ldr r3, = _ebss
 8001678:	4b08      	ldr	r3, [pc, #32]	; (800169c <LoopFillZerobss+0x24>)
  cmp r2, r3
 800167a:	429a      	cmp	r2, r3
  bcc FillZerobss
 800167c:	d3f9      	bcc.n	8001672 <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 800167e:	f000 f82f 	bl	80016e0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001682:	f000 f909 	bl	8001898 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001686:	f7ff ffc1 	bl	800160c <main>
  bx lr
 800168a:	4770      	bx	lr
  ldr r3, =_sidata
 800168c:	08004ab0 	.word	0x08004ab0
  ldr r0, =_sdata
 8001690:	20000000 	.word	0x20000000
  ldr r3, =_edata
 8001694:	20000674 	.word	0x20000674
  ldr r2, =_sbss
 8001698:	20000674 	.word	0x20000674
  ldr r3, = _ebss
 800169c:	20000708 	.word	0x20000708

080016a0 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80016a0:	e7fe      	b.n	80016a0 <ADC1_IRQHandler>
	...

080016a4 <_sbrk>:
	errno = ENOSYS;
	return -1;
}

void * _sbrk(int32_t incr)
{
 80016a4:	b480      	push	{r7}
 80016a6:	b085      	sub	sp, #20
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
	extern char   end; /* Set by linker.  */
	static char * heap_end;
	char *        prev_heap_end;

	if (heap_end == 0) {
 80016ac:	4b0a      	ldr	r3, [pc, #40]	; (80016d8 <_sbrk+0x34>)
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	2b00      	cmp	r3, #0
 80016b2:	d102      	bne.n	80016ba <_sbrk+0x16>
		heap_end = & end;
 80016b4:	4b08      	ldr	r3, [pc, #32]	; (80016d8 <_sbrk+0x34>)
 80016b6:	4a09      	ldr	r2, [pc, #36]	; (80016dc <_sbrk+0x38>)
 80016b8:	601a      	str	r2, [r3, #0]
	}

	prev_heap_end = heap_end;
 80016ba:	4b07      	ldr	r3, [pc, #28]	; (80016d8 <_sbrk+0x34>)
 80016bc:	681b      	ldr	r3, [r3, #0]
 80016be:	60fb      	str	r3, [r7, #12]
	heap_end += incr;
 80016c0:	4b05      	ldr	r3, [pc, #20]	; (80016d8 <_sbrk+0x34>)
 80016c2:	681a      	ldr	r2, [r3, #0]
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	4413      	add	r3, r2
 80016c8:	4a03      	ldr	r2, [pc, #12]	; (80016d8 <_sbrk+0x34>)
 80016ca:	6013      	str	r3, [r2, #0]

	return (void *) prev_heap_end;
 80016cc:	68fb      	ldr	r3, [r7, #12]
}
 80016ce:	4618      	mov	r0, r3
 80016d0:	3714      	adds	r7, #20
 80016d2:	46bd      	mov	sp, r7
 80016d4:	bc80      	pop	{r7}
 80016d6:	4770      	bx	lr
 80016d8:	200006c0 	.word	0x200006c0
 80016dc:	20000708 	.word	0x20000708

080016e0 <SystemInit>:
  *         SystemCoreClock variable.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80016e0:	b480      	push	{r7}
 80016e2:	af00      	add	r7, sp, #0
  /*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100;
 80016e4:	4a15      	ldr	r2, [pc, #84]	; (800173c <SystemInit+0x5c>)
 80016e6:	4b15      	ldr	r3, [pc, #84]	; (800173c <SystemInit+0x5c>)
 80016e8:	681b      	ldr	r3, [r3, #0]
 80016ea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80016ee:	6013      	str	r3, [r2, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t)0x88FFC00C;
 80016f0:	4912      	ldr	r1, [pc, #72]	; (800173c <SystemInit+0x5c>)
 80016f2:	4b12      	ldr	r3, [pc, #72]	; (800173c <SystemInit+0x5c>)
 80016f4:	689a      	ldr	r2, [r3, #8]
 80016f6:	4b12      	ldr	r3, [pc, #72]	; (8001740 <SystemInit+0x60>)
 80016f8:	4013      	ands	r3, r2
 80016fa:	608b      	str	r3, [r1, #8]
  
  /*!< Reset HSION, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xEEFEFFFE;
 80016fc:	4a0f      	ldr	r2, [pc, #60]	; (800173c <SystemInit+0x5c>)
 80016fe:	4b0f      	ldr	r3, [pc, #60]	; (800173c <SystemInit+0x5c>)
 8001700:	681b      	ldr	r3, [r3, #0]
 8001702:	f023 5388 	bic.w	r3, r3, #285212672	; 0x11000000
 8001706:	f023 1301 	bic.w	r3, r3, #65537	; 0x10001
 800170a:	6013      	str	r3, [r2, #0]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800170c:	4a0b      	ldr	r2, [pc, #44]	; (800173c <SystemInit+0x5c>)
 800170e:	4b0b      	ldr	r3, [pc, #44]	; (800173c <SystemInit+0x5c>)
 8001710:	681b      	ldr	r3, [r3, #0]
 8001712:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001716:	6013      	str	r3, [r2, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFF;
 8001718:	4a08      	ldr	r2, [pc, #32]	; (800173c <SystemInit+0x5c>)
 800171a:	4b08      	ldr	r3, [pc, #32]	; (800173c <SystemInit+0x5c>)
 800171c:	689b      	ldr	r3, [r3, #8]
 800171e:	f423 037d 	bic.w	r3, r3, #16580608	; 0xfd0000
 8001722:	6093      	str	r3, [r2, #8]

  /*!< Disable all interrupts */
  RCC->CIR = 0x00000000;
 8001724:	4b05      	ldr	r3, [pc, #20]	; (800173c <SystemInit+0x5c>)
 8001726:	2200      	movs	r2, #0
 8001728:	60da      	str	r2, [r3, #12]
#endif /* DATA_IN_ExtSRAM */
    
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 800172a:	4b06      	ldr	r3, [pc, #24]	; (8001744 <SystemInit+0x64>)
 800172c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001730:	609a      	str	r2, [r3, #8]
#endif
}
 8001732:	bf00      	nop
 8001734:	46bd      	mov	sp, r7
 8001736:	bc80      	pop	{r7}
 8001738:	4770      	bx	lr
 800173a:	bf00      	nop
 800173c:	40023800 	.word	0x40023800
 8001740:	88ffc00c 	.word	0x88ffc00c
 8001744:	e000ed00 	.word	0xe000ed00

08001748 <SystemCoreClockUpdate>:
  *           value for HSE crystal.
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate (void)
{
 8001748:	b480      	push	{r7}
 800174a:	b087      	sub	sp, #28
 800174c:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllmul = 0, plldiv = 0, pllsource = 0, msirange = 0;
 800174e:	2300      	movs	r3, #0
 8001750:	617b      	str	r3, [r7, #20]
 8001752:	2300      	movs	r3, #0
 8001754:	613b      	str	r3, [r7, #16]
 8001756:	2300      	movs	r3, #0
 8001758:	60fb      	str	r3, [r7, #12]
 800175a:	2300      	movs	r3, #0
 800175c:	60bb      	str	r3, [r7, #8]
 800175e:	2300      	movs	r3, #0
 8001760:	607b      	str	r3, [r7, #4]

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001762:	4b48      	ldr	r3, [pc, #288]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 8001764:	689b      	ldr	r3, [r3, #8]
 8001766:	f003 030c 	and.w	r3, r3, #12
 800176a:	617b      	str	r3, [r7, #20]
  
  switch (tmp)
 800176c:	697b      	ldr	r3, [r7, #20]
 800176e:	2b0c      	cmp	r3, #12
 8001770:	d863      	bhi.n	800183a <SystemCoreClockUpdate+0xf2>
 8001772:	a201      	add	r2, pc, #4	; (adr r2, 8001778 <SystemCoreClockUpdate+0x30>)
 8001774:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001778:	080017ad 	.word	0x080017ad
 800177c:	0800183b 	.word	0x0800183b
 8001780:	0800183b 	.word	0x0800183b
 8001784:	0800183b 	.word	0x0800183b
 8001788:	080017cd 	.word	0x080017cd
 800178c:	0800183b 	.word	0x0800183b
 8001790:	0800183b 	.word	0x0800183b
 8001794:	0800183b 	.word	0x0800183b
 8001798:	080017d5 	.word	0x080017d5
 800179c:	0800183b 	.word	0x0800183b
 80017a0:	0800183b 	.word	0x0800183b
 80017a4:	0800183b 	.word	0x0800183b
 80017a8:	080017dd 	.word	0x080017dd
  {
    case 0x00:  /* MSI used as system clock */
      msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 80017ac:	4b35      	ldr	r3, [pc, #212]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 80017ae:	685b      	ldr	r3, [r3, #4]
 80017b0:	0b5b      	lsrs	r3, r3, #13
 80017b2:	f003 0307 	and.w	r3, r3, #7
 80017b6:	607b      	str	r3, [r7, #4]
      SystemCoreClock = (32768 * (1 << (msirange + 1)));
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	3301      	adds	r3, #1
 80017bc:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 80017c0:	fa02 f303 	lsl.w	r3, r2, r3
 80017c4:	461a      	mov	r2, r3
 80017c6:	4b30      	ldr	r3, [pc, #192]	; (8001888 <SystemCoreClockUpdate+0x140>)
 80017c8:	601a      	str	r2, [r3, #0]
      break;
 80017ca:	e046      	b.n	800185a <SystemCoreClockUpdate+0x112>
    case 0x04:  /* HSI used as system clock */
      SystemCoreClock = HSI_VALUE;
 80017cc:	4b2e      	ldr	r3, [pc, #184]	; (8001888 <SystemCoreClockUpdate+0x140>)
 80017ce:	4a2f      	ldr	r2, [pc, #188]	; (800188c <SystemCoreClockUpdate+0x144>)
 80017d0:	601a      	str	r2, [r3, #0]
      break;
 80017d2:	e042      	b.n	800185a <SystemCoreClockUpdate+0x112>
    case 0x08:  /* HSE used as system clock */
      SystemCoreClock = HSE_VALUE;
 80017d4:	4b2c      	ldr	r3, [pc, #176]	; (8001888 <SystemCoreClockUpdate+0x140>)
 80017d6:	4a2d      	ldr	r2, [pc, #180]	; (800188c <SystemCoreClockUpdate+0x144>)
 80017d8:	601a      	str	r2, [r3, #0]
      break;
 80017da:	e03e      	b.n	800185a <SystemCoreClockUpdate+0x112>
    case 0x0C:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 80017dc:	4b29      	ldr	r3, [pc, #164]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 80017de:	689b      	ldr	r3, [r3, #8]
 80017e0:	f403 1370 	and.w	r3, r3, #3932160	; 0x3c0000
 80017e4:	613b      	str	r3, [r7, #16]
      plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 80017e6:	4b27      	ldr	r3, [pc, #156]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 80017e8:	689b      	ldr	r3, [r3, #8]
 80017ea:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 80017ee:	60fb      	str	r3, [r7, #12]
      pllmul = PLLMulTable[(pllmul >> 18)];
 80017f0:	693b      	ldr	r3, [r7, #16]
 80017f2:	0c9b      	lsrs	r3, r3, #18
 80017f4:	4a26      	ldr	r2, [pc, #152]	; (8001890 <SystemCoreClockUpdate+0x148>)
 80017f6:	5cd3      	ldrb	r3, [r2, r3]
 80017f8:	613b      	str	r3, [r7, #16]
      plldiv = (plldiv >> 22) + 1;
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	0d9b      	lsrs	r3, r3, #22
 80017fe:	3301      	adds	r3, #1
 8001800:	60fb      	str	r3, [r7, #12]
      
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 8001802:	4b20      	ldr	r3, [pc, #128]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 8001804:	689b      	ldr	r3, [r3, #8]
 8001806:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800180a:	60bb      	str	r3, [r7, #8]

      if (pllsource == 0x00)
 800180c:	68bb      	ldr	r3, [r7, #8]
 800180e:	2b00      	cmp	r3, #0
 8001810:	d109      	bne.n	8001826 <SystemCoreClockUpdate+0xde>
      {
        /* HSI oscillator clock selected as PLL clock entry */
        SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 8001812:	693b      	ldr	r3, [r7, #16]
 8001814:	4a1d      	ldr	r2, [pc, #116]	; (800188c <SystemCoreClockUpdate+0x144>)
 8001816:	fb02 f203 	mul.w	r2, r2, r3
 800181a:	68fb      	ldr	r3, [r7, #12]
 800181c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001820:	4a19      	ldr	r2, [pc, #100]	; (8001888 <SystemCoreClockUpdate+0x140>)
 8001822:	6013      	str	r3, [r2, #0]
      else
      {
        /* HSE selected as PLL clock entry */
        SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
      }
      break;
 8001824:	e019      	b.n	800185a <SystemCoreClockUpdate+0x112>
        SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 8001826:	693b      	ldr	r3, [r7, #16]
 8001828:	4a18      	ldr	r2, [pc, #96]	; (800188c <SystemCoreClockUpdate+0x144>)
 800182a:	fb02 f203 	mul.w	r2, r2, r3
 800182e:	68fb      	ldr	r3, [r7, #12]
 8001830:	fbb2 f3f3 	udiv	r3, r2, r3
 8001834:	4a14      	ldr	r2, [pc, #80]	; (8001888 <SystemCoreClockUpdate+0x140>)
 8001836:	6013      	str	r3, [r2, #0]
      break;
 8001838:	e00f      	b.n	800185a <SystemCoreClockUpdate+0x112>
    default: /* MSI used as system clock */
      msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> 13;
 800183a:	4b12      	ldr	r3, [pc, #72]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 800183c:	685b      	ldr	r3, [r3, #4]
 800183e:	0b5b      	lsrs	r3, r3, #13
 8001840:	f003 0307 	and.w	r3, r3, #7
 8001844:	607b      	str	r3, [r7, #4]
      SystemCoreClock = (32768 * (1 << (msirange + 1)));
 8001846:	687b      	ldr	r3, [r7, #4]
 8001848:	3301      	adds	r3, #1
 800184a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800184e:	fa02 f303 	lsl.w	r3, r2, r3
 8001852:	461a      	mov	r2, r3
 8001854:	4b0c      	ldr	r3, [pc, #48]	; (8001888 <SystemCoreClockUpdate+0x140>)
 8001856:	601a      	str	r2, [r3, #0]
      break;
 8001858:	bf00      	nop
  }
  /* Compute HCLK clock frequency --------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 800185a:	4b0a      	ldr	r3, [pc, #40]	; (8001884 <SystemCoreClockUpdate+0x13c>)
 800185c:	689b      	ldr	r3, [r3, #8]
 800185e:	091b      	lsrs	r3, r3, #4
 8001860:	f003 030f 	and.w	r3, r3, #15
 8001864:	4a0b      	ldr	r2, [pc, #44]	; (8001894 <SystemCoreClockUpdate+0x14c>)
 8001866:	5cd3      	ldrb	r3, [r2, r3]
 8001868:	617b      	str	r3, [r7, #20]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;
 800186a:	4b07      	ldr	r3, [pc, #28]	; (8001888 <SystemCoreClockUpdate+0x140>)
 800186c:	681a      	ldr	r2, [r3, #0]
 800186e:	697b      	ldr	r3, [r7, #20]
 8001870:	fa22 f303 	lsr.w	r3, r2, r3
 8001874:	4a04      	ldr	r2, [pc, #16]	; (8001888 <SystemCoreClockUpdate+0x140>)
 8001876:	6013      	str	r3, [r2, #0]
}
 8001878:	bf00      	nop
 800187a:	371c      	adds	r7, #28
 800187c:	46bd      	mov	sp, r7
 800187e:	bc80      	pop	{r7}
 8001880:	4770      	bx	lr
 8001882:	bf00      	nop
 8001884:	40023800 	.word	0x40023800
 8001888:	20000000 	.word	0x20000000
 800188c:	007a1200 	.word	0x007a1200
 8001890:	08004818 	.word	0x08004818
 8001894:	08004824 	.word	0x08004824

08001898 <__libc_init_array>:
 8001898:	b570      	push	{r4, r5, r6, lr}
 800189a:	2500      	movs	r5, #0
 800189c:	4e0c      	ldr	r6, [pc, #48]	; (80018d0 <__libc_init_array+0x38>)
 800189e:	4c0d      	ldr	r4, [pc, #52]	; (80018d4 <__libc_init_array+0x3c>)
 80018a0:	1ba4      	subs	r4, r4, r6
 80018a2:	10a4      	asrs	r4, r4, #2
 80018a4:	42a5      	cmp	r5, r4
 80018a6:	d109      	bne.n	80018bc <__libc_init_array+0x24>
 80018a8:	f002 ff28 	bl	80046fc <_init>
 80018ac:	2500      	movs	r5, #0
 80018ae:	4e0a      	ldr	r6, [pc, #40]	; (80018d8 <__libc_init_array+0x40>)
 80018b0:	4c0a      	ldr	r4, [pc, #40]	; (80018dc <__libc_init_array+0x44>)
 80018b2:	1ba4      	subs	r4, r4, r6
 80018b4:	10a4      	asrs	r4, r4, #2
 80018b6:	42a5      	cmp	r5, r4
 80018b8:	d105      	bne.n	80018c6 <__libc_init_array+0x2e>
 80018ba:	bd70      	pop	{r4, r5, r6, pc}
 80018bc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80018c0:	4798      	blx	r3
 80018c2:	3501      	adds	r5, #1
 80018c4:	e7ee      	b.n	80018a4 <__libc_init_array+0xc>
 80018c6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80018ca:	4798      	blx	r3
 80018cc:	3501      	adds	r5, #1
 80018ce:	e7f2      	b.n	80018b6 <__libc_init_array+0x1e>
 80018d0:	08004aa8 	.word	0x08004aa8
 80018d4:	08004aa8 	.word	0x08004aa8
 80018d8:	08004aa8 	.word	0x08004aa8
 80018dc:	08004aac 	.word	0x08004aac

080018e0 <snprintf>:
 80018e0:	b40c      	push	{r2, r3}
 80018e2:	b530      	push	{r4, r5, lr}
 80018e4:	4b17      	ldr	r3, [pc, #92]	; (8001944 <snprintf+0x64>)
 80018e6:	1e0c      	subs	r4, r1, #0
 80018e8:	b09d      	sub	sp, #116	; 0x74
 80018ea:	681d      	ldr	r5, [r3, #0]
 80018ec:	da08      	bge.n	8001900 <snprintf+0x20>
 80018ee:	238b      	movs	r3, #139	; 0x8b
 80018f0:	f04f 30ff 	mov.w	r0, #4294967295
 80018f4:	602b      	str	r3, [r5, #0]
 80018f6:	b01d      	add	sp, #116	; 0x74
 80018f8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80018fc:	b002      	add	sp, #8
 80018fe:	4770      	bx	lr
 8001900:	f44f 7302 	mov.w	r3, #520	; 0x208
 8001904:	f8ad 3014 	strh.w	r3, [sp, #20]
 8001908:	bf0c      	ite	eq
 800190a:	4623      	moveq	r3, r4
 800190c:	f104 33ff 	addne.w	r3, r4, #4294967295
 8001910:	9304      	str	r3, [sp, #16]
 8001912:	9307      	str	r3, [sp, #28]
 8001914:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001918:	9002      	str	r0, [sp, #8]
 800191a:	9006      	str	r0, [sp, #24]
 800191c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8001920:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8001922:	ab21      	add	r3, sp, #132	; 0x84
 8001924:	a902      	add	r1, sp, #8
 8001926:	4628      	mov	r0, r5
 8001928:	9301      	str	r3, [sp, #4]
 800192a:	f000 f80d 	bl	8001948 <_svfprintf_r>
 800192e:	1c43      	adds	r3, r0, #1
 8001930:	bfbc      	itt	lt
 8001932:	238b      	movlt	r3, #139	; 0x8b
 8001934:	602b      	strlt	r3, [r5, #0]
 8001936:	2c00      	cmp	r4, #0
 8001938:	d0dd      	beq.n	80018f6 <snprintf+0x16>
 800193a:	2200      	movs	r2, #0
 800193c:	9b02      	ldr	r3, [sp, #8]
 800193e:	701a      	strb	r2, [r3, #0]
 8001940:	e7d9      	b.n	80018f6 <snprintf+0x16>
 8001942:	bf00      	nop
 8001944:	20000004 	.word	0x20000004

08001948 <_svfprintf_r>:
 8001948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800194c:	b0bf      	sub	sp, #252	; 0xfc
 800194e:	4689      	mov	r9, r1
 8001950:	4615      	mov	r5, r2
 8001952:	461f      	mov	r7, r3
 8001954:	4682      	mov	sl, r0
 8001956:	f001 ff39 	bl	80037cc <_localeconv_r>
 800195a:	6803      	ldr	r3, [r0, #0]
 800195c:	4618      	mov	r0, r3
 800195e:	9311      	str	r3, [sp, #68]	; 0x44
 8001960:	f7fe fc0e 	bl	8000180 <strlen>
 8001964:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8001968:	900a      	str	r0, [sp, #40]	; 0x28
 800196a:	061b      	lsls	r3, r3, #24
 800196c:	d518      	bpl.n	80019a0 <_svfprintf_r+0x58>
 800196e:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8001972:	b9ab      	cbnz	r3, 80019a0 <_svfprintf_r+0x58>
 8001974:	2140      	movs	r1, #64	; 0x40
 8001976:	4650      	mov	r0, sl
 8001978:	f001 ff3e 	bl	80037f8 <_malloc_r>
 800197c:	f8c9 0000 	str.w	r0, [r9]
 8001980:	f8c9 0010 	str.w	r0, [r9, #16]
 8001984:	b948      	cbnz	r0, 800199a <_svfprintf_r+0x52>
 8001986:	230c      	movs	r3, #12
 8001988:	f8ca 3000 	str.w	r3, [sl]
 800198c:	f04f 33ff 	mov.w	r3, #4294967295
 8001990:	930b      	str	r3, [sp, #44]	; 0x2c
 8001992:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8001994:	b03f      	add	sp, #252	; 0xfc
 8001996:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800199a:	2340      	movs	r3, #64	; 0x40
 800199c:	f8c9 3014 	str.w	r3, [r9, #20]
 80019a0:	2300      	movs	r3, #0
 80019a2:	ac2e      	add	r4, sp, #184	; 0xb8
 80019a4:	9421      	str	r4, [sp, #132]	; 0x84
 80019a6:	9323      	str	r3, [sp, #140]	; 0x8c
 80019a8:	9322      	str	r3, [sp, #136]	; 0x88
 80019aa:	9509      	str	r5, [sp, #36]	; 0x24
 80019ac:	9307      	str	r3, [sp, #28]
 80019ae:	930d      	str	r3, [sp, #52]	; 0x34
 80019b0:	930e      	str	r3, [sp, #56]	; 0x38
 80019b2:	9315      	str	r3, [sp, #84]	; 0x54
 80019b4:	9314      	str	r3, [sp, #80]	; 0x50
 80019b6:	930b      	str	r3, [sp, #44]	; 0x2c
 80019b8:	9312      	str	r3, [sp, #72]	; 0x48
 80019ba:	9313      	str	r3, [sp, #76]	; 0x4c
 80019bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80019be:	462b      	mov	r3, r5
 80019c0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80019c4:	b112      	cbz	r2, 80019cc <_svfprintf_r+0x84>
 80019c6:	2a25      	cmp	r2, #37	; 0x25
 80019c8:	f040 8083 	bne.w	8001ad2 <_svfprintf_r+0x18a>
 80019cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80019ce:	1aee      	subs	r6, r5, r3
 80019d0:	d00d      	beq.n	80019ee <_svfprintf_r+0xa6>
 80019d2:	e884 0048 	stmia.w	r4, {r3, r6}
 80019d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80019d8:	4433      	add	r3, r6
 80019da:	9323      	str	r3, [sp, #140]	; 0x8c
 80019dc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80019de:	3301      	adds	r3, #1
 80019e0:	2b07      	cmp	r3, #7
 80019e2:	9322      	str	r3, [sp, #136]	; 0x88
 80019e4:	dc77      	bgt.n	8001ad6 <_svfprintf_r+0x18e>
 80019e6:	3408      	adds	r4, #8
 80019e8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80019ea:	4433      	add	r3, r6
 80019ec:	930b      	str	r3, [sp, #44]	; 0x2c
 80019ee:	782b      	ldrb	r3, [r5, #0]
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	f000 8725 	beq.w	8002840 <_svfprintf_r+0xef8>
 80019f6:	2300      	movs	r3, #0
 80019f8:	1c69      	adds	r1, r5, #1
 80019fa:	461a      	mov	r2, r3
 80019fc:	f04f 3bff 	mov.w	fp, #4294967295
 8001a00:	461d      	mov	r5, r3
 8001a02:	200a      	movs	r0, #10
 8001a04:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001a08:	930c      	str	r3, [sp, #48]	; 0x30
 8001a0a:	1c4e      	adds	r6, r1, #1
 8001a0c:	7809      	ldrb	r1, [r1, #0]
 8001a0e:	9609      	str	r6, [sp, #36]	; 0x24
 8001a10:	9106      	str	r1, [sp, #24]
 8001a12:	9906      	ldr	r1, [sp, #24]
 8001a14:	3920      	subs	r1, #32
 8001a16:	2958      	cmp	r1, #88	; 0x58
 8001a18:	f200 8414 	bhi.w	8002244 <_svfprintf_r+0x8fc>
 8001a1c:	e8df f011 	tbh	[pc, r1, lsl #1]
 8001a20:	041200a5 	.word	0x041200a5
 8001a24:	00aa0412 	.word	0x00aa0412
 8001a28:	04120412 	.word	0x04120412
 8001a2c:	04120412 	.word	0x04120412
 8001a30:	04120412 	.word	0x04120412
 8001a34:	006500ad 	.word	0x006500ad
 8001a38:	00b50412 	.word	0x00b50412
 8001a3c:	041200b8 	.word	0x041200b8
 8001a40:	00d800d5 	.word	0x00d800d5
 8001a44:	00d800d8 	.word	0x00d800d8
 8001a48:	00d800d8 	.word	0x00d800d8
 8001a4c:	00d800d8 	.word	0x00d800d8
 8001a50:	00d800d8 	.word	0x00d800d8
 8001a54:	04120412 	.word	0x04120412
 8001a58:	04120412 	.word	0x04120412
 8001a5c:	04120412 	.word	0x04120412
 8001a60:	04120412 	.word	0x04120412
 8001a64:	04120412 	.word	0x04120412
 8001a68:	0122010c 	.word	0x0122010c
 8001a6c:	01220412 	.word	0x01220412
 8001a70:	04120412 	.word	0x04120412
 8001a74:	04120412 	.word	0x04120412
 8001a78:	041200eb 	.word	0x041200eb
 8001a7c:	033c0412 	.word	0x033c0412
 8001a80:	04120412 	.word	0x04120412
 8001a84:	04120412 	.word	0x04120412
 8001a88:	03a40412 	.word	0x03a40412
 8001a8c:	04120412 	.word	0x04120412
 8001a90:	04120085 	.word	0x04120085
 8001a94:	04120412 	.word	0x04120412
 8001a98:	04120412 	.word	0x04120412
 8001a9c:	04120412 	.word	0x04120412
 8001aa0:	04120412 	.word	0x04120412
 8001aa4:	00fe0412 	.word	0x00fe0412
 8001aa8:	0122006b 	.word	0x0122006b
 8001aac:	01220122 	.word	0x01220122
 8001ab0:	006b00ee 	.word	0x006b00ee
 8001ab4:	04120412 	.word	0x04120412
 8001ab8:	041200f1 	.word	0x041200f1
 8001abc:	033e031e 	.word	0x033e031e
 8001ac0:	00f80372 	.word	0x00f80372
 8001ac4:	03830412 	.word	0x03830412
 8001ac8:	03a60412 	.word	0x03a60412
 8001acc:	04120412 	.word	0x04120412
 8001ad0:	03be      	.short	0x03be
 8001ad2:	461d      	mov	r5, r3
 8001ad4:	e773      	b.n	80019be <_svfprintf_r+0x76>
 8001ad6:	aa21      	add	r2, sp, #132	; 0x84
 8001ad8:	4649      	mov	r1, r9
 8001ada:	4650      	mov	r0, sl
 8001adc:	f002 fba0 	bl	8004220 <__ssprint_r>
 8001ae0:	2800      	cmp	r0, #0
 8001ae2:	f040 868e 	bne.w	8002802 <_svfprintf_r+0xeba>
 8001ae6:	ac2e      	add	r4, sp, #184	; 0xb8
 8001ae8:	e77e      	b.n	80019e8 <_svfprintf_r+0xa0>
 8001aea:	2301      	movs	r3, #1
 8001aec:	222b      	movs	r2, #43	; 0x2b
 8001aee:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001af0:	e78b      	b.n	8001a0a <_svfprintf_r+0xc2>
 8001af2:	460f      	mov	r7, r1
 8001af4:	e7fb      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001af6:	b10b      	cbz	r3, 8001afc <_svfprintf_r+0x1b4>
 8001af8:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001afc:	06ae      	lsls	r6, r5, #26
 8001afe:	f140 80a1 	bpl.w	8001c44 <_svfprintf_r+0x2fc>
 8001b02:	3707      	adds	r7, #7
 8001b04:	f027 0707 	bic.w	r7, r7, #7
 8001b08:	f107 0308 	add.w	r3, r7, #8
 8001b0c:	9308      	str	r3, [sp, #32]
 8001b0e:	e9d7 6700 	ldrd	r6, r7, [r7]
 8001b12:	2e00      	cmp	r6, #0
 8001b14:	f177 0300 	sbcs.w	r3, r7, #0
 8001b18:	da05      	bge.n	8001b26 <_svfprintf_r+0x1de>
 8001b1a:	232d      	movs	r3, #45	; 0x2d
 8001b1c:	4276      	negs	r6, r6
 8001b1e:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8001b22:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001b26:	2301      	movs	r3, #1
 8001b28:	e2c7      	b.n	80020ba <_svfprintf_r+0x772>
 8001b2a:	b10b      	cbz	r3, 8001b30 <_svfprintf_r+0x1e8>
 8001b2c:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001b30:	4ba0      	ldr	r3, [pc, #640]	; (8001db4 <_svfprintf_r+0x46c>)
 8001b32:	9315      	str	r3, [sp, #84]	; 0x54
 8001b34:	06ab      	lsls	r3, r5, #26
 8001b36:	f140 8336 	bpl.w	80021a6 <_svfprintf_r+0x85e>
 8001b3a:	3707      	adds	r7, #7
 8001b3c:	f027 0707 	bic.w	r7, r7, #7
 8001b40:	f107 0308 	add.w	r3, r7, #8
 8001b44:	9308      	str	r3, [sp, #32]
 8001b46:	e9d7 6700 	ldrd	r6, r7, [r7]
 8001b4a:	07e8      	lsls	r0, r5, #31
 8001b4c:	d50b      	bpl.n	8001b66 <_svfprintf_r+0x21e>
 8001b4e:	ea56 0307 	orrs.w	r3, r6, r7
 8001b52:	d008      	beq.n	8001b66 <_svfprintf_r+0x21e>
 8001b54:	2330      	movs	r3, #48	; 0x30
 8001b56:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8001b5a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8001b5e:	f045 0502 	orr.w	r5, r5, #2
 8001b62:	f88d 3069 	strb.w	r3, [sp, #105]	; 0x69
 8001b66:	2302      	movs	r3, #2
 8001b68:	e2a4      	b.n	80020b4 <_svfprintf_r+0x76c>
 8001b6a:	2a00      	cmp	r2, #0
 8001b6c:	d1bf      	bne.n	8001aee <_svfprintf_r+0x1a6>
 8001b6e:	2301      	movs	r3, #1
 8001b70:	2220      	movs	r2, #32
 8001b72:	e7bc      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001b74:	f045 0501 	orr.w	r5, r5, #1
 8001b78:	e7b9      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001b7a:	683e      	ldr	r6, [r7, #0]
 8001b7c:	1d39      	adds	r1, r7, #4
 8001b7e:	2e00      	cmp	r6, #0
 8001b80:	960c      	str	r6, [sp, #48]	; 0x30
 8001b82:	dab6      	bge.n	8001af2 <_svfprintf_r+0x1aa>
 8001b84:	460f      	mov	r7, r1
 8001b86:	4276      	negs	r6, r6
 8001b88:	960c      	str	r6, [sp, #48]	; 0x30
 8001b8a:	f045 0504 	orr.w	r5, r5, #4
 8001b8e:	e7ae      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001b90:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001b92:	1c4e      	adds	r6, r1, #1
 8001b94:	7809      	ldrb	r1, [r1, #0]
 8001b96:	292a      	cmp	r1, #42	; 0x2a
 8001b98:	9106      	str	r1, [sp, #24]
 8001b9a:	d010      	beq.n	8001bbe <_svfprintf_r+0x276>
 8001b9c:	f04f 0b00 	mov.w	fp, #0
 8001ba0:	9609      	str	r6, [sp, #36]	; 0x24
 8001ba2:	9906      	ldr	r1, [sp, #24]
 8001ba4:	3930      	subs	r1, #48	; 0x30
 8001ba6:	2909      	cmp	r1, #9
 8001ba8:	f63f af33 	bhi.w	8001a12 <_svfprintf_r+0xca>
 8001bac:	fb00 1b0b 	mla	fp, r0, fp, r1
 8001bb0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001bb2:	460e      	mov	r6, r1
 8001bb4:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001bb8:	9106      	str	r1, [sp, #24]
 8001bba:	9609      	str	r6, [sp, #36]	; 0x24
 8001bbc:	e7f1      	b.n	8001ba2 <_svfprintf_r+0x25a>
 8001bbe:	6839      	ldr	r1, [r7, #0]
 8001bc0:	9609      	str	r6, [sp, #36]	; 0x24
 8001bc2:	ea41 7be1 	orr.w	fp, r1, r1, asr #31
 8001bc6:	3704      	adds	r7, #4
 8001bc8:	e791      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001bca:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8001bce:	e78e      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001bd0:	2100      	movs	r1, #0
 8001bd2:	910c      	str	r1, [sp, #48]	; 0x30
 8001bd4:	9906      	ldr	r1, [sp, #24]
 8001bd6:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8001bd8:	3930      	subs	r1, #48	; 0x30
 8001bda:	fb00 1106 	mla	r1, r0, r6, r1
 8001bde:	910c      	str	r1, [sp, #48]	; 0x30
 8001be0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001be2:	460e      	mov	r6, r1
 8001be4:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001be8:	9106      	str	r1, [sp, #24]
 8001bea:	9906      	ldr	r1, [sp, #24]
 8001bec:	9609      	str	r6, [sp, #36]	; 0x24
 8001bee:	3930      	subs	r1, #48	; 0x30
 8001bf0:	2909      	cmp	r1, #9
 8001bf2:	d9ef      	bls.n	8001bd4 <_svfprintf_r+0x28c>
 8001bf4:	e70d      	b.n	8001a12 <_svfprintf_r+0xca>
 8001bf6:	f045 0508 	orr.w	r5, r5, #8
 8001bfa:	e778      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001bfc:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 8001c00:	e775      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001c02:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001c04:	7809      	ldrb	r1, [r1, #0]
 8001c06:	296c      	cmp	r1, #108	; 0x6c
 8001c08:	d105      	bne.n	8001c16 <_svfprintf_r+0x2ce>
 8001c0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8001c0c:	3101      	adds	r1, #1
 8001c0e:	9109      	str	r1, [sp, #36]	; 0x24
 8001c10:	f045 0520 	orr.w	r5, r5, #32
 8001c14:	e76b      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001c16:	f045 0510 	orr.w	r5, r5, #16
 8001c1a:	e768      	b.n	8001aee <_svfprintf_r+0x1a6>
 8001c1c:	2600      	movs	r6, #0
 8001c1e:	1d3b      	adds	r3, r7, #4
 8001c20:	9308      	str	r3, [sp, #32]
 8001c22:	683b      	ldr	r3, [r7, #0]
 8001c24:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8001c28:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8001c2c:	f04f 0b01 	mov.w	fp, #1
 8001c30:	4637      	mov	r7, r6
 8001c32:	f10d 0890 	add.w	r8, sp, #144	; 0x90
 8001c36:	e11c      	b.n	8001e72 <_svfprintf_r+0x52a>
 8001c38:	b10b      	cbz	r3, 8001c3e <_svfprintf_r+0x2f6>
 8001c3a:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001c3e:	f045 0510 	orr.w	r5, r5, #16
 8001c42:	e75b      	b.n	8001afc <_svfprintf_r+0x1b4>
 8001c44:	f015 0f10 	tst.w	r5, #16
 8001c48:	f107 0304 	add.w	r3, r7, #4
 8001c4c:	d003      	beq.n	8001c56 <_svfprintf_r+0x30e>
 8001c4e:	683e      	ldr	r6, [r7, #0]
 8001c50:	9308      	str	r3, [sp, #32]
 8001c52:	17f7      	asrs	r7, r6, #31
 8001c54:	e75d      	b.n	8001b12 <_svfprintf_r+0x1ca>
 8001c56:	683e      	ldr	r6, [r7, #0]
 8001c58:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001c5c:	9308      	str	r3, [sp, #32]
 8001c5e:	bf18      	it	ne
 8001c60:	b236      	sxthne	r6, r6
 8001c62:	e7f6      	b.n	8001c52 <_svfprintf_r+0x30a>
 8001c64:	b10b      	cbz	r3, 8001c6a <_svfprintf_r+0x322>
 8001c66:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8001c6a:	3707      	adds	r7, #7
 8001c6c:	f027 0707 	bic.w	r7, r7, #7
 8001c70:	f107 0308 	add.w	r3, r7, #8
 8001c74:	9308      	str	r3, [sp, #32]
 8001c76:	683b      	ldr	r3, [r7, #0]
 8001c78:	f04f 32ff 	mov.w	r2, #4294967295
 8001c7c:	930d      	str	r3, [sp, #52]	; 0x34
 8001c7e:	687b      	ldr	r3, [r7, #4]
 8001c80:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8001c82:	930e      	str	r3, [sp, #56]	; 0x38
 8001c84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001c86:	4638      	mov	r0, r7
 8001c88:	f023 4600 	bic.w	r6, r3, #2147483648	; 0x80000000
 8001c8c:	4631      	mov	r1, r6
 8001c8e:	4b4a      	ldr	r3, [pc, #296]	; (8001db8 <_svfprintf_r+0x470>)
 8001c90:	f7fe fed0 	bl	8000a34 <__aeabi_dcmpun>
 8001c94:	2800      	cmp	r0, #0
 8001c96:	f040 85dc 	bne.w	8002852 <_svfprintf_r+0xf0a>
 8001c9a:	f04f 32ff 	mov.w	r2, #4294967295
 8001c9e:	4b46      	ldr	r3, [pc, #280]	; (8001db8 <_svfprintf_r+0x470>)
 8001ca0:	4638      	mov	r0, r7
 8001ca2:	4631      	mov	r1, r6
 8001ca4:	f7fe fea8 	bl	80009f8 <__aeabi_dcmple>
 8001ca8:	2800      	cmp	r0, #0
 8001caa:	f040 85d2 	bne.w	8002852 <_svfprintf_r+0xf0a>
 8001cae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001cb0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001cb2:	980d      	ldr	r0, [sp, #52]	; 0x34
 8001cb4:	990e      	ldr	r1, [sp, #56]	; 0x38
 8001cb6:	f7fe fe95 	bl	80009e4 <__aeabi_dcmplt>
 8001cba:	b110      	cbz	r0, 8001cc2 <_svfprintf_r+0x37a>
 8001cbc:	232d      	movs	r3, #45	; 0x2d
 8001cbe:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001cc2:	4b3e      	ldr	r3, [pc, #248]	; (8001dbc <_svfprintf_r+0x474>)
 8001cc4:	4a3e      	ldr	r2, [pc, #248]	; (8001dc0 <_svfprintf_r+0x478>)
 8001cc6:	9906      	ldr	r1, [sp, #24]
 8001cc8:	f04f 0b03 	mov.w	fp, #3
 8001ccc:	2947      	cmp	r1, #71	; 0x47
 8001cce:	bfcc      	ite	gt
 8001cd0:	4690      	movgt	r8, r2
 8001cd2:	4698      	movle	r8, r3
 8001cd4:	2600      	movs	r6, #0
 8001cd6:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8001cda:	4637      	mov	r7, r6
 8001cdc:	e0c9      	b.n	8001e72 <_svfprintf_r+0x52a>
 8001cde:	f1bb 3fff 	cmp.w	fp, #4294967295
 8001ce2:	d026      	beq.n	8001d32 <_svfprintf_r+0x3ea>
 8001ce4:	9b06      	ldr	r3, [sp, #24]
 8001ce6:	f023 0320 	bic.w	r3, r3, #32
 8001cea:	2b47      	cmp	r3, #71	; 0x47
 8001cec:	d104      	bne.n	8001cf8 <_svfprintf_r+0x3b0>
 8001cee:	f1bb 0f00 	cmp.w	fp, #0
 8001cf2:	bf08      	it	eq
 8001cf4:	f04f 0b01 	moveq.w	fp, #1
 8001cf8:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 8001cfc:	9317      	str	r3, [sp, #92]	; 0x5c
 8001cfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001d00:	1e1f      	subs	r7, r3, #0
 8001d02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001d04:	bfa8      	it	ge
 8001d06:	9710      	strge	r7, [sp, #64]	; 0x40
 8001d08:	930f      	str	r3, [sp, #60]	; 0x3c
 8001d0a:	bfbd      	ittte	lt
 8001d0c:	463b      	movlt	r3, r7
 8001d0e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001d12:	9310      	strlt	r3, [sp, #64]	; 0x40
 8001d14:	2300      	movge	r3, #0
 8001d16:	bfb8      	it	lt
 8001d18:	232d      	movlt	r3, #45	; 0x2d
 8001d1a:	9316      	str	r3, [sp, #88]	; 0x58
 8001d1c:	9b06      	ldr	r3, [sp, #24]
 8001d1e:	f023 0720 	bic.w	r7, r3, #32
 8001d22:	2f46      	cmp	r7, #70	; 0x46
 8001d24:	d008      	beq.n	8001d38 <_svfprintf_r+0x3f0>
 8001d26:	2f45      	cmp	r7, #69	; 0x45
 8001d28:	d142      	bne.n	8001db0 <_svfprintf_r+0x468>
 8001d2a:	f10b 0601 	add.w	r6, fp, #1
 8001d2e:	2302      	movs	r3, #2
 8001d30:	e004      	b.n	8001d3c <_svfprintf_r+0x3f4>
 8001d32:	f04f 0b06 	mov.w	fp, #6
 8001d36:	e7df      	b.n	8001cf8 <_svfprintf_r+0x3b0>
 8001d38:	465e      	mov	r6, fp
 8001d3a:	2303      	movs	r3, #3
 8001d3c:	aa1f      	add	r2, sp, #124	; 0x7c
 8001d3e:	9204      	str	r2, [sp, #16]
 8001d40:	aa1c      	add	r2, sp, #112	; 0x70
 8001d42:	9203      	str	r2, [sp, #12]
 8001d44:	aa1b      	add	r2, sp, #108	; 0x6c
 8001d46:	9202      	str	r2, [sp, #8]
 8001d48:	e88d 0048 	stmia.w	sp, {r3, r6}
 8001d4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001d4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001d50:	4650      	mov	r0, sl
 8001d52:	f000 fe55 	bl	8002a00 <_dtoa_r>
 8001d56:	2f47      	cmp	r7, #71	; 0x47
 8001d58:	4680      	mov	r8, r0
 8001d5a:	d102      	bne.n	8001d62 <_svfprintf_r+0x41a>
 8001d5c:	07e8      	lsls	r0, r5, #31
 8001d5e:	f140 8585 	bpl.w	800286c <_svfprintf_r+0xf24>
 8001d62:	eb08 0306 	add.w	r3, r8, r6
 8001d66:	2f46      	cmp	r7, #70	; 0x46
 8001d68:	9307      	str	r3, [sp, #28]
 8001d6a:	d111      	bne.n	8001d90 <_svfprintf_r+0x448>
 8001d6c:	f898 3000 	ldrb.w	r3, [r8]
 8001d70:	2b30      	cmp	r3, #48	; 0x30
 8001d72:	d109      	bne.n	8001d88 <_svfprintf_r+0x440>
 8001d74:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001d76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001d78:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8001d7a:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001d7c:	f7fe fe28 	bl	80009d0 <__aeabi_dcmpeq>
 8001d80:	b910      	cbnz	r0, 8001d88 <_svfprintf_r+0x440>
 8001d82:	f1c6 0601 	rsb	r6, r6, #1
 8001d86:	961b      	str	r6, [sp, #108]	; 0x6c
 8001d88:	9a07      	ldr	r2, [sp, #28]
 8001d8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001d8c:	441a      	add	r2, r3
 8001d8e:	9207      	str	r2, [sp, #28]
 8001d90:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001d92:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8001d94:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8001d96:	9910      	ldr	r1, [sp, #64]	; 0x40
 8001d98:	f7fe fe1a 	bl	80009d0 <__aeabi_dcmpeq>
 8001d9c:	b990      	cbnz	r0, 8001dc4 <_svfprintf_r+0x47c>
 8001d9e:	2230      	movs	r2, #48	; 0x30
 8001da0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8001da2:	9907      	ldr	r1, [sp, #28]
 8001da4:	4299      	cmp	r1, r3
 8001da6:	d90f      	bls.n	8001dc8 <_svfprintf_r+0x480>
 8001da8:	1c59      	adds	r1, r3, #1
 8001daa:	911f      	str	r1, [sp, #124]	; 0x7c
 8001dac:	701a      	strb	r2, [r3, #0]
 8001dae:	e7f7      	b.n	8001da0 <_svfprintf_r+0x458>
 8001db0:	465e      	mov	r6, fp
 8001db2:	e7bc      	b.n	8001d2e <_svfprintf_r+0x3e6>
 8001db4:	08004844 	.word	0x08004844
 8001db8:	7fefffff 	.word	0x7fefffff
 8001dbc:	08004834 	.word	0x08004834
 8001dc0:	08004838 	.word	0x08004838
 8001dc4:	9b07      	ldr	r3, [sp, #28]
 8001dc6:	931f      	str	r3, [sp, #124]	; 0x7c
 8001dc8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8001dca:	2f47      	cmp	r7, #71	; 0x47
 8001dcc:	eba3 0308 	sub.w	r3, r3, r8
 8001dd0:	9307      	str	r3, [sp, #28]
 8001dd2:	f040 8100 	bne.w	8001fd6 <_svfprintf_r+0x68e>
 8001dd6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001dd8:	1cd9      	adds	r1, r3, #3
 8001dda:	db02      	blt.n	8001de2 <_svfprintf_r+0x49a>
 8001ddc:	459b      	cmp	fp, r3
 8001dde:	f280 8126 	bge.w	800202e <_svfprintf_r+0x6e6>
 8001de2:	9b06      	ldr	r3, [sp, #24]
 8001de4:	3b02      	subs	r3, #2
 8001de6:	9306      	str	r3, [sp, #24]
 8001de8:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8001dea:	f89d 1018 	ldrb.w	r1, [sp, #24]
 8001dee:	1e53      	subs	r3, r2, #1
 8001df0:	2b00      	cmp	r3, #0
 8001df2:	bfa8      	it	ge
 8001df4:	222b      	movge	r2, #43	; 0x2b
 8001df6:	931b      	str	r3, [sp, #108]	; 0x6c
 8001df8:	bfbc      	itt	lt
 8001dfa:	f1c2 0301 	rsblt	r3, r2, #1
 8001dfe:	222d      	movlt	r2, #45	; 0x2d
 8001e00:	2b09      	cmp	r3, #9
 8001e02:	f88d 1074 	strb.w	r1, [sp, #116]	; 0x74
 8001e06:	f88d 2075 	strb.w	r2, [sp, #117]	; 0x75
 8001e0a:	f340 8100 	ble.w	800200e <_svfprintf_r+0x6c6>
 8001e0e:	260a      	movs	r6, #10
 8001e10:	f10d 0283 	add.w	r2, sp, #131	; 0x83
 8001e14:	fb93 f0f6 	sdiv	r0, r3, r6
 8001e18:	fb06 3310 	mls	r3, r6, r0, r3
 8001e1c:	2809      	cmp	r0, #9
 8001e1e:	f103 0330 	add.w	r3, r3, #48	; 0x30
 8001e22:	f802 3c01 	strb.w	r3, [r2, #-1]
 8001e26:	f102 31ff 	add.w	r1, r2, #4294967295
 8001e2a:	4603      	mov	r3, r0
 8001e2c:	f300 80e8 	bgt.w	8002000 <_svfprintf_r+0x6b8>
 8001e30:	3330      	adds	r3, #48	; 0x30
 8001e32:	f801 3c01 	strb.w	r3, [r1, #-1]
 8001e36:	3a02      	subs	r2, #2
 8001e38:	f10d 0376 	add.w	r3, sp, #118	; 0x76
 8001e3c:	f10d 0083 	add.w	r0, sp, #131	; 0x83
 8001e40:	4282      	cmp	r2, r0
 8001e42:	4619      	mov	r1, r3
 8001e44:	f0c0 80de 	bcc.w	8002004 <_svfprintf_r+0x6bc>
 8001e48:	9a07      	ldr	r2, [sp, #28]
 8001e4a:	ab1d      	add	r3, sp, #116	; 0x74
 8001e4c:	1acb      	subs	r3, r1, r3
 8001e4e:	2a01      	cmp	r2, #1
 8001e50:	9314      	str	r3, [sp, #80]	; 0x50
 8001e52:	eb03 0b02 	add.w	fp, r3, r2
 8001e56:	dc02      	bgt.n	8001e5e <_svfprintf_r+0x516>
 8001e58:	f015 0701 	ands.w	r7, r5, #1
 8001e5c:	d002      	beq.n	8001e64 <_svfprintf_r+0x51c>
 8001e5e:	2700      	movs	r7, #0
 8001e60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001e62:	449b      	add	fp, r3
 8001e64:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8001e66:	b113      	cbz	r3, 8001e6e <_svfprintf_r+0x526>
 8001e68:	232d      	movs	r3, #45	; 0x2d
 8001e6a:	f88d 3067 	strb.w	r3, [sp, #103]	; 0x67
 8001e6e:	2600      	movs	r6, #0
 8001e70:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8001e72:	455e      	cmp	r6, fp
 8001e74:	4633      	mov	r3, r6
 8001e76:	bfb8      	it	lt
 8001e78:	465b      	movlt	r3, fp
 8001e7a:	930f      	str	r3, [sp, #60]	; 0x3c
 8001e7c:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8001e80:	b113      	cbz	r3, 8001e88 <_svfprintf_r+0x540>
 8001e82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001e84:	3301      	adds	r3, #1
 8001e86:	930f      	str	r3, [sp, #60]	; 0x3c
 8001e88:	f015 0302 	ands.w	r3, r5, #2
 8001e8c:	9316      	str	r3, [sp, #88]	; 0x58
 8001e8e:	bf1e      	ittt	ne
 8001e90:	9b0f      	ldrne	r3, [sp, #60]	; 0x3c
 8001e92:	3302      	addne	r3, #2
 8001e94:	930f      	strne	r3, [sp, #60]	; 0x3c
 8001e96:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 8001e9a:	9317      	str	r3, [sp, #92]	; 0x5c
 8001e9c:	d118      	bne.n	8001ed0 <_svfprintf_r+0x588>
 8001e9e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001ea0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001ea2:	1a9b      	subs	r3, r3, r2
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	9310      	str	r3, [sp, #64]	; 0x40
 8001ea8:	dd12      	ble.n	8001ed0 <_svfprintf_r+0x588>
 8001eaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001eac:	2b10      	cmp	r3, #16
 8001eae:	4bab      	ldr	r3, [pc, #684]	; (800215c <_svfprintf_r+0x814>)
 8001eb0:	6023      	str	r3, [r4, #0]
 8001eb2:	f300 81d9 	bgt.w	8002268 <_svfprintf_r+0x920>
 8001eb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001eb8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8001eba:	6063      	str	r3, [r4, #4]
 8001ebc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001ebe:	4413      	add	r3, r2
 8001ec0:	9323      	str	r3, [sp, #140]	; 0x8c
 8001ec2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001ec4:	3301      	adds	r3, #1
 8001ec6:	2b07      	cmp	r3, #7
 8001ec8:	9322      	str	r3, [sp, #136]	; 0x88
 8001eca:	f300 81e6 	bgt.w	800229a <_svfprintf_r+0x952>
 8001ece:	3408      	adds	r4, #8
 8001ed0:	f89d 3067 	ldrb.w	r3, [sp, #103]	; 0x67
 8001ed4:	b173      	cbz	r3, 8001ef4 <_svfprintf_r+0x5ac>
 8001ed6:	f10d 0367 	add.w	r3, sp, #103	; 0x67
 8001eda:	6023      	str	r3, [r4, #0]
 8001edc:	2301      	movs	r3, #1
 8001ede:	6063      	str	r3, [r4, #4]
 8001ee0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001ee2:	3301      	adds	r3, #1
 8001ee4:	9323      	str	r3, [sp, #140]	; 0x8c
 8001ee6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001ee8:	3301      	adds	r3, #1
 8001eea:	2b07      	cmp	r3, #7
 8001eec:	9322      	str	r3, [sp, #136]	; 0x88
 8001eee:	f300 81de 	bgt.w	80022ae <_svfprintf_r+0x966>
 8001ef2:	3408      	adds	r4, #8
 8001ef4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8001ef6:	b16b      	cbz	r3, 8001f14 <_svfprintf_r+0x5cc>
 8001ef8:	ab1a      	add	r3, sp, #104	; 0x68
 8001efa:	6023      	str	r3, [r4, #0]
 8001efc:	2302      	movs	r3, #2
 8001efe:	6063      	str	r3, [r4, #4]
 8001f00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001f02:	3302      	adds	r3, #2
 8001f04:	9323      	str	r3, [sp, #140]	; 0x8c
 8001f06:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001f08:	3301      	adds	r3, #1
 8001f0a:	2b07      	cmp	r3, #7
 8001f0c:	9322      	str	r3, [sp, #136]	; 0x88
 8001f0e:	f300 81d8 	bgt.w	80022c2 <_svfprintf_r+0x97a>
 8001f12:	3408      	adds	r4, #8
 8001f14:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8001f16:	2b80      	cmp	r3, #128	; 0x80
 8001f18:	d118      	bne.n	8001f4c <_svfprintf_r+0x604>
 8001f1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001f1c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8001f1e:	1a9b      	subs	r3, r3, r2
 8001f20:	2b00      	cmp	r3, #0
 8001f22:	9310      	str	r3, [sp, #64]	; 0x40
 8001f24:	dd12      	ble.n	8001f4c <_svfprintf_r+0x604>
 8001f26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001f28:	2b10      	cmp	r3, #16
 8001f2a:	4b8d      	ldr	r3, [pc, #564]	; (8002160 <_svfprintf_r+0x818>)
 8001f2c:	6023      	str	r3, [r4, #0]
 8001f2e:	f300 81d2 	bgt.w	80022d6 <_svfprintf_r+0x98e>
 8001f32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8001f34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8001f36:	6063      	str	r3, [r4, #4]
 8001f38:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001f3a:	4413      	add	r3, r2
 8001f3c:	9323      	str	r3, [sp, #140]	; 0x8c
 8001f3e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001f40:	3301      	adds	r3, #1
 8001f42:	2b07      	cmp	r3, #7
 8001f44:	9322      	str	r3, [sp, #136]	; 0x88
 8001f46:	f300 81df 	bgt.w	8002308 <_svfprintf_r+0x9c0>
 8001f4a:	3408      	adds	r4, #8
 8001f4c:	eba6 060b 	sub.w	r6, r6, fp
 8001f50:	2e00      	cmp	r6, #0
 8001f52:	dd0f      	ble.n	8001f74 <_svfprintf_r+0x62c>
 8001f54:	4b82      	ldr	r3, [pc, #520]	; (8002160 <_svfprintf_r+0x818>)
 8001f56:	2e10      	cmp	r6, #16
 8001f58:	6023      	str	r3, [r4, #0]
 8001f5a:	f300 81df 	bgt.w	800231c <_svfprintf_r+0x9d4>
 8001f5e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001f60:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8001f62:	3301      	adds	r3, #1
 8001f64:	6066      	str	r6, [r4, #4]
 8001f66:	2b07      	cmp	r3, #7
 8001f68:	4406      	add	r6, r0
 8001f6a:	9623      	str	r6, [sp, #140]	; 0x8c
 8001f6c:	9322      	str	r3, [sp, #136]	; 0x88
 8001f6e:	f300 81ec 	bgt.w	800234a <_svfprintf_r+0xa02>
 8001f72:	3408      	adds	r4, #8
 8001f74:	05eb      	lsls	r3, r5, #23
 8001f76:	f100 81f2 	bmi.w	800235e <_svfprintf_r+0xa16>
 8001f7a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001f7c:	e884 0900 	stmia.w	r4, {r8, fp}
 8001f80:	445b      	add	r3, fp
 8001f82:	9323      	str	r3, [sp, #140]	; 0x8c
 8001f84:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8001f86:	3301      	adds	r3, #1
 8001f88:	2b07      	cmp	r3, #7
 8001f8a:	9322      	str	r3, [sp, #136]	; 0x88
 8001f8c:	f340 8419 	ble.w	80027c2 <_svfprintf_r+0xe7a>
 8001f90:	aa21      	add	r2, sp, #132	; 0x84
 8001f92:	4649      	mov	r1, r9
 8001f94:	4650      	mov	r0, sl
 8001f96:	f002 f943 	bl	8004220 <__ssprint_r>
 8001f9a:	2800      	cmp	r0, #0
 8001f9c:	f040 8431 	bne.w	8002802 <_svfprintf_r+0xeba>
 8001fa0:	ac2e      	add	r4, sp, #184	; 0xb8
 8001fa2:	076b      	lsls	r3, r5, #29
 8001fa4:	f100 8410 	bmi.w	80027c8 <_svfprintf_r+0xe80>
 8001fa8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001faa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001fac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8001fae:	428a      	cmp	r2, r1
 8001fb0:	bfac      	ite	ge
 8001fb2:	189b      	addge	r3, r3, r2
 8001fb4:	185b      	addlt	r3, r3, r1
 8001fb6:	930b      	str	r3, [sp, #44]	; 0x2c
 8001fb8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8001fba:	b13b      	cbz	r3, 8001fcc <_svfprintf_r+0x684>
 8001fbc:	aa21      	add	r2, sp, #132	; 0x84
 8001fbe:	4649      	mov	r1, r9
 8001fc0:	4650      	mov	r0, sl
 8001fc2:	f002 f92d 	bl	8004220 <__ssprint_r>
 8001fc6:	2800      	cmp	r0, #0
 8001fc8:	f040 841b 	bne.w	8002802 <_svfprintf_r+0xeba>
 8001fcc:	2300      	movs	r3, #0
 8001fce:	9f08      	ldr	r7, [sp, #32]
 8001fd0:	9322      	str	r3, [sp, #136]	; 0x88
 8001fd2:	ac2e      	add	r4, sp, #184	; 0xb8
 8001fd4:	e4f2      	b.n	80019bc <_svfprintf_r+0x74>
 8001fd6:	9b06      	ldr	r3, [sp, #24]
 8001fd8:	2b65      	cmp	r3, #101	; 0x65
 8001fda:	f77f af05 	ble.w	8001de8 <_svfprintf_r+0x4a0>
 8001fde:	9b06      	ldr	r3, [sp, #24]
 8001fe0:	2b66      	cmp	r3, #102	; 0x66
 8001fe2:	d124      	bne.n	800202e <_svfprintf_r+0x6e6>
 8001fe4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	dd19      	ble.n	800201e <_svfprintf_r+0x6d6>
 8001fea:	f1bb 0f00 	cmp.w	fp, #0
 8001fee:	d101      	bne.n	8001ff4 <_svfprintf_r+0x6ac>
 8001ff0:	07ea      	lsls	r2, r5, #31
 8001ff2:	d502      	bpl.n	8001ffa <_svfprintf_r+0x6b2>
 8001ff4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001ff6:	4413      	add	r3, r2
 8001ff8:	445b      	add	r3, fp
 8001ffa:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8001ffc:	469b      	mov	fp, r3
 8001ffe:	e731      	b.n	8001e64 <_svfprintf_r+0x51c>
 8002000:	460a      	mov	r2, r1
 8002002:	e707      	b.n	8001e14 <_svfprintf_r+0x4cc>
 8002004:	f812 1b01 	ldrb.w	r1, [r2], #1
 8002008:	f803 1b01 	strb.w	r1, [r3], #1
 800200c:	e718      	b.n	8001e40 <_svfprintf_r+0x4f8>
 800200e:	2230      	movs	r2, #48	; 0x30
 8002010:	4413      	add	r3, r2
 8002012:	f88d 2076 	strb.w	r2, [sp, #118]	; 0x76
 8002016:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
 800201a:	a91e      	add	r1, sp, #120	; 0x78
 800201c:	e714      	b.n	8001e48 <_svfprintf_r+0x500>
 800201e:	f1bb 0f00 	cmp.w	fp, #0
 8002022:	d101      	bne.n	8002028 <_svfprintf_r+0x6e0>
 8002024:	07eb      	lsls	r3, r5, #31
 8002026:	d515      	bpl.n	8002054 <_svfprintf_r+0x70c>
 8002028:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800202a:	3301      	adds	r3, #1
 800202c:	e7e4      	b.n	8001ff8 <_svfprintf_r+0x6b0>
 800202e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002030:	9b07      	ldr	r3, [sp, #28]
 8002032:	429a      	cmp	r2, r3
 8002034:	db06      	blt.n	8002044 <_svfprintf_r+0x6fc>
 8002036:	07ef      	lsls	r7, r5, #31
 8002038:	d50e      	bpl.n	8002058 <_svfprintf_r+0x710>
 800203a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800203c:	4413      	add	r3, r2
 800203e:	2267      	movs	r2, #103	; 0x67
 8002040:	9206      	str	r2, [sp, #24]
 8002042:	e7da      	b.n	8001ffa <_svfprintf_r+0x6b2>
 8002044:	9b07      	ldr	r3, [sp, #28]
 8002046:	990a      	ldr	r1, [sp, #40]	; 0x28
 8002048:	2a00      	cmp	r2, #0
 800204a:	440b      	add	r3, r1
 800204c:	dcf7      	bgt.n	800203e <_svfprintf_r+0x6f6>
 800204e:	f1c2 0201 	rsb	r2, r2, #1
 8002052:	e7f3      	b.n	800203c <_svfprintf_r+0x6f4>
 8002054:	2301      	movs	r3, #1
 8002056:	e7d0      	b.n	8001ffa <_svfprintf_r+0x6b2>
 8002058:	4613      	mov	r3, r2
 800205a:	e7f0      	b.n	800203e <_svfprintf_r+0x6f6>
 800205c:	b10b      	cbz	r3, 8002062 <_svfprintf_r+0x71a>
 800205e:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 8002062:	f015 0f20 	tst.w	r5, #32
 8002066:	f107 0304 	add.w	r3, r7, #4
 800206a:	d008      	beq.n	800207e <_svfprintf_r+0x736>
 800206c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800206e:	683a      	ldr	r2, [r7, #0]
 8002070:	17ce      	asrs	r6, r1, #31
 8002072:	4608      	mov	r0, r1
 8002074:	4631      	mov	r1, r6
 8002076:	e9c2 0100 	strd	r0, r1, [r2]
 800207a:	461f      	mov	r7, r3
 800207c:	e49e      	b.n	80019bc <_svfprintf_r+0x74>
 800207e:	06ee      	lsls	r6, r5, #27
 8002080:	d503      	bpl.n	800208a <_svfprintf_r+0x742>
 8002082:	683a      	ldr	r2, [r7, #0]
 8002084:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002086:	6011      	str	r1, [r2, #0]
 8002088:	e7f7      	b.n	800207a <_svfprintf_r+0x732>
 800208a:	0668      	lsls	r0, r5, #25
 800208c:	d5f9      	bpl.n	8002082 <_svfprintf_r+0x73a>
 800208e:	683a      	ldr	r2, [r7, #0]
 8002090:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8002094:	8011      	strh	r1, [r2, #0]
 8002096:	e7f0      	b.n	800207a <_svfprintf_r+0x732>
 8002098:	f045 0510 	orr.w	r5, r5, #16
 800209c:	f015 0320 	ands.w	r3, r5, #32
 80020a0:	d022      	beq.n	80020e8 <_svfprintf_r+0x7a0>
 80020a2:	3707      	adds	r7, #7
 80020a4:	f027 0707 	bic.w	r7, r7, #7
 80020a8:	f107 0308 	add.w	r3, r7, #8
 80020ac:	9308      	str	r3, [sp, #32]
 80020ae:	e9d7 6700 	ldrd	r6, r7, [r7]
 80020b2:	2300      	movs	r3, #0
 80020b4:	2200      	movs	r2, #0
 80020b6:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80020ba:	f1bb 3fff 	cmp.w	fp, #4294967295
 80020be:	f000 83db 	beq.w	8002878 <_svfprintf_r+0xf30>
 80020c2:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 80020c6:	920f      	str	r2, [sp, #60]	; 0x3c
 80020c8:	ea56 0207 	orrs.w	r2, r6, r7
 80020cc:	f040 83d9 	bne.w	8002882 <_svfprintf_r+0xf3a>
 80020d0:	f1bb 0f00 	cmp.w	fp, #0
 80020d4:	f000 80aa 	beq.w	800222c <_svfprintf_r+0x8e4>
 80020d8:	2b01      	cmp	r3, #1
 80020da:	d076      	beq.n	80021ca <_svfprintf_r+0x882>
 80020dc:	2b02      	cmp	r3, #2
 80020de:	f000 8091 	beq.w	8002204 <_svfprintf_r+0x8bc>
 80020e2:	2600      	movs	r6, #0
 80020e4:	2700      	movs	r7, #0
 80020e6:	e3d2      	b.n	800288e <_svfprintf_r+0xf46>
 80020e8:	1d3a      	adds	r2, r7, #4
 80020ea:	f015 0110 	ands.w	r1, r5, #16
 80020ee:	9208      	str	r2, [sp, #32]
 80020f0:	d002      	beq.n	80020f8 <_svfprintf_r+0x7b0>
 80020f2:	683e      	ldr	r6, [r7, #0]
 80020f4:	2700      	movs	r7, #0
 80020f6:	e7dd      	b.n	80020b4 <_svfprintf_r+0x76c>
 80020f8:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 80020fc:	d0f9      	beq.n	80020f2 <_svfprintf_r+0x7aa>
 80020fe:	883e      	ldrh	r6, [r7, #0]
 8002100:	2700      	movs	r7, #0
 8002102:	e7d6      	b.n	80020b2 <_svfprintf_r+0x76a>
 8002104:	1d3b      	adds	r3, r7, #4
 8002106:	9308      	str	r3, [sp, #32]
 8002108:	2330      	movs	r3, #48	; 0x30
 800210a:	2278      	movs	r2, #120	; 0x78
 800210c:	f88d 3068 	strb.w	r3, [sp, #104]	; 0x68
 8002110:	4b14      	ldr	r3, [pc, #80]	; (8002164 <_svfprintf_r+0x81c>)
 8002112:	683e      	ldr	r6, [r7, #0]
 8002114:	9315      	str	r3, [sp, #84]	; 0x54
 8002116:	2700      	movs	r7, #0
 8002118:	f045 0502 	orr.w	r5, r5, #2
 800211c:	f88d 2069 	strb.w	r2, [sp, #105]	; 0x69
 8002120:	2302      	movs	r3, #2
 8002122:	9206      	str	r2, [sp, #24]
 8002124:	e7c6      	b.n	80020b4 <_svfprintf_r+0x76c>
 8002126:	2600      	movs	r6, #0
 8002128:	1d3b      	adds	r3, r7, #4
 800212a:	f1bb 3fff 	cmp.w	fp, #4294967295
 800212e:	9308      	str	r3, [sp, #32]
 8002130:	f8d7 8000 	ldr.w	r8, [r7]
 8002134:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 8002138:	d00a      	beq.n	8002150 <_svfprintf_r+0x808>
 800213a:	465a      	mov	r2, fp
 800213c:	4631      	mov	r1, r6
 800213e:	4640      	mov	r0, r8
 8002140:	f001 fd66 	bl	8003c10 <memchr>
 8002144:	2800      	cmp	r0, #0
 8002146:	f000 808d 	beq.w	8002264 <_svfprintf_r+0x91c>
 800214a:	eba0 0b08 	sub.w	fp, r0, r8
 800214e:	e5c4      	b.n	8001cda <_svfprintf_r+0x392>
 8002150:	4640      	mov	r0, r8
 8002152:	f7fe f815 	bl	8000180 <strlen>
 8002156:	4683      	mov	fp, r0
 8002158:	e5bf      	b.n	8001cda <_svfprintf_r+0x392>
 800215a:	bf00      	nop
 800215c:	08004868 	.word	0x08004868
 8002160:	08004878 	.word	0x08004878
 8002164:	08004855 	.word	0x08004855
 8002168:	f045 0510 	orr.w	r5, r5, #16
 800216c:	06a9      	lsls	r1, r5, #26
 800216e:	d509      	bpl.n	8002184 <_svfprintf_r+0x83c>
 8002170:	3707      	adds	r7, #7
 8002172:	f027 0707 	bic.w	r7, r7, #7
 8002176:	f107 0308 	add.w	r3, r7, #8
 800217a:	9308      	str	r3, [sp, #32]
 800217c:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002180:	2301      	movs	r3, #1
 8002182:	e797      	b.n	80020b4 <_svfprintf_r+0x76c>
 8002184:	1d3b      	adds	r3, r7, #4
 8002186:	f015 0f10 	tst.w	r5, #16
 800218a:	9308      	str	r3, [sp, #32]
 800218c:	d001      	beq.n	8002192 <_svfprintf_r+0x84a>
 800218e:	683e      	ldr	r6, [r7, #0]
 8002190:	e002      	b.n	8002198 <_svfprintf_r+0x850>
 8002192:	066a      	lsls	r2, r5, #25
 8002194:	d5fb      	bpl.n	800218e <_svfprintf_r+0x846>
 8002196:	883e      	ldrh	r6, [r7, #0]
 8002198:	2700      	movs	r7, #0
 800219a:	e7f1      	b.n	8002180 <_svfprintf_r+0x838>
 800219c:	b10b      	cbz	r3, 80021a2 <_svfprintf_r+0x85a>
 800219e:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 80021a2:	4ba3      	ldr	r3, [pc, #652]	; (8002430 <_svfprintf_r+0xae8>)
 80021a4:	e4c5      	b.n	8001b32 <_svfprintf_r+0x1ea>
 80021a6:	1d3b      	adds	r3, r7, #4
 80021a8:	f015 0f10 	tst.w	r5, #16
 80021ac:	9308      	str	r3, [sp, #32]
 80021ae:	d001      	beq.n	80021b4 <_svfprintf_r+0x86c>
 80021b0:	683e      	ldr	r6, [r7, #0]
 80021b2:	e002      	b.n	80021ba <_svfprintf_r+0x872>
 80021b4:	066e      	lsls	r6, r5, #25
 80021b6:	d5fb      	bpl.n	80021b0 <_svfprintf_r+0x868>
 80021b8:	883e      	ldrh	r6, [r7, #0]
 80021ba:	2700      	movs	r7, #0
 80021bc:	e4c5      	b.n	8001b4a <_svfprintf_r+0x202>
 80021be:	4643      	mov	r3, r8
 80021c0:	e366      	b.n	8002890 <_svfprintf_r+0xf48>
 80021c2:	2f00      	cmp	r7, #0
 80021c4:	bf08      	it	eq
 80021c6:	2e0a      	cmpeq	r6, #10
 80021c8:	d205      	bcs.n	80021d6 <_svfprintf_r+0x88e>
 80021ca:	3630      	adds	r6, #48	; 0x30
 80021cc:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 80021d0:	f808 6d41 	strb.w	r6, [r8, #-65]!
 80021d4:	e377      	b.n	80028c6 <_svfprintf_r+0xf7e>
 80021d6:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 80021da:	4630      	mov	r0, r6
 80021dc:	4639      	mov	r1, r7
 80021de:	220a      	movs	r2, #10
 80021e0:	2300      	movs	r3, #0
 80021e2:	f7fe fc65 	bl	8000ab0 <__aeabi_uldivmod>
 80021e6:	3230      	adds	r2, #48	; 0x30
 80021e8:	f808 2d01 	strb.w	r2, [r8, #-1]!
 80021ec:	2300      	movs	r3, #0
 80021ee:	4630      	mov	r0, r6
 80021f0:	4639      	mov	r1, r7
 80021f2:	220a      	movs	r2, #10
 80021f4:	f7fe fc5c 	bl	8000ab0 <__aeabi_uldivmod>
 80021f8:	4606      	mov	r6, r0
 80021fa:	460f      	mov	r7, r1
 80021fc:	ea56 0307 	orrs.w	r3, r6, r7
 8002200:	d1eb      	bne.n	80021da <_svfprintf_r+0x892>
 8002202:	e360      	b.n	80028c6 <_svfprintf_r+0xf7e>
 8002204:	2600      	movs	r6, #0
 8002206:	2700      	movs	r7, #0
 8002208:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 800220c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800220e:	f006 030f 	and.w	r3, r6, #15
 8002212:	5cd3      	ldrb	r3, [r2, r3]
 8002214:	093a      	lsrs	r2, r7, #4
 8002216:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800221a:	0933      	lsrs	r3, r6, #4
 800221c:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8002220:	461e      	mov	r6, r3
 8002222:	4617      	mov	r7, r2
 8002224:	ea56 0307 	orrs.w	r3, r6, r7
 8002228:	d1f0      	bne.n	800220c <_svfprintf_r+0x8c4>
 800222a:	e34c      	b.n	80028c6 <_svfprintf_r+0xf7e>
 800222c:	b93b      	cbnz	r3, 800223e <_svfprintf_r+0x8f6>
 800222e:	07ea      	lsls	r2, r5, #31
 8002230:	d505      	bpl.n	800223e <_svfprintf_r+0x8f6>
 8002232:	2330      	movs	r3, #48	; 0x30
 8002234:	f10d 08f8 	add.w	r8, sp, #248	; 0xf8
 8002238:	f808 3d41 	strb.w	r3, [r8, #-65]!
 800223c:	e343      	b.n	80028c6 <_svfprintf_r+0xf7e>
 800223e:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8002242:	e340      	b.n	80028c6 <_svfprintf_r+0xf7e>
 8002244:	b10b      	cbz	r3, 800224a <_svfprintf_r+0x902>
 8002246:	f88d 2067 	strb.w	r2, [sp, #103]	; 0x67
 800224a:	9b06      	ldr	r3, [sp, #24]
 800224c:	2b00      	cmp	r3, #0
 800224e:	f000 82f7 	beq.w	8002840 <_svfprintf_r+0xef8>
 8002252:	2600      	movs	r6, #0
 8002254:	f89d 3018 	ldrb.w	r3, [sp, #24]
 8002258:	f88d 6067 	strb.w	r6, [sp, #103]	; 0x67
 800225c:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8002260:	9708      	str	r7, [sp, #32]
 8002262:	e4e3      	b.n	8001c2c <_svfprintf_r+0x2e4>
 8002264:	4606      	mov	r6, r0
 8002266:	e538      	b.n	8001cda <_svfprintf_r+0x392>
 8002268:	2310      	movs	r3, #16
 800226a:	6063      	str	r3, [r4, #4]
 800226c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800226e:	3310      	adds	r3, #16
 8002270:	9323      	str	r3, [sp, #140]	; 0x8c
 8002272:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002274:	3301      	adds	r3, #1
 8002276:	2b07      	cmp	r3, #7
 8002278:	9322      	str	r3, [sp, #136]	; 0x88
 800227a:	dc04      	bgt.n	8002286 <_svfprintf_r+0x93e>
 800227c:	3408      	adds	r4, #8
 800227e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002280:	3b10      	subs	r3, #16
 8002282:	9310      	str	r3, [sp, #64]	; 0x40
 8002284:	e611      	b.n	8001eaa <_svfprintf_r+0x562>
 8002286:	aa21      	add	r2, sp, #132	; 0x84
 8002288:	4649      	mov	r1, r9
 800228a:	4650      	mov	r0, sl
 800228c:	f001 ffc8 	bl	8004220 <__ssprint_r>
 8002290:	2800      	cmp	r0, #0
 8002292:	f040 82b6 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002296:	ac2e      	add	r4, sp, #184	; 0xb8
 8002298:	e7f1      	b.n	800227e <_svfprintf_r+0x936>
 800229a:	aa21      	add	r2, sp, #132	; 0x84
 800229c:	4649      	mov	r1, r9
 800229e:	4650      	mov	r0, sl
 80022a0:	f001 ffbe 	bl	8004220 <__ssprint_r>
 80022a4:	2800      	cmp	r0, #0
 80022a6:	f040 82ac 	bne.w	8002802 <_svfprintf_r+0xeba>
 80022aa:	ac2e      	add	r4, sp, #184	; 0xb8
 80022ac:	e610      	b.n	8001ed0 <_svfprintf_r+0x588>
 80022ae:	aa21      	add	r2, sp, #132	; 0x84
 80022b0:	4649      	mov	r1, r9
 80022b2:	4650      	mov	r0, sl
 80022b4:	f001 ffb4 	bl	8004220 <__ssprint_r>
 80022b8:	2800      	cmp	r0, #0
 80022ba:	f040 82a2 	bne.w	8002802 <_svfprintf_r+0xeba>
 80022be:	ac2e      	add	r4, sp, #184	; 0xb8
 80022c0:	e618      	b.n	8001ef4 <_svfprintf_r+0x5ac>
 80022c2:	aa21      	add	r2, sp, #132	; 0x84
 80022c4:	4649      	mov	r1, r9
 80022c6:	4650      	mov	r0, sl
 80022c8:	f001 ffaa 	bl	8004220 <__ssprint_r>
 80022cc:	2800      	cmp	r0, #0
 80022ce:	f040 8298 	bne.w	8002802 <_svfprintf_r+0xeba>
 80022d2:	ac2e      	add	r4, sp, #184	; 0xb8
 80022d4:	e61e      	b.n	8001f14 <_svfprintf_r+0x5cc>
 80022d6:	2310      	movs	r3, #16
 80022d8:	6063      	str	r3, [r4, #4]
 80022da:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80022dc:	3310      	adds	r3, #16
 80022de:	9323      	str	r3, [sp, #140]	; 0x8c
 80022e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80022e2:	3301      	adds	r3, #1
 80022e4:	2b07      	cmp	r3, #7
 80022e6:	9322      	str	r3, [sp, #136]	; 0x88
 80022e8:	dc04      	bgt.n	80022f4 <_svfprintf_r+0x9ac>
 80022ea:	3408      	adds	r4, #8
 80022ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80022ee:	3b10      	subs	r3, #16
 80022f0:	9310      	str	r3, [sp, #64]	; 0x40
 80022f2:	e618      	b.n	8001f26 <_svfprintf_r+0x5de>
 80022f4:	aa21      	add	r2, sp, #132	; 0x84
 80022f6:	4649      	mov	r1, r9
 80022f8:	4650      	mov	r0, sl
 80022fa:	f001 ff91 	bl	8004220 <__ssprint_r>
 80022fe:	2800      	cmp	r0, #0
 8002300:	f040 827f 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002304:	ac2e      	add	r4, sp, #184	; 0xb8
 8002306:	e7f1      	b.n	80022ec <_svfprintf_r+0x9a4>
 8002308:	aa21      	add	r2, sp, #132	; 0x84
 800230a:	4649      	mov	r1, r9
 800230c:	4650      	mov	r0, sl
 800230e:	f001 ff87 	bl	8004220 <__ssprint_r>
 8002312:	2800      	cmp	r0, #0
 8002314:	f040 8275 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002318:	ac2e      	add	r4, sp, #184	; 0xb8
 800231a:	e617      	b.n	8001f4c <_svfprintf_r+0x604>
 800231c:	2310      	movs	r3, #16
 800231e:	6063      	str	r3, [r4, #4]
 8002320:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002322:	3310      	adds	r3, #16
 8002324:	9323      	str	r3, [sp, #140]	; 0x8c
 8002326:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002328:	3301      	adds	r3, #1
 800232a:	2b07      	cmp	r3, #7
 800232c:	9322      	str	r3, [sp, #136]	; 0x88
 800232e:	dc02      	bgt.n	8002336 <_svfprintf_r+0x9ee>
 8002330:	3408      	adds	r4, #8
 8002332:	3e10      	subs	r6, #16
 8002334:	e60e      	b.n	8001f54 <_svfprintf_r+0x60c>
 8002336:	aa21      	add	r2, sp, #132	; 0x84
 8002338:	4649      	mov	r1, r9
 800233a:	4650      	mov	r0, sl
 800233c:	f001 ff70 	bl	8004220 <__ssprint_r>
 8002340:	2800      	cmp	r0, #0
 8002342:	f040 825e 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002346:	ac2e      	add	r4, sp, #184	; 0xb8
 8002348:	e7f3      	b.n	8002332 <_svfprintf_r+0x9ea>
 800234a:	aa21      	add	r2, sp, #132	; 0x84
 800234c:	4649      	mov	r1, r9
 800234e:	4650      	mov	r0, sl
 8002350:	f001 ff66 	bl	8004220 <__ssprint_r>
 8002354:	2800      	cmp	r0, #0
 8002356:	f040 8254 	bne.w	8002802 <_svfprintf_r+0xeba>
 800235a:	ac2e      	add	r4, sp, #184	; 0xb8
 800235c:	e60a      	b.n	8001f74 <_svfprintf_r+0x62c>
 800235e:	9b06      	ldr	r3, [sp, #24]
 8002360:	2b65      	cmp	r3, #101	; 0x65
 8002362:	f340 81a9 	ble.w	80026b8 <_svfprintf_r+0xd70>
 8002366:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002368:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800236a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800236c:	990e      	ldr	r1, [sp, #56]	; 0x38
 800236e:	f7fe fb2f 	bl	80009d0 <__aeabi_dcmpeq>
 8002372:	2800      	cmp	r0, #0
 8002374:	d062      	beq.n	800243c <_svfprintf_r+0xaf4>
 8002376:	4b2f      	ldr	r3, [pc, #188]	; (8002434 <_svfprintf_r+0xaec>)
 8002378:	6023      	str	r3, [r4, #0]
 800237a:	2301      	movs	r3, #1
 800237c:	6063      	str	r3, [r4, #4]
 800237e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002380:	3301      	adds	r3, #1
 8002382:	9323      	str	r3, [sp, #140]	; 0x8c
 8002384:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002386:	3301      	adds	r3, #1
 8002388:	2b07      	cmp	r3, #7
 800238a:	9322      	str	r3, [sp, #136]	; 0x88
 800238c:	dc25      	bgt.n	80023da <_svfprintf_r+0xa92>
 800238e:	3408      	adds	r4, #8
 8002390:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8002392:	9a07      	ldr	r2, [sp, #28]
 8002394:	4293      	cmp	r3, r2
 8002396:	db02      	blt.n	800239e <_svfprintf_r+0xa56>
 8002398:	07ee      	lsls	r6, r5, #31
 800239a:	f57f ae02 	bpl.w	8001fa2 <_svfprintf_r+0x65a>
 800239e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80023a0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80023a2:	6023      	str	r3, [r4, #0]
 80023a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80023a6:	6063      	str	r3, [r4, #4]
 80023a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80023aa:	4413      	add	r3, r2
 80023ac:	9323      	str	r3, [sp, #140]	; 0x8c
 80023ae:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80023b0:	3301      	adds	r3, #1
 80023b2:	2b07      	cmp	r3, #7
 80023b4:	9322      	str	r3, [sp, #136]	; 0x88
 80023b6:	dc1a      	bgt.n	80023ee <_svfprintf_r+0xaa6>
 80023b8:	3408      	adds	r4, #8
 80023ba:	9b07      	ldr	r3, [sp, #28]
 80023bc:	1e5e      	subs	r6, r3, #1
 80023be:	2e00      	cmp	r6, #0
 80023c0:	f77f adef 	ble.w	8001fa2 <_svfprintf_r+0x65a>
 80023c4:	f04f 0810 	mov.w	r8, #16
 80023c8:	4f1b      	ldr	r7, [pc, #108]	; (8002438 <_svfprintf_r+0xaf0>)
 80023ca:	2e10      	cmp	r6, #16
 80023cc:	6027      	str	r7, [r4, #0]
 80023ce:	dc18      	bgt.n	8002402 <_svfprintf_r+0xaba>
 80023d0:	6066      	str	r6, [r4, #4]
 80023d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80023d4:	441e      	add	r6, r3
 80023d6:	9623      	str	r6, [sp, #140]	; 0x8c
 80023d8:	e5d4      	b.n	8001f84 <_svfprintf_r+0x63c>
 80023da:	aa21      	add	r2, sp, #132	; 0x84
 80023dc:	4649      	mov	r1, r9
 80023de:	4650      	mov	r0, sl
 80023e0:	f001 ff1e 	bl	8004220 <__ssprint_r>
 80023e4:	2800      	cmp	r0, #0
 80023e6:	f040 820c 	bne.w	8002802 <_svfprintf_r+0xeba>
 80023ea:	ac2e      	add	r4, sp, #184	; 0xb8
 80023ec:	e7d0      	b.n	8002390 <_svfprintf_r+0xa48>
 80023ee:	aa21      	add	r2, sp, #132	; 0x84
 80023f0:	4649      	mov	r1, r9
 80023f2:	4650      	mov	r0, sl
 80023f4:	f001 ff14 	bl	8004220 <__ssprint_r>
 80023f8:	2800      	cmp	r0, #0
 80023fa:	f040 8202 	bne.w	8002802 <_svfprintf_r+0xeba>
 80023fe:	ac2e      	add	r4, sp, #184	; 0xb8
 8002400:	e7db      	b.n	80023ba <_svfprintf_r+0xa72>
 8002402:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002404:	f8c4 8004 	str.w	r8, [r4, #4]
 8002408:	3310      	adds	r3, #16
 800240a:	9323      	str	r3, [sp, #140]	; 0x8c
 800240c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800240e:	3301      	adds	r3, #1
 8002410:	2b07      	cmp	r3, #7
 8002412:	9322      	str	r3, [sp, #136]	; 0x88
 8002414:	dc02      	bgt.n	800241c <_svfprintf_r+0xad4>
 8002416:	3408      	adds	r4, #8
 8002418:	3e10      	subs	r6, #16
 800241a:	e7d6      	b.n	80023ca <_svfprintf_r+0xa82>
 800241c:	aa21      	add	r2, sp, #132	; 0x84
 800241e:	4649      	mov	r1, r9
 8002420:	4650      	mov	r0, sl
 8002422:	f001 fefd 	bl	8004220 <__ssprint_r>
 8002426:	2800      	cmp	r0, #0
 8002428:	f040 81eb 	bne.w	8002802 <_svfprintf_r+0xeba>
 800242c:	ac2e      	add	r4, sp, #184	; 0xb8
 800242e:	e7f3      	b.n	8002418 <_svfprintf_r+0xad0>
 8002430:	08004855 	.word	0x08004855
 8002434:	08004866 	.word	0x08004866
 8002438:	08004878 	.word	0x08004878
 800243c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800243e:	2b00      	cmp	r3, #0
 8002440:	dc7a      	bgt.n	8002538 <_svfprintf_r+0xbf0>
 8002442:	4b9b      	ldr	r3, [pc, #620]	; (80026b0 <_svfprintf_r+0xd68>)
 8002444:	6023      	str	r3, [r4, #0]
 8002446:	2301      	movs	r3, #1
 8002448:	6063      	str	r3, [r4, #4]
 800244a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800244c:	3301      	adds	r3, #1
 800244e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002450:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002452:	3301      	adds	r3, #1
 8002454:	2b07      	cmp	r3, #7
 8002456:	9322      	str	r3, [sp, #136]	; 0x88
 8002458:	dc44      	bgt.n	80024e4 <_svfprintf_r+0xb9c>
 800245a:	3408      	adds	r4, #8
 800245c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800245e:	b923      	cbnz	r3, 800246a <_svfprintf_r+0xb22>
 8002460:	9b07      	ldr	r3, [sp, #28]
 8002462:	b913      	cbnz	r3, 800246a <_svfprintf_r+0xb22>
 8002464:	07e8      	lsls	r0, r5, #31
 8002466:	f57f ad9c 	bpl.w	8001fa2 <_svfprintf_r+0x65a>
 800246a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800246c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800246e:	6023      	str	r3, [r4, #0]
 8002470:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002472:	6063      	str	r3, [r4, #4]
 8002474:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002476:	4413      	add	r3, r2
 8002478:	9323      	str	r3, [sp, #140]	; 0x8c
 800247a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800247c:	3301      	adds	r3, #1
 800247e:	2b07      	cmp	r3, #7
 8002480:	9322      	str	r3, [sp, #136]	; 0x88
 8002482:	dc39      	bgt.n	80024f8 <_svfprintf_r+0xbb0>
 8002484:	f104 0308 	add.w	r3, r4, #8
 8002488:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 800248a:	2e00      	cmp	r6, #0
 800248c:	da19      	bge.n	80024c2 <_svfprintf_r+0xb7a>
 800248e:	2410      	movs	r4, #16
 8002490:	4f88      	ldr	r7, [pc, #544]	; (80026b4 <_svfprintf_r+0xd6c>)
 8002492:	4276      	negs	r6, r6
 8002494:	2e10      	cmp	r6, #16
 8002496:	601f      	str	r7, [r3, #0]
 8002498:	dc38      	bgt.n	800250c <_svfprintf_r+0xbc4>
 800249a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800249c:	605e      	str	r6, [r3, #4]
 800249e:	4416      	add	r6, r2
 80024a0:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80024a2:	9623      	str	r6, [sp, #140]	; 0x8c
 80024a4:	3201      	adds	r2, #1
 80024a6:	2a07      	cmp	r2, #7
 80024a8:	f103 0308 	add.w	r3, r3, #8
 80024ac:	9222      	str	r2, [sp, #136]	; 0x88
 80024ae:	dd08      	ble.n	80024c2 <_svfprintf_r+0xb7a>
 80024b0:	aa21      	add	r2, sp, #132	; 0x84
 80024b2:	4649      	mov	r1, r9
 80024b4:	4650      	mov	r0, sl
 80024b6:	f001 feb3 	bl	8004220 <__ssprint_r>
 80024ba:	2800      	cmp	r0, #0
 80024bc:	f040 81a1 	bne.w	8002802 <_svfprintf_r+0xeba>
 80024c0:	ab2e      	add	r3, sp, #184	; 0xb8
 80024c2:	9a07      	ldr	r2, [sp, #28]
 80024c4:	9907      	ldr	r1, [sp, #28]
 80024c6:	605a      	str	r2, [r3, #4]
 80024c8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80024ca:	f8c3 8000 	str.w	r8, [r3]
 80024ce:	440a      	add	r2, r1
 80024d0:	9223      	str	r2, [sp, #140]	; 0x8c
 80024d2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80024d4:	3201      	adds	r2, #1
 80024d6:	2a07      	cmp	r2, #7
 80024d8:	9222      	str	r2, [sp, #136]	; 0x88
 80024da:	f73f ad59 	bgt.w	8001f90 <_svfprintf_r+0x648>
 80024de:	f103 0408 	add.w	r4, r3, #8
 80024e2:	e55e      	b.n	8001fa2 <_svfprintf_r+0x65a>
 80024e4:	aa21      	add	r2, sp, #132	; 0x84
 80024e6:	4649      	mov	r1, r9
 80024e8:	4650      	mov	r0, sl
 80024ea:	f001 fe99 	bl	8004220 <__ssprint_r>
 80024ee:	2800      	cmp	r0, #0
 80024f0:	f040 8187 	bne.w	8002802 <_svfprintf_r+0xeba>
 80024f4:	ac2e      	add	r4, sp, #184	; 0xb8
 80024f6:	e7b1      	b.n	800245c <_svfprintf_r+0xb14>
 80024f8:	aa21      	add	r2, sp, #132	; 0x84
 80024fa:	4649      	mov	r1, r9
 80024fc:	4650      	mov	r0, sl
 80024fe:	f001 fe8f 	bl	8004220 <__ssprint_r>
 8002502:	2800      	cmp	r0, #0
 8002504:	f040 817d 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002508:	ab2e      	add	r3, sp, #184	; 0xb8
 800250a:	e7bd      	b.n	8002488 <_svfprintf_r+0xb40>
 800250c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 800250e:	605c      	str	r4, [r3, #4]
 8002510:	3210      	adds	r2, #16
 8002512:	9223      	str	r2, [sp, #140]	; 0x8c
 8002514:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002516:	3201      	adds	r2, #1
 8002518:	2a07      	cmp	r2, #7
 800251a:	9222      	str	r2, [sp, #136]	; 0x88
 800251c:	dc02      	bgt.n	8002524 <_svfprintf_r+0xbdc>
 800251e:	3308      	adds	r3, #8
 8002520:	3e10      	subs	r6, #16
 8002522:	e7b7      	b.n	8002494 <_svfprintf_r+0xb4c>
 8002524:	aa21      	add	r2, sp, #132	; 0x84
 8002526:	4649      	mov	r1, r9
 8002528:	4650      	mov	r0, sl
 800252a:	f001 fe79 	bl	8004220 <__ssprint_r>
 800252e:	2800      	cmp	r0, #0
 8002530:	f040 8167 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002534:	ab2e      	add	r3, sp, #184	; 0xb8
 8002536:	e7f3      	b.n	8002520 <_svfprintf_r+0xbd8>
 8002538:	9b07      	ldr	r3, [sp, #28]
 800253a:	42bb      	cmp	r3, r7
 800253c:	bfa8      	it	ge
 800253e:	463b      	movge	r3, r7
 8002540:	2b00      	cmp	r3, #0
 8002542:	461e      	mov	r6, r3
 8002544:	dd0b      	ble.n	800255e <_svfprintf_r+0xc16>
 8002546:	6063      	str	r3, [r4, #4]
 8002548:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800254a:	f8c4 8000 	str.w	r8, [r4]
 800254e:	4433      	add	r3, r6
 8002550:	9323      	str	r3, [sp, #140]	; 0x8c
 8002552:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002554:	3301      	adds	r3, #1
 8002556:	2b07      	cmp	r3, #7
 8002558:	9322      	str	r3, [sp, #136]	; 0x88
 800255a:	dc5f      	bgt.n	800261c <_svfprintf_r+0xcd4>
 800255c:	3408      	adds	r4, #8
 800255e:	2e00      	cmp	r6, #0
 8002560:	bfb4      	ite	lt
 8002562:	463e      	movlt	r6, r7
 8002564:	1bbe      	subge	r6, r7, r6
 8002566:	2e00      	cmp	r6, #0
 8002568:	dd0f      	ble.n	800258a <_svfprintf_r+0xc42>
 800256a:	f8df b148 	ldr.w	fp, [pc, #328]	; 80026b4 <_svfprintf_r+0xd6c>
 800256e:	2e10      	cmp	r6, #16
 8002570:	f8c4 b000 	str.w	fp, [r4]
 8002574:	dc5c      	bgt.n	8002630 <_svfprintf_r+0xce8>
 8002576:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002578:	6066      	str	r6, [r4, #4]
 800257a:	441e      	add	r6, r3
 800257c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800257e:	9623      	str	r6, [sp, #140]	; 0x8c
 8002580:	3301      	adds	r3, #1
 8002582:	2b07      	cmp	r3, #7
 8002584:	9322      	str	r3, [sp, #136]	; 0x88
 8002586:	dc6a      	bgt.n	800265e <_svfprintf_r+0xd16>
 8002588:	3408      	adds	r4, #8
 800258a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800258c:	9a07      	ldr	r2, [sp, #28]
 800258e:	4293      	cmp	r3, r2
 8002590:	db01      	blt.n	8002596 <_svfprintf_r+0xc4e>
 8002592:	07e9      	lsls	r1, r5, #31
 8002594:	d50d      	bpl.n	80025b2 <_svfprintf_r+0xc6a>
 8002596:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002598:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800259a:	6023      	str	r3, [r4, #0]
 800259c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800259e:	6063      	str	r3, [r4, #4]
 80025a0:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80025a2:	4413      	add	r3, r2
 80025a4:	9323      	str	r3, [sp, #140]	; 0x8c
 80025a6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80025a8:	3301      	adds	r3, #1
 80025aa:	2b07      	cmp	r3, #7
 80025ac:	9322      	str	r3, [sp, #136]	; 0x88
 80025ae:	dc60      	bgt.n	8002672 <_svfprintf_r+0xd2a>
 80025b0:	3408      	adds	r4, #8
 80025b2:	9b07      	ldr	r3, [sp, #28]
 80025b4:	9a07      	ldr	r2, [sp, #28]
 80025b6:	1bde      	subs	r6, r3, r7
 80025b8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80025ba:	1ad3      	subs	r3, r2, r3
 80025bc:	429e      	cmp	r6, r3
 80025be:	bfa8      	it	ge
 80025c0:	461e      	movge	r6, r3
 80025c2:	2e00      	cmp	r6, #0
 80025c4:	dd0b      	ble.n	80025de <_svfprintf_r+0xc96>
 80025c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80025c8:	4447      	add	r7, r8
 80025ca:	4433      	add	r3, r6
 80025cc:	9323      	str	r3, [sp, #140]	; 0x8c
 80025ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80025d0:	6027      	str	r7, [r4, #0]
 80025d2:	3301      	adds	r3, #1
 80025d4:	2b07      	cmp	r3, #7
 80025d6:	6066      	str	r6, [r4, #4]
 80025d8:	9322      	str	r3, [sp, #136]	; 0x88
 80025da:	dc54      	bgt.n	8002686 <_svfprintf_r+0xd3e>
 80025dc:	3408      	adds	r4, #8
 80025de:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80025e0:	9a07      	ldr	r2, [sp, #28]
 80025e2:	2e00      	cmp	r6, #0
 80025e4:	eba2 0303 	sub.w	r3, r2, r3
 80025e8:	bfb4      	ite	lt
 80025ea:	461e      	movlt	r6, r3
 80025ec:	1b9e      	subge	r6, r3, r6
 80025ee:	2e00      	cmp	r6, #0
 80025f0:	f77f acd7 	ble.w	8001fa2 <_svfprintf_r+0x65a>
 80025f4:	f04f 0810 	mov.w	r8, #16
 80025f8:	4f2e      	ldr	r7, [pc, #184]	; (80026b4 <_svfprintf_r+0xd6c>)
 80025fa:	2e10      	cmp	r6, #16
 80025fc:	6027      	str	r7, [r4, #0]
 80025fe:	f77f aee7 	ble.w	80023d0 <_svfprintf_r+0xa88>
 8002602:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002604:	f8c4 8004 	str.w	r8, [r4, #4]
 8002608:	3310      	adds	r3, #16
 800260a:	9323      	str	r3, [sp, #140]	; 0x8c
 800260c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800260e:	3301      	adds	r3, #1
 8002610:	2b07      	cmp	r3, #7
 8002612:	9322      	str	r3, [sp, #136]	; 0x88
 8002614:	dc41      	bgt.n	800269a <_svfprintf_r+0xd52>
 8002616:	3408      	adds	r4, #8
 8002618:	3e10      	subs	r6, #16
 800261a:	e7ee      	b.n	80025fa <_svfprintf_r+0xcb2>
 800261c:	aa21      	add	r2, sp, #132	; 0x84
 800261e:	4649      	mov	r1, r9
 8002620:	4650      	mov	r0, sl
 8002622:	f001 fdfd 	bl	8004220 <__ssprint_r>
 8002626:	2800      	cmp	r0, #0
 8002628:	f040 80eb 	bne.w	8002802 <_svfprintf_r+0xeba>
 800262c:	ac2e      	add	r4, sp, #184	; 0xb8
 800262e:	e796      	b.n	800255e <_svfprintf_r+0xc16>
 8002630:	2310      	movs	r3, #16
 8002632:	6063      	str	r3, [r4, #4]
 8002634:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002636:	3310      	adds	r3, #16
 8002638:	9323      	str	r3, [sp, #140]	; 0x8c
 800263a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800263c:	3301      	adds	r3, #1
 800263e:	2b07      	cmp	r3, #7
 8002640:	9322      	str	r3, [sp, #136]	; 0x88
 8002642:	dc02      	bgt.n	800264a <_svfprintf_r+0xd02>
 8002644:	3408      	adds	r4, #8
 8002646:	3e10      	subs	r6, #16
 8002648:	e791      	b.n	800256e <_svfprintf_r+0xc26>
 800264a:	aa21      	add	r2, sp, #132	; 0x84
 800264c:	4649      	mov	r1, r9
 800264e:	4650      	mov	r0, sl
 8002650:	f001 fde6 	bl	8004220 <__ssprint_r>
 8002654:	2800      	cmp	r0, #0
 8002656:	f040 80d4 	bne.w	8002802 <_svfprintf_r+0xeba>
 800265a:	ac2e      	add	r4, sp, #184	; 0xb8
 800265c:	e7f3      	b.n	8002646 <_svfprintf_r+0xcfe>
 800265e:	aa21      	add	r2, sp, #132	; 0x84
 8002660:	4649      	mov	r1, r9
 8002662:	4650      	mov	r0, sl
 8002664:	f001 fddc 	bl	8004220 <__ssprint_r>
 8002668:	2800      	cmp	r0, #0
 800266a:	f040 80ca 	bne.w	8002802 <_svfprintf_r+0xeba>
 800266e:	ac2e      	add	r4, sp, #184	; 0xb8
 8002670:	e78b      	b.n	800258a <_svfprintf_r+0xc42>
 8002672:	aa21      	add	r2, sp, #132	; 0x84
 8002674:	4649      	mov	r1, r9
 8002676:	4650      	mov	r0, sl
 8002678:	f001 fdd2 	bl	8004220 <__ssprint_r>
 800267c:	2800      	cmp	r0, #0
 800267e:	f040 80c0 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002682:	ac2e      	add	r4, sp, #184	; 0xb8
 8002684:	e795      	b.n	80025b2 <_svfprintf_r+0xc6a>
 8002686:	aa21      	add	r2, sp, #132	; 0x84
 8002688:	4649      	mov	r1, r9
 800268a:	4650      	mov	r0, sl
 800268c:	f001 fdc8 	bl	8004220 <__ssprint_r>
 8002690:	2800      	cmp	r0, #0
 8002692:	f040 80b6 	bne.w	8002802 <_svfprintf_r+0xeba>
 8002696:	ac2e      	add	r4, sp, #184	; 0xb8
 8002698:	e7a1      	b.n	80025de <_svfprintf_r+0xc96>
 800269a:	aa21      	add	r2, sp, #132	; 0x84
 800269c:	4649      	mov	r1, r9
 800269e:	4650      	mov	r0, sl
 80026a0:	f001 fdbe 	bl	8004220 <__ssprint_r>
 80026a4:	2800      	cmp	r0, #0
 80026a6:	f040 80ac 	bne.w	8002802 <_svfprintf_r+0xeba>
 80026aa:	ac2e      	add	r4, sp, #184	; 0xb8
 80026ac:	e7b4      	b.n	8002618 <_svfprintf_r+0xcd0>
 80026ae:	bf00      	nop
 80026b0:	08004866 	.word	0x08004866
 80026b4:	08004878 	.word	0x08004878
 80026b8:	9b07      	ldr	r3, [sp, #28]
 80026ba:	2b01      	cmp	r3, #1
 80026bc:	dc01      	bgt.n	80026c2 <_svfprintf_r+0xd7a>
 80026be:	07ea      	lsls	r2, r5, #31
 80026c0:	d576      	bpl.n	80027b0 <_svfprintf_r+0xe68>
 80026c2:	2301      	movs	r3, #1
 80026c4:	6063      	str	r3, [r4, #4]
 80026c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80026c8:	f8c4 8000 	str.w	r8, [r4]
 80026cc:	3301      	adds	r3, #1
 80026ce:	9323      	str	r3, [sp, #140]	; 0x8c
 80026d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80026d2:	3301      	adds	r3, #1
 80026d4:	2b07      	cmp	r3, #7
 80026d6:	9322      	str	r3, [sp, #136]	; 0x88
 80026d8:	dc36      	bgt.n	8002748 <_svfprintf_r+0xe00>
 80026da:	3408      	adds	r4, #8
 80026dc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80026de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80026e0:	6023      	str	r3, [r4, #0]
 80026e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026e4:	6063      	str	r3, [r4, #4]
 80026e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80026e8:	4413      	add	r3, r2
 80026ea:	9323      	str	r3, [sp, #140]	; 0x8c
 80026ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80026ee:	3301      	adds	r3, #1
 80026f0:	2b07      	cmp	r3, #7
 80026f2:	9322      	str	r3, [sp, #136]	; 0x88
 80026f4:	dc31      	bgt.n	800275a <_svfprintf_r+0xe12>
 80026f6:	3408      	adds	r4, #8
 80026f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80026fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80026fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80026fe:	990e      	ldr	r1, [sp, #56]	; 0x38
 8002700:	f7fe f966 	bl	80009d0 <__aeabi_dcmpeq>
 8002704:	9b07      	ldr	r3, [sp, #28]
 8002706:	1e5e      	subs	r6, r3, #1
 8002708:	2800      	cmp	r0, #0
 800270a:	d12f      	bne.n	800276c <_svfprintf_r+0xe24>
 800270c:	f108 0301 	add.w	r3, r8, #1
 8002710:	e884 0048 	stmia.w	r4, {r3, r6}
 8002714:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002716:	9a07      	ldr	r2, [sp, #28]
 8002718:	3b01      	subs	r3, #1
 800271a:	4413      	add	r3, r2
 800271c:	9323      	str	r3, [sp, #140]	; 0x8c
 800271e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002720:	3301      	adds	r3, #1
 8002722:	2b07      	cmp	r3, #7
 8002724:	9322      	str	r3, [sp, #136]	; 0x88
 8002726:	dd4a      	ble.n	80027be <_svfprintf_r+0xe76>
 8002728:	aa21      	add	r2, sp, #132	; 0x84
 800272a:	4649      	mov	r1, r9
 800272c:	4650      	mov	r0, sl
 800272e:	f001 fd77 	bl	8004220 <__ssprint_r>
 8002732:	2800      	cmp	r0, #0
 8002734:	d165      	bne.n	8002802 <_svfprintf_r+0xeba>
 8002736:	ac2e      	add	r4, sp, #184	; 0xb8
 8002738:	ab1d      	add	r3, sp, #116	; 0x74
 800273a:	6023      	str	r3, [r4, #0]
 800273c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800273e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8002740:	6063      	str	r3, [r4, #4]
 8002742:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002744:	4413      	add	r3, r2
 8002746:	e41c      	b.n	8001f82 <_svfprintf_r+0x63a>
 8002748:	aa21      	add	r2, sp, #132	; 0x84
 800274a:	4649      	mov	r1, r9
 800274c:	4650      	mov	r0, sl
 800274e:	f001 fd67 	bl	8004220 <__ssprint_r>
 8002752:	2800      	cmp	r0, #0
 8002754:	d155      	bne.n	8002802 <_svfprintf_r+0xeba>
 8002756:	ac2e      	add	r4, sp, #184	; 0xb8
 8002758:	e7c0      	b.n	80026dc <_svfprintf_r+0xd94>
 800275a:	aa21      	add	r2, sp, #132	; 0x84
 800275c:	4649      	mov	r1, r9
 800275e:	4650      	mov	r0, sl
 8002760:	f001 fd5e 	bl	8004220 <__ssprint_r>
 8002764:	2800      	cmp	r0, #0
 8002766:	d14c      	bne.n	8002802 <_svfprintf_r+0xeba>
 8002768:	ac2e      	add	r4, sp, #184	; 0xb8
 800276a:	e7c5      	b.n	80026f8 <_svfprintf_r+0xdb0>
 800276c:	2e00      	cmp	r6, #0
 800276e:	dde3      	ble.n	8002738 <_svfprintf_r+0xdf0>
 8002770:	f04f 0810 	mov.w	r8, #16
 8002774:	4f58      	ldr	r7, [pc, #352]	; (80028d8 <_svfprintf_r+0xf90>)
 8002776:	2e10      	cmp	r6, #16
 8002778:	6027      	str	r7, [r4, #0]
 800277a:	dc04      	bgt.n	8002786 <_svfprintf_r+0xe3e>
 800277c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800277e:	6066      	str	r6, [r4, #4]
 8002780:	441e      	add	r6, r3
 8002782:	9623      	str	r6, [sp, #140]	; 0x8c
 8002784:	e7cb      	b.n	800271e <_svfprintf_r+0xdd6>
 8002786:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002788:	f8c4 8004 	str.w	r8, [r4, #4]
 800278c:	3310      	adds	r3, #16
 800278e:	9323      	str	r3, [sp, #140]	; 0x8c
 8002790:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002792:	3301      	adds	r3, #1
 8002794:	2b07      	cmp	r3, #7
 8002796:	9322      	str	r3, [sp, #136]	; 0x88
 8002798:	dc02      	bgt.n	80027a0 <_svfprintf_r+0xe58>
 800279a:	3408      	adds	r4, #8
 800279c:	3e10      	subs	r6, #16
 800279e:	e7ea      	b.n	8002776 <_svfprintf_r+0xe2e>
 80027a0:	aa21      	add	r2, sp, #132	; 0x84
 80027a2:	4649      	mov	r1, r9
 80027a4:	4650      	mov	r0, sl
 80027a6:	f001 fd3b 	bl	8004220 <__ssprint_r>
 80027aa:	bb50      	cbnz	r0, 8002802 <_svfprintf_r+0xeba>
 80027ac:	ac2e      	add	r4, sp, #184	; 0xb8
 80027ae:	e7f5      	b.n	800279c <_svfprintf_r+0xe54>
 80027b0:	2301      	movs	r3, #1
 80027b2:	6063      	str	r3, [r4, #4]
 80027b4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80027b6:	f8c4 8000 	str.w	r8, [r4]
 80027ba:	3301      	adds	r3, #1
 80027bc:	e7ae      	b.n	800271c <_svfprintf_r+0xdd4>
 80027be:	3408      	adds	r4, #8
 80027c0:	e7ba      	b.n	8002738 <_svfprintf_r+0xdf0>
 80027c2:	3408      	adds	r4, #8
 80027c4:	f7ff bbed 	b.w	8001fa2 <_svfprintf_r+0x65a>
 80027c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80027ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80027cc:	1a9d      	subs	r5, r3, r2
 80027ce:	2d00      	cmp	r5, #0
 80027d0:	f77f abea 	ble.w	8001fa8 <_svfprintf_r+0x660>
 80027d4:	2610      	movs	r6, #16
 80027d6:	4b41      	ldr	r3, [pc, #260]	; (80028dc <_svfprintf_r+0xf94>)
 80027d8:	2d10      	cmp	r5, #16
 80027da:	6023      	str	r3, [r4, #0]
 80027dc:	dc1b      	bgt.n	8002816 <_svfprintf_r+0xece>
 80027de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80027e0:	6065      	str	r5, [r4, #4]
 80027e2:	441d      	add	r5, r3
 80027e4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80027e6:	9523      	str	r5, [sp, #140]	; 0x8c
 80027e8:	3301      	adds	r3, #1
 80027ea:	2b07      	cmp	r3, #7
 80027ec:	9322      	str	r3, [sp, #136]	; 0x88
 80027ee:	f77f abdb 	ble.w	8001fa8 <_svfprintf_r+0x660>
 80027f2:	aa21      	add	r2, sp, #132	; 0x84
 80027f4:	4649      	mov	r1, r9
 80027f6:	4650      	mov	r0, sl
 80027f8:	f001 fd12 	bl	8004220 <__ssprint_r>
 80027fc:	2800      	cmp	r0, #0
 80027fe:	f43f abd3 	beq.w	8001fa8 <_svfprintf_r+0x660>
 8002802:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8002806:	f013 0f40 	tst.w	r3, #64	; 0x40
 800280a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800280c:	bf18      	it	ne
 800280e:	f04f 33ff 	movne.w	r3, #4294967295
 8002812:	f7ff b8bd 	b.w	8001990 <_svfprintf_r+0x48>
 8002816:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002818:	6066      	str	r6, [r4, #4]
 800281a:	3310      	adds	r3, #16
 800281c:	9323      	str	r3, [sp, #140]	; 0x8c
 800281e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002820:	3301      	adds	r3, #1
 8002822:	2b07      	cmp	r3, #7
 8002824:	9322      	str	r3, [sp, #136]	; 0x88
 8002826:	dc02      	bgt.n	800282e <_svfprintf_r+0xee6>
 8002828:	3408      	adds	r4, #8
 800282a:	3d10      	subs	r5, #16
 800282c:	e7d3      	b.n	80027d6 <_svfprintf_r+0xe8e>
 800282e:	aa21      	add	r2, sp, #132	; 0x84
 8002830:	4649      	mov	r1, r9
 8002832:	4650      	mov	r0, sl
 8002834:	f001 fcf4 	bl	8004220 <__ssprint_r>
 8002838:	2800      	cmp	r0, #0
 800283a:	d1e2      	bne.n	8002802 <_svfprintf_r+0xeba>
 800283c:	ac2e      	add	r4, sp, #184	; 0xb8
 800283e:	e7f4      	b.n	800282a <_svfprintf_r+0xee2>
 8002840:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8002842:	2b00      	cmp	r3, #0
 8002844:	d0dd      	beq.n	8002802 <_svfprintf_r+0xeba>
 8002846:	aa21      	add	r2, sp, #132	; 0x84
 8002848:	4649      	mov	r1, r9
 800284a:	4650      	mov	r0, sl
 800284c:	f001 fce8 	bl	8004220 <__ssprint_r>
 8002850:	e7d7      	b.n	8002802 <_svfprintf_r+0xeba>
 8002852:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002854:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002856:	980d      	ldr	r0, [sp, #52]	; 0x34
 8002858:	990e      	ldr	r1, [sp, #56]	; 0x38
 800285a:	f7fe f8eb 	bl	8000a34 <__aeabi_dcmpun>
 800285e:	2800      	cmp	r0, #0
 8002860:	f43f aa3d 	beq.w	8001cde <_svfprintf_r+0x396>
 8002864:	4b1e      	ldr	r3, [pc, #120]	; (80028e0 <_svfprintf_r+0xf98>)
 8002866:	4a1f      	ldr	r2, [pc, #124]	; (80028e4 <_svfprintf_r+0xf9c>)
 8002868:	f7ff ba2d 	b.w	8001cc6 <_svfprintf_r+0x37e>
 800286c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800286e:	eba3 0308 	sub.w	r3, r3, r8
 8002872:	9307      	str	r3, [sp, #28]
 8002874:	f7ff baaf 	b.w	8001dd6 <_svfprintf_r+0x48e>
 8002878:	ea56 0207 	orrs.w	r2, r6, r7
 800287c:	950f      	str	r5, [sp, #60]	; 0x3c
 800287e:	f43f ac2b 	beq.w	80020d8 <_svfprintf_r+0x790>
 8002882:	2b01      	cmp	r3, #1
 8002884:	f43f ac9d 	beq.w	80021c2 <_svfprintf_r+0x87a>
 8002888:	2b02      	cmp	r3, #2
 800288a:	f43f acbd 	beq.w	8002208 <_svfprintf_r+0x8c0>
 800288e:	ab2e      	add	r3, sp, #184	; 0xb8
 8002890:	08f1      	lsrs	r1, r6, #3
 8002892:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8002896:	08f8      	lsrs	r0, r7, #3
 8002898:	f006 0207 	and.w	r2, r6, #7
 800289c:	4607      	mov	r7, r0
 800289e:	460e      	mov	r6, r1
 80028a0:	3230      	adds	r2, #48	; 0x30
 80028a2:	ea56 0107 	orrs.w	r1, r6, r7
 80028a6:	f103 38ff 	add.w	r8, r3, #4294967295
 80028aa:	f803 2c01 	strb.w	r2, [r3, #-1]
 80028ae:	f47f ac86 	bne.w	80021be <_svfprintf_r+0x876>
 80028b2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80028b4:	07c9      	lsls	r1, r1, #31
 80028b6:	d506      	bpl.n	80028c6 <_svfprintf_r+0xf7e>
 80028b8:	2a30      	cmp	r2, #48	; 0x30
 80028ba:	d004      	beq.n	80028c6 <_svfprintf_r+0xf7e>
 80028bc:	2230      	movs	r2, #48	; 0x30
 80028be:	f808 2c01 	strb.w	r2, [r8, #-1]
 80028c2:	f1a3 0802 	sub.w	r8, r3, #2
 80028c6:	ab2e      	add	r3, sp, #184	; 0xb8
 80028c8:	465e      	mov	r6, fp
 80028ca:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80028cc:	eba3 0b08 	sub.w	fp, r3, r8
 80028d0:	2700      	movs	r7, #0
 80028d2:	f7ff bace 	b.w	8001e72 <_svfprintf_r+0x52a>
 80028d6:	bf00      	nop
 80028d8:	08004878 	.word	0x08004878
 80028dc:	08004868 	.word	0x08004868
 80028e0:	0800483c 	.word	0x0800483c
 80028e4:	08004840 	.word	0x08004840

080028e8 <quorem>:
 80028e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80028ec:	6903      	ldr	r3, [r0, #16]
 80028ee:	690c      	ldr	r4, [r1, #16]
 80028f0:	4680      	mov	r8, r0
 80028f2:	429c      	cmp	r4, r3
 80028f4:	f300 8082 	bgt.w	80029fc <quorem+0x114>
 80028f8:	3c01      	subs	r4, #1
 80028fa:	f101 0714 	add.w	r7, r1, #20
 80028fe:	f100 0614 	add.w	r6, r0, #20
 8002902:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8002906:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800290a:	3501      	adds	r5, #1
 800290c:	fbb0 f5f5 	udiv	r5, r0, r5
 8002910:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 8002914:	eb06 030e 	add.w	r3, r6, lr
 8002918:	eb07 090e 	add.w	r9, r7, lr
 800291c:	9301      	str	r3, [sp, #4]
 800291e:	b38d      	cbz	r5, 8002984 <quorem+0x9c>
 8002920:	f04f 0a00 	mov.w	sl, #0
 8002924:	4638      	mov	r0, r7
 8002926:	46b4      	mov	ip, r6
 8002928:	46d3      	mov	fp, sl
 800292a:	f850 2b04 	ldr.w	r2, [r0], #4
 800292e:	b293      	uxth	r3, r2
 8002930:	fb05 a303 	mla	r3, r5, r3, sl
 8002934:	0c12      	lsrs	r2, r2, #16
 8002936:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800293a:	fb05 a202 	mla	r2, r5, r2, sl
 800293e:	b29b      	uxth	r3, r3
 8002940:	ebab 0303 	sub.w	r3, fp, r3
 8002944:	f8bc b000 	ldrh.w	fp, [ip]
 8002948:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 800294c:	445b      	add	r3, fp
 800294e:	fa1f fb82 	uxth.w	fp, r2
 8002952:	f8dc 2000 	ldr.w	r2, [ip]
 8002956:	4581      	cmp	r9, r0
 8002958:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 800295c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002960:	b29b      	uxth	r3, r3
 8002962:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002966:	ea4f 4b22 	mov.w	fp, r2, asr #16
 800296a:	f84c 3b04 	str.w	r3, [ip], #4
 800296e:	d2dc      	bcs.n	800292a <quorem+0x42>
 8002970:	f856 300e 	ldr.w	r3, [r6, lr]
 8002974:	b933      	cbnz	r3, 8002984 <quorem+0x9c>
 8002976:	9b01      	ldr	r3, [sp, #4]
 8002978:	3b04      	subs	r3, #4
 800297a:	429e      	cmp	r6, r3
 800297c:	461a      	mov	r2, r3
 800297e:	d331      	bcc.n	80029e4 <quorem+0xfc>
 8002980:	f8c8 4010 	str.w	r4, [r8, #16]
 8002984:	4640      	mov	r0, r8
 8002986:	f001 fb72 	bl	800406e <__mcmp>
 800298a:	2800      	cmp	r0, #0
 800298c:	db26      	blt.n	80029dc <quorem+0xf4>
 800298e:	4630      	mov	r0, r6
 8002990:	f04f 0e00 	mov.w	lr, #0
 8002994:	3501      	adds	r5, #1
 8002996:	f857 1b04 	ldr.w	r1, [r7], #4
 800299a:	f8d0 c000 	ldr.w	ip, [r0]
 800299e:	b28b      	uxth	r3, r1
 80029a0:	ebae 0303 	sub.w	r3, lr, r3
 80029a4:	fa1f f28c 	uxth.w	r2, ip
 80029a8:	4413      	add	r3, r2
 80029aa:	0c0a      	lsrs	r2, r1, #16
 80029ac:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80029b0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80029b4:	b29b      	uxth	r3, r3
 80029b6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80029ba:	45b9      	cmp	r9, r7
 80029bc:	ea4f 4e22 	mov.w	lr, r2, asr #16
 80029c0:	f840 3b04 	str.w	r3, [r0], #4
 80029c4:	d2e7      	bcs.n	8002996 <quorem+0xae>
 80029c6:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 80029ca:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 80029ce:	b92a      	cbnz	r2, 80029dc <quorem+0xf4>
 80029d0:	3b04      	subs	r3, #4
 80029d2:	429e      	cmp	r6, r3
 80029d4:	461a      	mov	r2, r3
 80029d6:	d30b      	bcc.n	80029f0 <quorem+0x108>
 80029d8:	f8c8 4010 	str.w	r4, [r8, #16]
 80029dc:	4628      	mov	r0, r5
 80029de:	b003      	add	sp, #12
 80029e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029e4:	6812      	ldr	r2, [r2, #0]
 80029e6:	3b04      	subs	r3, #4
 80029e8:	2a00      	cmp	r2, #0
 80029ea:	d1c9      	bne.n	8002980 <quorem+0x98>
 80029ec:	3c01      	subs	r4, #1
 80029ee:	e7c4      	b.n	800297a <quorem+0x92>
 80029f0:	6812      	ldr	r2, [r2, #0]
 80029f2:	3b04      	subs	r3, #4
 80029f4:	2a00      	cmp	r2, #0
 80029f6:	d1ef      	bne.n	80029d8 <quorem+0xf0>
 80029f8:	3c01      	subs	r4, #1
 80029fa:	e7ea      	b.n	80029d2 <quorem+0xea>
 80029fc:	2000      	movs	r0, #0
 80029fe:	e7ee      	b.n	80029de <quorem+0xf6>

08002a00 <_dtoa_r>:
 8002a00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002a04:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8002a06:	b095      	sub	sp, #84	; 0x54
 8002a08:	4604      	mov	r4, r0
 8002a0a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8002a0c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a10:	b93e      	cbnz	r6, 8002a22 <_dtoa_r+0x22>
 8002a12:	2010      	movs	r0, #16
 8002a14:	f000 fee8 	bl	80037e8 <malloc>
 8002a18:	6260      	str	r0, [r4, #36]	; 0x24
 8002a1a:	6046      	str	r6, [r0, #4]
 8002a1c:	6086      	str	r6, [r0, #8]
 8002a1e:	6006      	str	r6, [r0, #0]
 8002a20:	60c6      	str	r6, [r0, #12]
 8002a22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a24:	6819      	ldr	r1, [r3, #0]
 8002a26:	b151      	cbz	r1, 8002a3e <_dtoa_r+0x3e>
 8002a28:	685a      	ldr	r2, [r3, #4]
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	4093      	lsls	r3, r2
 8002a2e:	604a      	str	r2, [r1, #4]
 8002a30:	608b      	str	r3, [r1, #8]
 8002a32:	4620      	mov	r0, r4
 8002a34:	f001 f946 	bl	8003cc4 <_Bfree>
 8002a38:	2200      	movs	r2, #0
 8002a3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002a3c:	601a      	str	r2, [r3, #0]
 8002a3e:	9b03      	ldr	r3, [sp, #12]
 8002a40:	2b00      	cmp	r3, #0
 8002a42:	bfb7      	itett	lt
 8002a44:	2301      	movlt	r3, #1
 8002a46:	2300      	movge	r3, #0
 8002a48:	602b      	strlt	r3, [r5, #0]
 8002a4a:	9b03      	ldrlt	r3, [sp, #12]
 8002a4c:	bfae      	itee	ge
 8002a4e:	602b      	strge	r3, [r5, #0]
 8002a50:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002a54:	9303      	strlt	r3, [sp, #12]
 8002a56:	f8dd 900c 	ldr.w	r9, [sp, #12]
 8002a5a:	4bab      	ldr	r3, [pc, #684]	; (8002d08 <_dtoa_r+0x308>)
 8002a5c:	ea33 0309 	bics.w	r3, r3, r9
 8002a60:	d11b      	bne.n	8002a9a <_dtoa_r+0x9a>
 8002a62:	f242 730f 	movw	r3, #9999	; 0x270f
 8002a66:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002a68:	6013      	str	r3, [r2, #0]
 8002a6a:	9b02      	ldr	r3, [sp, #8]
 8002a6c:	b923      	cbnz	r3, 8002a78 <_dtoa_r+0x78>
 8002a6e:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8002a72:	2800      	cmp	r0, #0
 8002a74:	f000 8583 	beq.w	800357e <_dtoa_r+0xb7e>
 8002a78:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002a7a:	b953      	cbnz	r3, 8002a92 <_dtoa_r+0x92>
 8002a7c:	4ba3      	ldr	r3, [pc, #652]	; (8002d0c <_dtoa_r+0x30c>)
 8002a7e:	e021      	b.n	8002ac4 <_dtoa_r+0xc4>
 8002a80:	4ba3      	ldr	r3, [pc, #652]	; (8002d10 <_dtoa_r+0x310>)
 8002a82:	9306      	str	r3, [sp, #24]
 8002a84:	3308      	adds	r3, #8
 8002a86:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002a88:	6013      	str	r3, [r2, #0]
 8002a8a:	9806      	ldr	r0, [sp, #24]
 8002a8c:	b015      	add	sp, #84	; 0x54
 8002a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002a92:	4b9e      	ldr	r3, [pc, #632]	; (8002d0c <_dtoa_r+0x30c>)
 8002a94:	9306      	str	r3, [sp, #24]
 8002a96:	3303      	adds	r3, #3
 8002a98:	e7f5      	b.n	8002a86 <_dtoa_r+0x86>
 8002a9a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002a9e:	2200      	movs	r2, #0
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	4630      	mov	r0, r6
 8002aa4:	4639      	mov	r1, r7
 8002aa6:	f7fd ff93 	bl	80009d0 <__aeabi_dcmpeq>
 8002aaa:	4680      	mov	r8, r0
 8002aac:	b160      	cbz	r0, 8002ac8 <_dtoa_r+0xc8>
 8002aae:	2301      	movs	r3, #1
 8002ab0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8002ab2:	6013      	str	r3, [r2, #0]
 8002ab4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	f000 855e 	beq.w	8003578 <_dtoa_r+0xb78>
 8002abc:	4b95      	ldr	r3, [pc, #596]	; (8002d14 <_dtoa_r+0x314>)
 8002abe:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8002ac0:	6013      	str	r3, [r2, #0]
 8002ac2:	3b01      	subs	r3, #1
 8002ac4:	9306      	str	r3, [sp, #24]
 8002ac6:	e7e0      	b.n	8002a8a <_dtoa_r+0x8a>
 8002ac8:	ab12      	add	r3, sp, #72	; 0x48
 8002aca:	9301      	str	r3, [sp, #4]
 8002acc:	ab13      	add	r3, sp, #76	; 0x4c
 8002ace:	9300      	str	r3, [sp, #0]
 8002ad0:	4632      	mov	r2, r6
 8002ad2:	463b      	mov	r3, r7
 8002ad4:	4620      	mov	r0, r4
 8002ad6:	f001 fb43 	bl	8004160 <__d2b>
 8002ada:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8002ade:	4682      	mov	sl, r0
 8002ae0:	2d00      	cmp	r5, #0
 8002ae2:	d07d      	beq.n	8002be0 <_dtoa_r+0x1e0>
 8002ae4:	4630      	mov	r0, r6
 8002ae6:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002aea:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 8002aee:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8002af2:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002af6:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8002afa:	2200      	movs	r2, #0
 8002afc:	4b86      	ldr	r3, [pc, #536]	; (8002d18 <_dtoa_r+0x318>)
 8002afe:	f7fd fb4b 	bl	8000198 <__aeabi_dsub>
 8002b02:	a37b      	add	r3, pc, #492	; (adr r3, 8002cf0 <_dtoa_r+0x2f0>)
 8002b04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b08:	f7fd fcfa 	bl	8000500 <__aeabi_dmul>
 8002b0c:	a37a      	add	r3, pc, #488	; (adr r3, 8002cf8 <_dtoa_r+0x2f8>)
 8002b0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b12:	f7fd fb43 	bl	800019c <__adddf3>
 8002b16:	4606      	mov	r6, r0
 8002b18:	4628      	mov	r0, r5
 8002b1a:	460f      	mov	r7, r1
 8002b1c:	f7fd fc8a 	bl	8000434 <__aeabi_i2d>
 8002b20:	a377      	add	r3, pc, #476	; (adr r3, 8002d00 <_dtoa_r+0x300>)
 8002b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b26:	f7fd fceb 	bl	8000500 <__aeabi_dmul>
 8002b2a:	4602      	mov	r2, r0
 8002b2c:	460b      	mov	r3, r1
 8002b2e:	4630      	mov	r0, r6
 8002b30:	4639      	mov	r1, r7
 8002b32:	f7fd fb33 	bl	800019c <__adddf3>
 8002b36:	4606      	mov	r6, r0
 8002b38:	460f      	mov	r7, r1
 8002b3a:	f7fd ff91 	bl	8000a60 <__aeabi_d2iz>
 8002b3e:	2200      	movs	r2, #0
 8002b40:	4683      	mov	fp, r0
 8002b42:	2300      	movs	r3, #0
 8002b44:	4630      	mov	r0, r6
 8002b46:	4639      	mov	r1, r7
 8002b48:	f7fd ff4c 	bl	80009e4 <__aeabi_dcmplt>
 8002b4c:	b158      	cbz	r0, 8002b66 <_dtoa_r+0x166>
 8002b4e:	4658      	mov	r0, fp
 8002b50:	f7fd fc70 	bl	8000434 <__aeabi_i2d>
 8002b54:	4602      	mov	r2, r0
 8002b56:	460b      	mov	r3, r1
 8002b58:	4630      	mov	r0, r6
 8002b5a:	4639      	mov	r1, r7
 8002b5c:	f7fd ff38 	bl	80009d0 <__aeabi_dcmpeq>
 8002b60:	b908      	cbnz	r0, 8002b66 <_dtoa_r+0x166>
 8002b62:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002b66:	f1bb 0f16 	cmp.w	fp, #22
 8002b6a:	d858      	bhi.n	8002c1e <_dtoa_r+0x21e>
 8002b6c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b70:	496a      	ldr	r1, [pc, #424]	; (8002d1c <_dtoa_r+0x31c>)
 8002b72:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8002b76:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002b7a:	f7fd ff51 	bl	8000a20 <__aeabi_dcmpgt>
 8002b7e:	2800      	cmp	r0, #0
 8002b80:	d04f      	beq.n	8002c22 <_dtoa_r+0x222>
 8002b82:	2300      	movs	r3, #0
 8002b84:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002b88:	930d      	str	r3, [sp, #52]	; 0x34
 8002b8a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002b8c:	1b5d      	subs	r5, r3, r5
 8002b8e:	1e6b      	subs	r3, r5, #1
 8002b90:	9307      	str	r3, [sp, #28]
 8002b92:	bf43      	ittte	mi
 8002b94:	2300      	movmi	r3, #0
 8002b96:	f1c5 0801 	rsbmi	r8, r5, #1
 8002b9a:	9307      	strmi	r3, [sp, #28]
 8002b9c:	f04f 0800 	movpl.w	r8, #0
 8002ba0:	f1bb 0f00 	cmp.w	fp, #0
 8002ba4:	db3f      	blt.n	8002c26 <_dtoa_r+0x226>
 8002ba6:	9b07      	ldr	r3, [sp, #28]
 8002ba8:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8002bac:	445b      	add	r3, fp
 8002bae:	9307      	str	r3, [sp, #28]
 8002bb0:	2300      	movs	r3, #0
 8002bb2:	9308      	str	r3, [sp, #32]
 8002bb4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002bb6:	2b09      	cmp	r3, #9
 8002bb8:	f200 80b4 	bhi.w	8002d24 <_dtoa_r+0x324>
 8002bbc:	2b05      	cmp	r3, #5
 8002bbe:	bfc4      	itt	gt
 8002bc0:	3b04      	subgt	r3, #4
 8002bc2:	931e      	strgt	r3, [sp, #120]	; 0x78
 8002bc4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8002bc6:	bfc8      	it	gt
 8002bc8:	2600      	movgt	r6, #0
 8002bca:	f1a3 0302 	sub.w	r3, r3, #2
 8002bce:	bfd8      	it	le
 8002bd0:	2601      	movle	r6, #1
 8002bd2:	2b03      	cmp	r3, #3
 8002bd4:	f200 80b2 	bhi.w	8002d3c <_dtoa_r+0x33c>
 8002bd8:	e8df f003 	tbb	[pc, r3]
 8002bdc:	782d8684 	.word	0x782d8684
 8002be0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002be2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8002be4:	441d      	add	r5, r3
 8002be6:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002bea:	2b20      	cmp	r3, #32
 8002bec:	dd11      	ble.n	8002c12 <_dtoa_r+0x212>
 8002bee:	9a02      	ldr	r2, [sp, #8]
 8002bf0:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8002bf4:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8002bf8:	fa22 f000 	lsr.w	r0, r2, r0
 8002bfc:	fa09 f303 	lsl.w	r3, r9, r3
 8002c00:	4318      	orrs	r0, r3
 8002c02:	f7fd fc07 	bl	8000414 <__aeabi_ui2d>
 8002c06:	2301      	movs	r3, #1
 8002c08:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8002c0c:	3d01      	subs	r5, #1
 8002c0e:	9310      	str	r3, [sp, #64]	; 0x40
 8002c10:	e773      	b.n	8002afa <_dtoa_r+0xfa>
 8002c12:	f1c3 0020 	rsb	r0, r3, #32
 8002c16:	9b02      	ldr	r3, [sp, #8]
 8002c18:	fa03 f000 	lsl.w	r0, r3, r0
 8002c1c:	e7f1      	b.n	8002c02 <_dtoa_r+0x202>
 8002c1e:	2301      	movs	r3, #1
 8002c20:	e7b2      	b.n	8002b88 <_dtoa_r+0x188>
 8002c22:	900d      	str	r0, [sp, #52]	; 0x34
 8002c24:	e7b1      	b.n	8002b8a <_dtoa_r+0x18a>
 8002c26:	f1cb 0300 	rsb	r3, fp, #0
 8002c2a:	9308      	str	r3, [sp, #32]
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	eba8 080b 	sub.w	r8, r8, fp
 8002c32:	930c      	str	r3, [sp, #48]	; 0x30
 8002c34:	e7be      	b.n	8002bb4 <_dtoa_r+0x1b4>
 8002c36:	2301      	movs	r3, #1
 8002c38:	9309      	str	r3, [sp, #36]	; 0x24
 8002c3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002c3c:	2b00      	cmp	r3, #0
 8002c3e:	f340 8080 	ble.w	8002d42 <_dtoa_r+0x342>
 8002c42:	4699      	mov	r9, r3
 8002c44:	9304      	str	r3, [sp, #16]
 8002c46:	2200      	movs	r2, #0
 8002c48:	2104      	movs	r1, #4
 8002c4a:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8002c4c:	606a      	str	r2, [r5, #4]
 8002c4e:	f101 0214 	add.w	r2, r1, #20
 8002c52:	429a      	cmp	r2, r3
 8002c54:	d97a      	bls.n	8002d4c <_dtoa_r+0x34c>
 8002c56:	6869      	ldr	r1, [r5, #4]
 8002c58:	4620      	mov	r0, r4
 8002c5a:	f000 ffff 	bl	8003c5c <_Balloc>
 8002c5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002c60:	6028      	str	r0, [r5, #0]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	f1b9 0f0e 	cmp.w	r9, #14
 8002c68:	9306      	str	r3, [sp, #24]
 8002c6a:	f200 80f0 	bhi.w	8002e4e <_dtoa_r+0x44e>
 8002c6e:	2e00      	cmp	r6, #0
 8002c70:	f000 80ed 	beq.w	8002e4e <_dtoa_r+0x44e>
 8002c74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c78:	f1bb 0f00 	cmp.w	fp, #0
 8002c7c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8002c80:	dd79      	ble.n	8002d76 <_dtoa_r+0x376>
 8002c82:	4a26      	ldr	r2, [pc, #152]	; (8002d1c <_dtoa_r+0x31c>)
 8002c84:	f00b 030f 	and.w	r3, fp, #15
 8002c88:	ea4f 162b 	mov.w	r6, fp, asr #4
 8002c8c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002c90:	06f0      	lsls	r0, r6, #27
 8002c92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c96:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002c9a:	d55c      	bpl.n	8002d56 <_dtoa_r+0x356>
 8002c9c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002ca0:	4b1f      	ldr	r3, [pc, #124]	; (8002d20 <_dtoa_r+0x320>)
 8002ca2:	2503      	movs	r5, #3
 8002ca4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002ca8:	f7fd fd54 	bl	8000754 <__aeabi_ddiv>
 8002cac:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002cb0:	f006 060f 	and.w	r6, r6, #15
 8002cb4:	4f1a      	ldr	r7, [pc, #104]	; (8002d20 <_dtoa_r+0x320>)
 8002cb6:	2e00      	cmp	r6, #0
 8002cb8:	d14f      	bne.n	8002d5a <_dtoa_r+0x35a>
 8002cba:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002cbe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002cc2:	f7fd fd47 	bl	8000754 <__aeabi_ddiv>
 8002cc6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002cca:	e06e      	b.n	8002daa <_dtoa_r+0x3aa>
 8002ccc:	2301      	movs	r3, #1
 8002cce:	9309      	str	r3, [sp, #36]	; 0x24
 8002cd0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002cd2:	445b      	add	r3, fp
 8002cd4:	f103 0901 	add.w	r9, r3, #1
 8002cd8:	9304      	str	r3, [sp, #16]
 8002cda:	464b      	mov	r3, r9
 8002cdc:	2b01      	cmp	r3, #1
 8002cde:	bfb8      	it	lt
 8002ce0:	2301      	movlt	r3, #1
 8002ce2:	e7b0      	b.n	8002c46 <_dtoa_r+0x246>
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	e7a7      	b.n	8002c38 <_dtoa_r+0x238>
 8002ce8:	2300      	movs	r3, #0
 8002cea:	e7f0      	b.n	8002cce <_dtoa_r+0x2ce>
 8002cec:	f3af 8000 	nop.w
 8002cf0:	636f4361 	.word	0x636f4361
 8002cf4:	3fd287a7 	.word	0x3fd287a7
 8002cf8:	8b60c8b3 	.word	0x8b60c8b3
 8002cfc:	3fc68a28 	.word	0x3fc68a28
 8002d00:	509f79fb 	.word	0x509f79fb
 8002d04:	3fd34413 	.word	0x3fd34413
 8002d08:	7ff00000 	.word	0x7ff00000
 8002d0c:	08004891 	.word	0x08004891
 8002d10:	08004888 	.word	0x08004888
 8002d14:	08004867 	.word	0x08004867
 8002d18:	3ff80000 	.word	0x3ff80000
 8002d1c:	080048c0 	.word	0x080048c0
 8002d20:	08004898 	.word	0x08004898
 8002d24:	2601      	movs	r6, #1
 8002d26:	2300      	movs	r3, #0
 8002d28:	9609      	str	r6, [sp, #36]	; 0x24
 8002d2a:	931e      	str	r3, [sp, #120]	; 0x78
 8002d2c:	f04f 33ff 	mov.w	r3, #4294967295
 8002d30:	2200      	movs	r2, #0
 8002d32:	9304      	str	r3, [sp, #16]
 8002d34:	4699      	mov	r9, r3
 8002d36:	2312      	movs	r3, #18
 8002d38:	921f      	str	r2, [sp, #124]	; 0x7c
 8002d3a:	e784      	b.n	8002c46 <_dtoa_r+0x246>
 8002d3c:	2301      	movs	r3, #1
 8002d3e:	9309      	str	r3, [sp, #36]	; 0x24
 8002d40:	e7f4      	b.n	8002d2c <_dtoa_r+0x32c>
 8002d42:	2301      	movs	r3, #1
 8002d44:	9304      	str	r3, [sp, #16]
 8002d46:	4699      	mov	r9, r3
 8002d48:	461a      	mov	r2, r3
 8002d4a:	e7f5      	b.n	8002d38 <_dtoa_r+0x338>
 8002d4c:	686a      	ldr	r2, [r5, #4]
 8002d4e:	0049      	lsls	r1, r1, #1
 8002d50:	3201      	adds	r2, #1
 8002d52:	606a      	str	r2, [r5, #4]
 8002d54:	e77b      	b.n	8002c4e <_dtoa_r+0x24e>
 8002d56:	2502      	movs	r5, #2
 8002d58:	e7ac      	b.n	8002cb4 <_dtoa_r+0x2b4>
 8002d5a:	07f1      	lsls	r1, r6, #31
 8002d5c:	d508      	bpl.n	8002d70 <_dtoa_r+0x370>
 8002d5e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002d62:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002d66:	f7fd fbcb 	bl	8000500 <__aeabi_dmul>
 8002d6a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002d6e:	3501      	adds	r5, #1
 8002d70:	1076      	asrs	r6, r6, #1
 8002d72:	3708      	adds	r7, #8
 8002d74:	e79f      	b.n	8002cb6 <_dtoa_r+0x2b6>
 8002d76:	f000 80a5 	beq.w	8002ec4 <_dtoa_r+0x4c4>
 8002d7a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8002d7e:	f1cb 0600 	rsb	r6, fp, #0
 8002d82:	4ba2      	ldr	r3, [pc, #648]	; (800300c <_dtoa_r+0x60c>)
 8002d84:	f006 020f 	and.w	r2, r6, #15
 8002d88:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002d8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d90:	f7fd fbb6 	bl	8000500 <__aeabi_dmul>
 8002d94:	2502      	movs	r5, #2
 8002d96:	2300      	movs	r3, #0
 8002d98:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002d9c:	4f9c      	ldr	r7, [pc, #624]	; (8003010 <_dtoa_r+0x610>)
 8002d9e:	1136      	asrs	r6, r6, #4
 8002da0:	2e00      	cmp	r6, #0
 8002da2:	f040 8084 	bne.w	8002eae <_dtoa_r+0x4ae>
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d18d      	bne.n	8002cc6 <_dtoa_r+0x2c6>
 8002daa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	f000 808b 	beq.w	8002ec8 <_dtoa_r+0x4c8>
 8002db2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002db6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8002dba:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	4b94      	ldr	r3, [pc, #592]	; (8003014 <_dtoa_r+0x614>)
 8002dc2:	f7fd fe0f 	bl	80009e4 <__aeabi_dcmplt>
 8002dc6:	2800      	cmp	r0, #0
 8002dc8:	d07e      	beq.n	8002ec8 <_dtoa_r+0x4c8>
 8002dca:	f1b9 0f00 	cmp.w	r9, #0
 8002dce:	d07b      	beq.n	8002ec8 <_dtoa_r+0x4c8>
 8002dd0:	9b04      	ldr	r3, [sp, #16]
 8002dd2:	2b00      	cmp	r3, #0
 8002dd4:	dd37      	ble.n	8002e46 <_dtoa_r+0x446>
 8002dd6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002dda:	2200      	movs	r2, #0
 8002ddc:	4b8e      	ldr	r3, [pc, #568]	; (8003018 <_dtoa_r+0x618>)
 8002dde:	f7fd fb8f 	bl	8000500 <__aeabi_dmul>
 8002de2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002de6:	9e04      	ldr	r6, [sp, #16]
 8002de8:	f10b 37ff 	add.w	r7, fp, #4294967295
 8002dec:	3501      	adds	r5, #1
 8002dee:	4628      	mov	r0, r5
 8002df0:	f7fd fb20 	bl	8000434 <__aeabi_i2d>
 8002df4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002df8:	f7fd fb82 	bl	8000500 <__aeabi_dmul>
 8002dfc:	4b87      	ldr	r3, [pc, #540]	; (800301c <_dtoa_r+0x61c>)
 8002dfe:	2200      	movs	r2, #0
 8002e00:	f7fd f9cc 	bl	800019c <__adddf3>
 8002e04:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002e08:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002e0a:	f1a3 7550 	sub.w	r5, r3, #54525952	; 0x3400000
 8002e0e:	950b      	str	r5, [sp, #44]	; 0x2c
 8002e10:	2e00      	cmp	r6, #0
 8002e12:	d15c      	bne.n	8002ece <_dtoa_r+0x4ce>
 8002e14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e18:	2200      	movs	r2, #0
 8002e1a:	4b81      	ldr	r3, [pc, #516]	; (8003020 <_dtoa_r+0x620>)
 8002e1c:	f7fd f9bc 	bl	8000198 <__aeabi_dsub>
 8002e20:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002e22:	462b      	mov	r3, r5
 8002e24:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002e28:	f7fd fdfa 	bl	8000a20 <__aeabi_dcmpgt>
 8002e2c:	2800      	cmp	r0, #0
 8002e2e:	f040 82f7 	bne.w	8003420 <_dtoa_r+0xa20>
 8002e32:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002e36:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8002e38:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8002e3c:	f7fd fdd2 	bl	80009e4 <__aeabi_dcmplt>
 8002e40:	2800      	cmp	r0, #0
 8002e42:	f040 82eb 	bne.w	800341c <_dtoa_r+0xa1c>
 8002e46:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8002e4a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002e4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002e50:	2b00      	cmp	r3, #0
 8002e52:	f2c0 8150 	blt.w	80030f6 <_dtoa_r+0x6f6>
 8002e56:	f1bb 0f0e 	cmp.w	fp, #14
 8002e5a:	f300 814c 	bgt.w	80030f6 <_dtoa_r+0x6f6>
 8002e5e:	4b6b      	ldr	r3, [pc, #428]	; (800300c <_dtoa_r+0x60c>)
 8002e60:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8002e64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e68:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002e6c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8002e6e:	2b00      	cmp	r3, #0
 8002e70:	f280 80da 	bge.w	8003028 <_dtoa_r+0x628>
 8002e74:	f1b9 0f00 	cmp.w	r9, #0
 8002e78:	f300 80d6 	bgt.w	8003028 <_dtoa_r+0x628>
 8002e7c:	f040 82cd 	bne.w	800341a <_dtoa_r+0xa1a>
 8002e80:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002e84:	2200      	movs	r2, #0
 8002e86:	4b66      	ldr	r3, [pc, #408]	; (8003020 <_dtoa_r+0x620>)
 8002e88:	f7fd fb3a 	bl	8000500 <__aeabi_dmul>
 8002e8c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002e90:	f7fd fdbc 	bl	8000a0c <__aeabi_dcmpge>
 8002e94:	464e      	mov	r6, r9
 8002e96:	464f      	mov	r7, r9
 8002e98:	2800      	cmp	r0, #0
 8002e9a:	f040 82a4 	bne.w	80033e6 <_dtoa_r+0x9e6>
 8002e9e:	9b06      	ldr	r3, [sp, #24]
 8002ea0:	9a06      	ldr	r2, [sp, #24]
 8002ea2:	1c5d      	adds	r5, r3, #1
 8002ea4:	2331      	movs	r3, #49	; 0x31
 8002ea6:	f10b 0b01 	add.w	fp, fp, #1
 8002eaa:	7013      	strb	r3, [r2, #0]
 8002eac:	e29f      	b.n	80033ee <_dtoa_r+0x9ee>
 8002eae:	07f2      	lsls	r2, r6, #31
 8002eb0:	d505      	bpl.n	8002ebe <_dtoa_r+0x4be>
 8002eb2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002eb6:	f7fd fb23 	bl	8000500 <__aeabi_dmul>
 8002eba:	2301      	movs	r3, #1
 8002ebc:	3501      	adds	r5, #1
 8002ebe:	1076      	asrs	r6, r6, #1
 8002ec0:	3708      	adds	r7, #8
 8002ec2:	e76d      	b.n	8002da0 <_dtoa_r+0x3a0>
 8002ec4:	2502      	movs	r5, #2
 8002ec6:	e770      	b.n	8002daa <_dtoa_r+0x3aa>
 8002ec8:	465f      	mov	r7, fp
 8002eca:	464e      	mov	r6, r9
 8002ecc:	e78f      	b.n	8002dee <_dtoa_r+0x3ee>
 8002ece:	9a06      	ldr	r2, [sp, #24]
 8002ed0:	4b4e      	ldr	r3, [pc, #312]	; (800300c <_dtoa_r+0x60c>)
 8002ed2:	4432      	add	r2, r6
 8002ed4:	9211      	str	r2, [sp, #68]	; 0x44
 8002ed6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002ed8:	1e71      	subs	r1, r6, #1
 8002eda:	2a00      	cmp	r2, #0
 8002edc:	d048      	beq.n	8002f70 <_dtoa_r+0x570>
 8002ede:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 8002ee2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ee6:	2000      	movs	r0, #0
 8002ee8:	494e      	ldr	r1, [pc, #312]	; (8003024 <_dtoa_r+0x624>)
 8002eea:	f7fd fc33 	bl	8000754 <__aeabi_ddiv>
 8002eee:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002ef2:	f7fd f951 	bl	8000198 <__aeabi_dsub>
 8002ef6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002efa:	9d06      	ldr	r5, [sp, #24]
 8002efc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f00:	f7fd fdae 	bl	8000a60 <__aeabi_d2iz>
 8002f04:	4606      	mov	r6, r0
 8002f06:	f7fd fa95 	bl	8000434 <__aeabi_i2d>
 8002f0a:	4602      	mov	r2, r0
 8002f0c:	460b      	mov	r3, r1
 8002f0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f12:	f7fd f941 	bl	8000198 <__aeabi_dsub>
 8002f16:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002f1a:	3630      	adds	r6, #48	; 0x30
 8002f1c:	f805 6b01 	strb.w	r6, [r5], #1
 8002f20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002f24:	f7fd fd5e 	bl	80009e4 <__aeabi_dcmplt>
 8002f28:	2800      	cmp	r0, #0
 8002f2a:	d164      	bne.n	8002ff6 <_dtoa_r+0x5f6>
 8002f2c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002f30:	2000      	movs	r0, #0
 8002f32:	4938      	ldr	r1, [pc, #224]	; (8003014 <_dtoa_r+0x614>)
 8002f34:	f7fd f930 	bl	8000198 <__aeabi_dsub>
 8002f38:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002f3c:	f7fd fd52 	bl	80009e4 <__aeabi_dcmplt>
 8002f40:	2800      	cmp	r0, #0
 8002f42:	f040 80b9 	bne.w	80030b8 <_dtoa_r+0x6b8>
 8002f46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002f48:	429d      	cmp	r5, r3
 8002f4a:	f43f af7c 	beq.w	8002e46 <_dtoa_r+0x446>
 8002f4e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002f52:	2200      	movs	r2, #0
 8002f54:	4b30      	ldr	r3, [pc, #192]	; (8003018 <_dtoa_r+0x618>)
 8002f56:	f7fd fad3 	bl	8000500 <__aeabi_dmul>
 8002f5a:	2200      	movs	r2, #0
 8002f5c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002f60:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f64:	4b2c      	ldr	r3, [pc, #176]	; (8003018 <_dtoa_r+0x618>)
 8002f66:	f7fd facb 	bl	8000500 <__aeabi_dmul>
 8002f6a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002f6e:	e7c5      	b.n	8002efc <_dtoa_r+0x4fc>
 8002f70:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 8002f74:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002f78:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002f7c:	f7fd fac0 	bl	8000500 <__aeabi_dmul>
 8002f80:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8002f84:	9d06      	ldr	r5, [sp, #24]
 8002f86:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f8a:	f7fd fd69 	bl	8000a60 <__aeabi_d2iz>
 8002f8e:	4606      	mov	r6, r0
 8002f90:	f7fd fa50 	bl	8000434 <__aeabi_i2d>
 8002f94:	4602      	mov	r2, r0
 8002f96:	460b      	mov	r3, r1
 8002f98:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002f9c:	f7fd f8fc 	bl	8000198 <__aeabi_dsub>
 8002fa0:	3630      	adds	r6, #48	; 0x30
 8002fa2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002fa4:	f805 6b01 	strb.w	r6, [r5], #1
 8002fa8:	42ab      	cmp	r3, r5
 8002faa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002fae:	f04f 0200 	mov.w	r2, #0
 8002fb2:	d124      	bne.n	8002ffe <_dtoa_r+0x5fe>
 8002fb4:	4b1b      	ldr	r3, [pc, #108]	; (8003024 <_dtoa_r+0x624>)
 8002fb6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8002fba:	f7fd f8ef 	bl	800019c <__adddf3>
 8002fbe:	4602      	mov	r2, r0
 8002fc0:	460b      	mov	r3, r1
 8002fc2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002fc6:	f7fd fd2b 	bl	8000a20 <__aeabi_dcmpgt>
 8002fca:	2800      	cmp	r0, #0
 8002fcc:	d174      	bne.n	80030b8 <_dtoa_r+0x6b8>
 8002fce:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8002fd2:	2000      	movs	r0, #0
 8002fd4:	4913      	ldr	r1, [pc, #76]	; (8003024 <_dtoa_r+0x624>)
 8002fd6:	f7fd f8df 	bl	8000198 <__aeabi_dsub>
 8002fda:	4602      	mov	r2, r0
 8002fdc:	460b      	mov	r3, r1
 8002fde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002fe2:	f7fd fcff 	bl	80009e4 <__aeabi_dcmplt>
 8002fe6:	2800      	cmp	r0, #0
 8002fe8:	f43f af2d 	beq.w	8002e46 <_dtoa_r+0x446>
 8002fec:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ff0:	1e6a      	subs	r2, r5, #1
 8002ff2:	2b30      	cmp	r3, #48	; 0x30
 8002ff4:	d001      	beq.n	8002ffa <_dtoa_r+0x5fa>
 8002ff6:	46bb      	mov	fp, r7
 8002ff8:	e04d      	b.n	8003096 <_dtoa_r+0x696>
 8002ffa:	4615      	mov	r5, r2
 8002ffc:	e7f6      	b.n	8002fec <_dtoa_r+0x5ec>
 8002ffe:	4b06      	ldr	r3, [pc, #24]	; (8003018 <_dtoa_r+0x618>)
 8003000:	f7fd fa7e 	bl	8000500 <__aeabi_dmul>
 8003004:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8003008:	e7bd      	b.n	8002f86 <_dtoa_r+0x586>
 800300a:	bf00      	nop
 800300c:	080048c0 	.word	0x080048c0
 8003010:	08004898 	.word	0x08004898
 8003014:	3ff00000 	.word	0x3ff00000
 8003018:	40240000 	.word	0x40240000
 800301c:	401c0000 	.word	0x401c0000
 8003020:	40140000 	.word	0x40140000
 8003024:	3fe00000 	.word	0x3fe00000
 8003028:	9d06      	ldr	r5, [sp, #24]
 800302a:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800302e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003032:	4630      	mov	r0, r6
 8003034:	4639      	mov	r1, r7
 8003036:	f7fd fb8d 	bl	8000754 <__aeabi_ddiv>
 800303a:	f7fd fd11 	bl	8000a60 <__aeabi_d2iz>
 800303e:	4680      	mov	r8, r0
 8003040:	f7fd f9f8 	bl	8000434 <__aeabi_i2d>
 8003044:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003048:	f7fd fa5a 	bl	8000500 <__aeabi_dmul>
 800304c:	4602      	mov	r2, r0
 800304e:	460b      	mov	r3, r1
 8003050:	4630      	mov	r0, r6
 8003052:	4639      	mov	r1, r7
 8003054:	f7fd f8a0 	bl	8000198 <__aeabi_dsub>
 8003058:	f108 0630 	add.w	r6, r8, #48	; 0x30
 800305c:	f805 6b01 	strb.w	r6, [r5], #1
 8003060:	9e06      	ldr	r6, [sp, #24]
 8003062:	4602      	mov	r2, r0
 8003064:	1bae      	subs	r6, r5, r6
 8003066:	45b1      	cmp	r9, r6
 8003068:	460b      	mov	r3, r1
 800306a:	d137      	bne.n	80030dc <_dtoa_r+0x6dc>
 800306c:	f7fd f896 	bl	800019c <__adddf3>
 8003070:	4606      	mov	r6, r0
 8003072:	460f      	mov	r7, r1
 8003074:	4602      	mov	r2, r0
 8003076:	460b      	mov	r3, r1
 8003078:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800307c:	f7fd fcb2 	bl	80009e4 <__aeabi_dcmplt>
 8003080:	b9c8      	cbnz	r0, 80030b6 <_dtoa_r+0x6b6>
 8003082:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003086:	4632      	mov	r2, r6
 8003088:	463b      	mov	r3, r7
 800308a:	f7fd fca1 	bl	80009d0 <__aeabi_dcmpeq>
 800308e:	b110      	cbz	r0, 8003096 <_dtoa_r+0x696>
 8003090:	f018 0f01 	tst.w	r8, #1
 8003094:	d10f      	bne.n	80030b6 <_dtoa_r+0x6b6>
 8003096:	4651      	mov	r1, sl
 8003098:	4620      	mov	r0, r4
 800309a:	f000 fe13 	bl	8003cc4 <_Bfree>
 800309e:	2300      	movs	r3, #0
 80030a0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80030a2:	702b      	strb	r3, [r5, #0]
 80030a4:	f10b 0301 	add.w	r3, fp, #1
 80030a8:	6013      	str	r3, [r2, #0]
 80030aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	f43f acec 	beq.w	8002a8a <_dtoa_r+0x8a>
 80030b2:	601d      	str	r5, [r3, #0]
 80030b4:	e4e9      	b.n	8002a8a <_dtoa_r+0x8a>
 80030b6:	465f      	mov	r7, fp
 80030b8:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80030bc:	1e6b      	subs	r3, r5, #1
 80030be:	2a39      	cmp	r2, #57	; 0x39
 80030c0:	d106      	bne.n	80030d0 <_dtoa_r+0x6d0>
 80030c2:	9a06      	ldr	r2, [sp, #24]
 80030c4:	429a      	cmp	r2, r3
 80030c6:	d107      	bne.n	80030d8 <_dtoa_r+0x6d8>
 80030c8:	2330      	movs	r3, #48	; 0x30
 80030ca:	7013      	strb	r3, [r2, #0]
 80030cc:	4613      	mov	r3, r2
 80030ce:	3701      	adds	r7, #1
 80030d0:	781a      	ldrb	r2, [r3, #0]
 80030d2:	3201      	adds	r2, #1
 80030d4:	701a      	strb	r2, [r3, #0]
 80030d6:	e78e      	b.n	8002ff6 <_dtoa_r+0x5f6>
 80030d8:	461d      	mov	r5, r3
 80030da:	e7ed      	b.n	80030b8 <_dtoa_r+0x6b8>
 80030dc:	2200      	movs	r2, #0
 80030de:	4bb5      	ldr	r3, [pc, #724]	; (80033b4 <_dtoa_r+0x9b4>)
 80030e0:	f7fd fa0e 	bl	8000500 <__aeabi_dmul>
 80030e4:	2200      	movs	r2, #0
 80030e6:	2300      	movs	r3, #0
 80030e8:	4606      	mov	r6, r0
 80030ea:	460f      	mov	r7, r1
 80030ec:	f7fd fc70 	bl	80009d0 <__aeabi_dcmpeq>
 80030f0:	2800      	cmp	r0, #0
 80030f2:	d09c      	beq.n	800302e <_dtoa_r+0x62e>
 80030f4:	e7cf      	b.n	8003096 <_dtoa_r+0x696>
 80030f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80030f8:	2a00      	cmp	r2, #0
 80030fa:	f000 8129 	beq.w	8003350 <_dtoa_r+0x950>
 80030fe:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8003100:	2a01      	cmp	r2, #1
 8003102:	f300 810e 	bgt.w	8003322 <_dtoa_r+0x922>
 8003106:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003108:	2a00      	cmp	r2, #0
 800310a:	f000 8106 	beq.w	800331a <_dtoa_r+0x91a>
 800310e:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003112:	4645      	mov	r5, r8
 8003114:	9e08      	ldr	r6, [sp, #32]
 8003116:	9a07      	ldr	r2, [sp, #28]
 8003118:	2101      	movs	r1, #1
 800311a:	441a      	add	r2, r3
 800311c:	4620      	mov	r0, r4
 800311e:	4498      	add	r8, r3
 8003120:	9207      	str	r2, [sp, #28]
 8003122:	f000 fe6f 	bl	8003e04 <__i2b>
 8003126:	4607      	mov	r7, r0
 8003128:	2d00      	cmp	r5, #0
 800312a:	dd0b      	ble.n	8003144 <_dtoa_r+0x744>
 800312c:	9b07      	ldr	r3, [sp, #28]
 800312e:	2b00      	cmp	r3, #0
 8003130:	dd08      	ble.n	8003144 <_dtoa_r+0x744>
 8003132:	42ab      	cmp	r3, r5
 8003134:	bfa8      	it	ge
 8003136:	462b      	movge	r3, r5
 8003138:	9a07      	ldr	r2, [sp, #28]
 800313a:	eba8 0803 	sub.w	r8, r8, r3
 800313e:	1aed      	subs	r5, r5, r3
 8003140:	1ad3      	subs	r3, r2, r3
 8003142:	9307      	str	r3, [sp, #28]
 8003144:	9b08      	ldr	r3, [sp, #32]
 8003146:	b1fb      	cbz	r3, 8003188 <_dtoa_r+0x788>
 8003148:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800314a:	2b00      	cmp	r3, #0
 800314c:	f000 8104 	beq.w	8003358 <_dtoa_r+0x958>
 8003150:	2e00      	cmp	r6, #0
 8003152:	dd11      	ble.n	8003178 <_dtoa_r+0x778>
 8003154:	4639      	mov	r1, r7
 8003156:	4632      	mov	r2, r6
 8003158:	4620      	mov	r0, r4
 800315a:	f000 fee9 	bl	8003f30 <__pow5mult>
 800315e:	4652      	mov	r2, sl
 8003160:	4601      	mov	r1, r0
 8003162:	4607      	mov	r7, r0
 8003164:	4620      	mov	r0, r4
 8003166:	f000 fe56 	bl	8003e16 <__multiply>
 800316a:	4651      	mov	r1, sl
 800316c:	900a      	str	r0, [sp, #40]	; 0x28
 800316e:	4620      	mov	r0, r4
 8003170:	f000 fda8 	bl	8003cc4 <_Bfree>
 8003174:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003176:	469a      	mov	sl, r3
 8003178:	9b08      	ldr	r3, [sp, #32]
 800317a:	1b9a      	subs	r2, r3, r6
 800317c:	d004      	beq.n	8003188 <_dtoa_r+0x788>
 800317e:	4651      	mov	r1, sl
 8003180:	4620      	mov	r0, r4
 8003182:	f000 fed5 	bl	8003f30 <__pow5mult>
 8003186:	4682      	mov	sl, r0
 8003188:	2101      	movs	r1, #1
 800318a:	4620      	mov	r0, r4
 800318c:	f000 fe3a 	bl	8003e04 <__i2b>
 8003190:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003192:	4606      	mov	r6, r0
 8003194:	2b00      	cmp	r3, #0
 8003196:	f340 80e1 	ble.w	800335c <_dtoa_r+0x95c>
 800319a:	461a      	mov	r2, r3
 800319c:	4601      	mov	r1, r0
 800319e:	4620      	mov	r0, r4
 80031a0:	f000 fec6 	bl	8003f30 <__pow5mult>
 80031a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80031a6:	4606      	mov	r6, r0
 80031a8:	2b01      	cmp	r3, #1
 80031aa:	f340 80da 	ble.w	8003362 <_dtoa_r+0x962>
 80031ae:	2300      	movs	r3, #0
 80031b0:	9308      	str	r3, [sp, #32]
 80031b2:	6933      	ldr	r3, [r6, #16]
 80031b4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80031b8:	6918      	ldr	r0, [r3, #16]
 80031ba:	f000 fdd5 	bl	8003d68 <__hi0bits>
 80031be:	f1c0 0020 	rsb	r0, r0, #32
 80031c2:	9b07      	ldr	r3, [sp, #28]
 80031c4:	4418      	add	r0, r3
 80031c6:	f010 001f 	ands.w	r0, r0, #31
 80031ca:	f000 80f0 	beq.w	80033ae <_dtoa_r+0x9ae>
 80031ce:	f1c0 0320 	rsb	r3, r0, #32
 80031d2:	2b04      	cmp	r3, #4
 80031d4:	f340 80e2 	ble.w	800339c <_dtoa_r+0x99c>
 80031d8:	9b07      	ldr	r3, [sp, #28]
 80031da:	f1c0 001c 	rsb	r0, r0, #28
 80031de:	4480      	add	r8, r0
 80031e0:	4405      	add	r5, r0
 80031e2:	4403      	add	r3, r0
 80031e4:	9307      	str	r3, [sp, #28]
 80031e6:	f1b8 0f00 	cmp.w	r8, #0
 80031ea:	dd05      	ble.n	80031f8 <_dtoa_r+0x7f8>
 80031ec:	4651      	mov	r1, sl
 80031ee:	4642      	mov	r2, r8
 80031f0:	4620      	mov	r0, r4
 80031f2:	f000 feeb 	bl	8003fcc <__lshift>
 80031f6:	4682      	mov	sl, r0
 80031f8:	9b07      	ldr	r3, [sp, #28]
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	dd05      	ble.n	800320a <_dtoa_r+0x80a>
 80031fe:	4631      	mov	r1, r6
 8003200:	461a      	mov	r2, r3
 8003202:	4620      	mov	r0, r4
 8003204:	f000 fee2 	bl	8003fcc <__lshift>
 8003208:	4606      	mov	r6, r0
 800320a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800320c:	2b00      	cmp	r3, #0
 800320e:	f000 80d3 	beq.w	80033b8 <_dtoa_r+0x9b8>
 8003212:	4631      	mov	r1, r6
 8003214:	4650      	mov	r0, sl
 8003216:	f000 ff2a 	bl	800406e <__mcmp>
 800321a:	2800      	cmp	r0, #0
 800321c:	f280 80cc 	bge.w	80033b8 <_dtoa_r+0x9b8>
 8003220:	2300      	movs	r3, #0
 8003222:	4651      	mov	r1, sl
 8003224:	220a      	movs	r2, #10
 8003226:	4620      	mov	r0, r4
 8003228:	f000 fd63 	bl	8003cf2 <__multadd>
 800322c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800322e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8003232:	4682      	mov	sl, r0
 8003234:	2b00      	cmp	r3, #0
 8003236:	f000 81a9 	beq.w	800358c <_dtoa_r+0xb8c>
 800323a:	2300      	movs	r3, #0
 800323c:	4639      	mov	r1, r7
 800323e:	220a      	movs	r2, #10
 8003240:	4620      	mov	r0, r4
 8003242:	f000 fd56 	bl	8003cf2 <__multadd>
 8003246:	9b04      	ldr	r3, [sp, #16]
 8003248:	4607      	mov	r7, r0
 800324a:	2b00      	cmp	r3, #0
 800324c:	dc03      	bgt.n	8003256 <_dtoa_r+0x856>
 800324e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003250:	2b02      	cmp	r3, #2
 8003252:	f300 80b9 	bgt.w	80033c8 <_dtoa_r+0x9c8>
 8003256:	2d00      	cmp	r5, #0
 8003258:	dd05      	ble.n	8003266 <_dtoa_r+0x866>
 800325a:	4639      	mov	r1, r7
 800325c:	462a      	mov	r2, r5
 800325e:	4620      	mov	r0, r4
 8003260:	f000 feb4 	bl	8003fcc <__lshift>
 8003264:	4607      	mov	r7, r0
 8003266:	9b08      	ldr	r3, [sp, #32]
 8003268:	2b00      	cmp	r3, #0
 800326a:	f000 8110 	beq.w	800348e <_dtoa_r+0xa8e>
 800326e:	6879      	ldr	r1, [r7, #4]
 8003270:	4620      	mov	r0, r4
 8003272:	f000 fcf3 	bl	8003c5c <_Balloc>
 8003276:	4605      	mov	r5, r0
 8003278:	693a      	ldr	r2, [r7, #16]
 800327a:	f107 010c 	add.w	r1, r7, #12
 800327e:	3202      	adds	r2, #2
 8003280:	0092      	lsls	r2, r2, #2
 8003282:	300c      	adds	r0, #12
 8003284:	f000 fcd2 	bl	8003c2c <memcpy>
 8003288:	2201      	movs	r2, #1
 800328a:	4629      	mov	r1, r5
 800328c:	4620      	mov	r0, r4
 800328e:	f000 fe9d 	bl	8003fcc <__lshift>
 8003292:	9707      	str	r7, [sp, #28]
 8003294:	4607      	mov	r7, r0
 8003296:	9b02      	ldr	r3, [sp, #8]
 8003298:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800329c:	f003 0301 	and.w	r3, r3, #1
 80032a0:	9308      	str	r3, [sp, #32]
 80032a2:	4631      	mov	r1, r6
 80032a4:	4650      	mov	r0, sl
 80032a6:	f7ff fb1f 	bl	80028e8 <quorem>
 80032aa:	9907      	ldr	r1, [sp, #28]
 80032ac:	4605      	mov	r5, r0
 80032ae:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80032b2:	4650      	mov	r0, sl
 80032b4:	f000 fedb 	bl	800406e <__mcmp>
 80032b8:	463a      	mov	r2, r7
 80032ba:	9002      	str	r0, [sp, #8]
 80032bc:	4631      	mov	r1, r6
 80032be:	4620      	mov	r0, r4
 80032c0:	f000 feef 	bl	80040a2 <__mdiff>
 80032c4:	68c3      	ldr	r3, [r0, #12]
 80032c6:	4602      	mov	r2, r0
 80032c8:	2b00      	cmp	r3, #0
 80032ca:	f040 80e2 	bne.w	8003492 <_dtoa_r+0xa92>
 80032ce:	4601      	mov	r1, r0
 80032d0:	9009      	str	r0, [sp, #36]	; 0x24
 80032d2:	4650      	mov	r0, sl
 80032d4:	f000 fecb 	bl	800406e <__mcmp>
 80032d8:	4603      	mov	r3, r0
 80032da:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80032dc:	4611      	mov	r1, r2
 80032de:	4620      	mov	r0, r4
 80032e0:	9309      	str	r3, [sp, #36]	; 0x24
 80032e2:	f000 fcef 	bl	8003cc4 <_Bfree>
 80032e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	f040 80d4 	bne.w	8003496 <_dtoa_r+0xa96>
 80032ee:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80032f0:	2a00      	cmp	r2, #0
 80032f2:	f040 80d0 	bne.w	8003496 <_dtoa_r+0xa96>
 80032f6:	9a08      	ldr	r2, [sp, #32]
 80032f8:	2a00      	cmp	r2, #0
 80032fa:	f040 80cc 	bne.w	8003496 <_dtoa_r+0xa96>
 80032fe:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003302:	f000 80e8 	beq.w	80034d6 <_dtoa_r+0xad6>
 8003306:	9b02      	ldr	r3, [sp, #8]
 8003308:	2b00      	cmp	r3, #0
 800330a:	dd01      	ble.n	8003310 <_dtoa_r+0x910>
 800330c:	f105 0931 	add.w	r9, r5, #49	; 0x31
 8003310:	f108 0501 	add.w	r5, r8, #1
 8003314:	f888 9000 	strb.w	r9, [r8]
 8003318:	e06b      	b.n	80033f2 <_dtoa_r+0x9f2>
 800331a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800331c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003320:	e6f7      	b.n	8003112 <_dtoa_r+0x712>
 8003322:	9b08      	ldr	r3, [sp, #32]
 8003324:	f109 36ff 	add.w	r6, r9, #4294967295
 8003328:	42b3      	cmp	r3, r6
 800332a:	bfb7      	itett	lt
 800332c:	9b08      	ldrlt	r3, [sp, #32]
 800332e:	1b9e      	subge	r6, r3, r6
 8003330:	1af2      	sublt	r2, r6, r3
 8003332:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8003334:	bfbf      	itttt	lt
 8003336:	9608      	strlt	r6, [sp, #32]
 8003338:	189b      	addlt	r3, r3, r2
 800333a:	930c      	strlt	r3, [sp, #48]	; 0x30
 800333c:	2600      	movlt	r6, #0
 800333e:	f1b9 0f00 	cmp.w	r9, #0
 8003342:	bfb9      	ittee	lt
 8003344:	eba8 0509 	sublt.w	r5, r8, r9
 8003348:	2300      	movlt	r3, #0
 800334a:	4645      	movge	r5, r8
 800334c:	464b      	movge	r3, r9
 800334e:	e6e2      	b.n	8003116 <_dtoa_r+0x716>
 8003350:	9e08      	ldr	r6, [sp, #32]
 8003352:	4645      	mov	r5, r8
 8003354:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8003356:	e6e7      	b.n	8003128 <_dtoa_r+0x728>
 8003358:	9a08      	ldr	r2, [sp, #32]
 800335a:	e710      	b.n	800317e <_dtoa_r+0x77e>
 800335c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800335e:	2b01      	cmp	r3, #1
 8003360:	dc18      	bgt.n	8003394 <_dtoa_r+0x994>
 8003362:	9b02      	ldr	r3, [sp, #8]
 8003364:	b9b3      	cbnz	r3, 8003394 <_dtoa_r+0x994>
 8003366:	9b03      	ldr	r3, [sp, #12]
 8003368:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800336c:	b9a3      	cbnz	r3, 8003398 <_dtoa_r+0x998>
 800336e:	9b03      	ldr	r3, [sp, #12]
 8003370:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003374:	0d1b      	lsrs	r3, r3, #20
 8003376:	051b      	lsls	r3, r3, #20
 8003378:	b12b      	cbz	r3, 8003386 <_dtoa_r+0x986>
 800337a:	9b07      	ldr	r3, [sp, #28]
 800337c:	f108 0801 	add.w	r8, r8, #1
 8003380:	3301      	adds	r3, #1
 8003382:	9307      	str	r3, [sp, #28]
 8003384:	2301      	movs	r3, #1
 8003386:	9308      	str	r3, [sp, #32]
 8003388:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800338a:	2b00      	cmp	r3, #0
 800338c:	f47f af11 	bne.w	80031b2 <_dtoa_r+0x7b2>
 8003390:	2001      	movs	r0, #1
 8003392:	e716      	b.n	80031c2 <_dtoa_r+0x7c2>
 8003394:	2300      	movs	r3, #0
 8003396:	e7f6      	b.n	8003386 <_dtoa_r+0x986>
 8003398:	9b02      	ldr	r3, [sp, #8]
 800339a:	e7f4      	b.n	8003386 <_dtoa_r+0x986>
 800339c:	f43f af23 	beq.w	80031e6 <_dtoa_r+0x7e6>
 80033a0:	9a07      	ldr	r2, [sp, #28]
 80033a2:	331c      	adds	r3, #28
 80033a4:	441a      	add	r2, r3
 80033a6:	4498      	add	r8, r3
 80033a8:	441d      	add	r5, r3
 80033aa:	4613      	mov	r3, r2
 80033ac:	e71a      	b.n	80031e4 <_dtoa_r+0x7e4>
 80033ae:	4603      	mov	r3, r0
 80033b0:	e7f6      	b.n	80033a0 <_dtoa_r+0x9a0>
 80033b2:	bf00      	nop
 80033b4:	40240000 	.word	0x40240000
 80033b8:	f1b9 0f00 	cmp.w	r9, #0
 80033bc:	dc33      	bgt.n	8003426 <_dtoa_r+0xa26>
 80033be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80033c0:	2b02      	cmp	r3, #2
 80033c2:	dd30      	ble.n	8003426 <_dtoa_r+0xa26>
 80033c4:	f8cd 9010 	str.w	r9, [sp, #16]
 80033c8:	9b04      	ldr	r3, [sp, #16]
 80033ca:	b963      	cbnz	r3, 80033e6 <_dtoa_r+0x9e6>
 80033cc:	4631      	mov	r1, r6
 80033ce:	2205      	movs	r2, #5
 80033d0:	4620      	mov	r0, r4
 80033d2:	f000 fc8e 	bl	8003cf2 <__multadd>
 80033d6:	4601      	mov	r1, r0
 80033d8:	4606      	mov	r6, r0
 80033da:	4650      	mov	r0, sl
 80033dc:	f000 fe47 	bl	800406e <__mcmp>
 80033e0:	2800      	cmp	r0, #0
 80033e2:	f73f ad5c 	bgt.w	8002e9e <_dtoa_r+0x49e>
 80033e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80033e8:	9d06      	ldr	r5, [sp, #24]
 80033ea:	ea6f 0b03 	mvn.w	fp, r3
 80033ee:	2300      	movs	r3, #0
 80033f0:	9307      	str	r3, [sp, #28]
 80033f2:	4631      	mov	r1, r6
 80033f4:	4620      	mov	r0, r4
 80033f6:	f000 fc65 	bl	8003cc4 <_Bfree>
 80033fa:	2f00      	cmp	r7, #0
 80033fc:	f43f ae4b 	beq.w	8003096 <_dtoa_r+0x696>
 8003400:	9b07      	ldr	r3, [sp, #28]
 8003402:	b12b      	cbz	r3, 8003410 <_dtoa_r+0xa10>
 8003404:	42bb      	cmp	r3, r7
 8003406:	d003      	beq.n	8003410 <_dtoa_r+0xa10>
 8003408:	4619      	mov	r1, r3
 800340a:	4620      	mov	r0, r4
 800340c:	f000 fc5a 	bl	8003cc4 <_Bfree>
 8003410:	4639      	mov	r1, r7
 8003412:	4620      	mov	r0, r4
 8003414:	f000 fc56 	bl	8003cc4 <_Bfree>
 8003418:	e63d      	b.n	8003096 <_dtoa_r+0x696>
 800341a:	2600      	movs	r6, #0
 800341c:	4637      	mov	r7, r6
 800341e:	e7e2      	b.n	80033e6 <_dtoa_r+0x9e6>
 8003420:	46bb      	mov	fp, r7
 8003422:	4637      	mov	r7, r6
 8003424:	e53b      	b.n	8002e9e <_dtoa_r+0x49e>
 8003426:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003428:	f8cd 9010 	str.w	r9, [sp, #16]
 800342c:	2b00      	cmp	r3, #0
 800342e:	f47f af12 	bne.w	8003256 <_dtoa_r+0x856>
 8003432:	9d06      	ldr	r5, [sp, #24]
 8003434:	4631      	mov	r1, r6
 8003436:	4650      	mov	r0, sl
 8003438:	f7ff fa56 	bl	80028e8 <quorem>
 800343c:	9b06      	ldr	r3, [sp, #24]
 800343e:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003442:	f805 9b01 	strb.w	r9, [r5], #1
 8003446:	9a04      	ldr	r2, [sp, #16]
 8003448:	1aeb      	subs	r3, r5, r3
 800344a:	429a      	cmp	r2, r3
 800344c:	f300 8081 	bgt.w	8003552 <_dtoa_r+0xb52>
 8003450:	9b06      	ldr	r3, [sp, #24]
 8003452:	2a01      	cmp	r2, #1
 8003454:	bfac      	ite	ge
 8003456:	189b      	addge	r3, r3, r2
 8003458:	3301      	addlt	r3, #1
 800345a:	4698      	mov	r8, r3
 800345c:	2300      	movs	r3, #0
 800345e:	9307      	str	r3, [sp, #28]
 8003460:	4651      	mov	r1, sl
 8003462:	2201      	movs	r2, #1
 8003464:	4620      	mov	r0, r4
 8003466:	f000 fdb1 	bl	8003fcc <__lshift>
 800346a:	4631      	mov	r1, r6
 800346c:	4682      	mov	sl, r0
 800346e:	f000 fdfe 	bl	800406e <__mcmp>
 8003472:	2800      	cmp	r0, #0
 8003474:	dc34      	bgt.n	80034e0 <_dtoa_r+0xae0>
 8003476:	d102      	bne.n	800347e <_dtoa_r+0xa7e>
 8003478:	f019 0f01 	tst.w	r9, #1
 800347c:	d130      	bne.n	80034e0 <_dtoa_r+0xae0>
 800347e:	4645      	mov	r5, r8
 8003480:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8003484:	1e6a      	subs	r2, r5, #1
 8003486:	2b30      	cmp	r3, #48	; 0x30
 8003488:	d1b3      	bne.n	80033f2 <_dtoa_r+0x9f2>
 800348a:	4615      	mov	r5, r2
 800348c:	e7f8      	b.n	8003480 <_dtoa_r+0xa80>
 800348e:	4638      	mov	r0, r7
 8003490:	e6ff      	b.n	8003292 <_dtoa_r+0x892>
 8003492:	2301      	movs	r3, #1
 8003494:	e722      	b.n	80032dc <_dtoa_r+0x8dc>
 8003496:	9a02      	ldr	r2, [sp, #8]
 8003498:	2a00      	cmp	r2, #0
 800349a:	db04      	blt.n	80034a6 <_dtoa_r+0xaa6>
 800349c:	d128      	bne.n	80034f0 <_dtoa_r+0xaf0>
 800349e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80034a0:	bb32      	cbnz	r2, 80034f0 <_dtoa_r+0xaf0>
 80034a2:	9a08      	ldr	r2, [sp, #32]
 80034a4:	bb22      	cbnz	r2, 80034f0 <_dtoa_r+0xaf0>
 80034a6:	2b00      	cmp	r3, #0
 80034a8:	f77f af32 	ble.w	8003310 <_dtoa_r+0x910>
 80034ac:	4651      	mov	r1, sl
 80034ae:	2201      	movs	r2, #1
 80034b0:	4620      	mov	r0, r4
 80034b2:	f000 fd8b 	bl	8003fcc <__lshift>
 80034b6:	4631      	mov	r1, r6
 80034b8:	4682      	mov	sl, r0
 80034ba:	f000 fdd8 	bl	800406e <__mcmp>
 80034be:	2800      	cmp	r0, #0
 80034c0:	dc05      	bgt.n	80034ce <_dtoa_r+0xace>
 80034c2:	f47f af25 	bne.w	8003310 <_dtoa_r+0x910>
 80034c6:	f019 0f01 	tst.w	r9, #1
 80034ca:	f43f af21 	beq.w	8003310 <_dtoa_r+0x910>
 80034ce:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80034d2:	f47f af1b 	bne.w	800330c <_dtoa_r+0x90c>
 80034d6:	2339      	movs	r3, #57	; 0x39
 80034d8:	f108 0801 	add.w	r8, r8, #1
 80034dc:	f808 3c01 	strb.w	r3, [r8, #-1]
 80034e0:	4645      	mov	r5, r8
 80034e2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 80034e6:	1e6a      	subs	r2, r5, #1
 80034e8:	2b39      	cmp	r3, #57	; 0x39
 80034ea:	d03a      	beq.n	8003562 <_dtoa_r+0xb62>
 80034ec:	3301      	adds	r3, #1
 80034ee:	e03f      	b.n	8003570 <_dtoa_r+0xb70>
 80034f0:	2b00      	cmp	r3, #0
 80034f2:	f108 0501 	add.w	r5, r8, #1
 80034f6:	dd05      	ble.n	8003504 <_dtoa_r+0xb04>
 80034f8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80034fc:	d0eb      	beq.n	80034d6 <_dtoa_r+0xad6>
 80034fe:	f109 0901 	add.w	r9, r9, #1
 8003502:	e707      	b.n	8003314 <_dtoa_r+0x914>
 8003504:	9b06      	ldr	r3, [sp, #24]
 8003506:	9a04      	ldr	r2, [sp, #16]
 8003508:	1aeb      	subs	r3, r5, r3
 800350a:	4293      	cmp	r3, r2
 800350c:	46a8      	mov	r8, r5
 800350e:	f805 9c01 	strb.w	r9, [r5, #-1]
 8003512:	d0a5      	beq.n	8003460 <_dtoa_r+0xa60>
 8003514:	4651      	mov	r1, sl
 8003516:	2300      	movs	r3, #0
 8003518:	220a      	movs	r2, #10
 800351a:	4620      	mov	r0, r4
 800351c:	f000 fbe9 	bl	8003cf2 <__multadd>
 8003520:	9b07      	ldr	r3, [sp, #28]
 8003522:	4682      	mov	sl, r0
 8003524:	42bb      	cmp	r3, r7
 8003526:	f04f 020a 	mov.w	r2, #10
 800352a:	f04f 0300 	mov.w	r3, #0
 800352e:	9907      	ldr	r1, [sp, #28]
 8003530:	4620      	mov	r0, r4
 8003532:	d104      	bne.n	800353e <_dtoa_r+0xb3e>
 8003534:	f000 fbdd 	bl	8003cf2 <__multadd>
 8003538:	9007      	str	r0, [sp, #28]
 800353a:	4607      	mov	r7, r0
 800353c:	e6b1      	b.n	80032a2 <_dtoa_r+0x8a2>
 800353e:	f000 fbd8 	bl	8003cf2 <__multadd>
 8003542:	2300      	movs	r3, #0
 8003544:	9007      	str	r0, [sp, #28]
 8003546:	220a      	movs	r2, #10
 8003548:	4639      	mov	r1, r7
 800354a:	4620      	mov	r0, r4
 800354c:	f000 fbd1 	bl	8003cf2 <__multadd>
 8003550:	e7f3      	b.n	800353a <_dtoa_r+0xb3a>
 8003552:	4651      	mov	r1, sl
 8003554:	2300      	movs	r3, #0
 8003556:	220a      	movs	r2, #10
 8003558:	4620      	mov	r0, r4
 800355a:	f000 fbca 	bl	8003cf2 <__multadd>
 800355e:	4682      	mov	sl, r0
 8003560:	e768      	b.n	8003434 <_dtoa_r+0xa34>
 8003562:	9b06      	ldr	r3, [sp, #24]
 8003564:	4293      	cmp	r3, r2
 8003566:	d105      	bne.n	8003574 <_dtoa_r+0xb74>
 8003568:	2331      	movs	r3, #49	; 0x31
 800356a:	9a06      	ldr	r2, [sp, #24]
 800356c:	f10b 0b01 	add.w	fp, fp, #1
 8003570:	7013      	strb	r3, [r2, #0]
 8003572:	e73e      	b.n	80033f2 <_dtoa_r+0x9f2>
 8003574:	4615      	mov	r5, r2
 8003576:	e7b4      	b.n	80034e2 <_dtoa_r+0xae2>
 8003578:	4b09      	ldr	r3, [pc, #36]	; (80035a0 <_dtoa_r+0xba0>)
 800357a:	f7ff baa3 	b.w	8002ac4 <_dtoa_r+0xc4>
 800357e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003580:	2b00      	cmp	r3, #0
 8003582:	f47f aa7d 	bne.w	8002a80 <_dtoa_r+0x80>
 8003586:	4b07      	ldr	r3, [pc, #28]	; (80035a4 <_dtoa_r+0xba4>)
 8003588:	f7ff ba9c 	b.w	8002ac4 <_dtoa_r+0xc4>
 800358c:	9b04      	ldr	r3, [sp, #16]
 800358e:	2b00      	cmp	r3, #0
 8003590:	f73f af4f 	bgt.w	8003432 <_dtoa_r+0xa32>
 8003594:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8003596:	2b02      	cmp	r3, #2
 8003598:	f77f af4b 	ble.w	8003432 <_dtoa_r+0xa32>
 800359c:	e714      	b.n	80033c8 <_dtoa_r+0x9c8>
 800359e:	bf00      	nop
 80035a0:	08004866 	.word	0x08004866
 80035a4:	08004888 	.word	0x08004888

080035a8 <_malloc_trim_r>:
 80035a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80035ac:	4689      	mov	r9, r1
 80035ae:	4f25      	ldr	r7, [pc, #148]	; (8003644 <_malloc_trim_r+0x9c>)
 80035b0:	4606      	mov	r6, r0
 80035b2:	f000 fb47 	bl	8003c44 <__malloc_lock>
 80035b6:	68bb      	ldr	r3, [r7, #8]
 80035b8:	f8df 8094 	ldr.w	r8, [pc, #148]	; 8003650 <_malloc_trim_r+0xa8>
 80035bc:	685d      	ldr	r5, [r3, #4]
 80035be:	f1a8 0411 	sub.w	r4, r8, #17
 80035c2:	f025 0503 	bic.w	r5, r5, #3
 80035c6:	eba4 0409 	sub.w	r4, r4, r9
 80035ca:	442c      	add	r4, r5
 80035cc:	fbb4 f4f8 	udiv	r4, r4, r8
 80035d0:	3c01      	subs	r4, #1
 80035d2:	fb08 f404 	mul.w	r4, r8, r4
 80035d6:	4544      	cmp	r4, r8
 80035d8:	da05      	bge.n	80035e6 <_malloc_trim_r+0x3e>
 80035da:	4630      	mov	r0, r6
 80035dc:	f000 fb38 	bl	8003c50 <__malloc_unlock>
 80035e0:	2000      	movs	r0, #0
 80035e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035e6:	2100      	movs	r1, #0
 80035e8:	4630      	mov	r0, r6
 80035ea:	f000 fe09 	bl	8004200 <_sbrk_r>
 80035ee:	68bb      	ldr	r3, [r7, #8]
 80035f0:	442b      	add	r3, r5
 80035f2:	4298      	cmp	r0, r3
 80035f4:	d1f1      	bne.n	80035da <_malloc_trim_r+0x32>
 80035f6:	4261      	negs	r1, r4
 80035f8:	4630      	mov	r0, r6
 80035fa:	f000 fe01 	bl	8004200 <_sbrk_r>
 80035fe:	3001      	adds	r0, #1
 8003600:	d110      	bne.n	8003624 <_malloc_trim_r+0x7c>
 8003602:	2100      	movs	r1, #0
 8003604:	4630      	mov	r0, r6
 8003606:	f000 fdfb 	bl	8004200 <_sbrk_r>
 800360a:	68ba      	ldr	r2, [r7, #8]
 800360c:	1a83      	subs	r3, r0, r2
 800360e:	2b0f      	cmp	r3, #15
 8003610:	dde3      	ble.n	80035da <_malloc_trim_r+0x32>
 8003612:	490d      	ldr	r1, [pc, #52]	; (8003648 <_malloc_trim_r+0xa0>)
 8003614:	f043 0301 	orr.w	r3, r3, #1
 8003618:	6809      	ldr	r1, [r1, #0]
 800361a:	6053      	str	r3, [r2, #4]
 800361c:	1a40      	subs	r0, r0, r1
 800361e:	490b      	ldr	r1, [pc, #44]	; (800364c <_malloc_trim_r+0xa4>)
 8003620:	6008      	str	r0, [r1, #0]
 8003622:	e7da      	b.n	80035da <_malloc_trim_r+0x32>
 8003624:	68bb      	ldr	r3, [r7, #8]
 8003626:	4a09      	ldr	r2, [pc, #36]	; (800364c <_malloc_trim_r+0xa4>)
 8003628:	1b2d      	subs	r5, r5, r4
 800362a:	f045 0501 	orr.w	r5, r5, #1
 800362e:	605d      	str	r5, [r3, #4]
 8003630:	6813      	ldr	r3, [r2, #0]
 8003632:	4630      	mov	r0, r6
 8003634:	1b1c      	subs	r4, r3, r4
 8003636:	6014      	str	r4, [r2, #0]
 8003638:	f000 fb0a 	bl	8003c50 <__malloc_unlock>
 800363c:	2001      	movs	r0, #1
 800363e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003642:	bf00      	nop
 8003644:	200000f8 	.word	0x200000f8
 8003648:	20000500 	.word	0x20000500
 800364c:	200006c4 	.word	0x200006c4
 8003650:	00000080 	.word	0x00000080

08003654 <_free_r>:
 8003654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003658:	4604      	mov	r4, r0
 800365a:	4688      	mov	r8, r1
 800365c:	2900      	cmp	r1, #0
 800365e:	f000 80ab 	beq.w	80037b8 <_free_r+0x164>
 8003662:	f000 faef 	bl	8003c44 <__malloc_lock>
 8003666:	f858 2c04 	ldr.w	r2, [r8, #-4]
 800366a:	4d54      	ldr	r5, [pc, #336]	; (80037bc <_free_r+0x168>)
 800366c:	f022 0001 	bic.w	r0, r2, #1
 8003670:	f1a8 0308 	sub.w	r3, r8, #8
 8003674:	181f      	adds	r7, r3, r0
 8003676:	68a9      	ldr	r1, [r5, #8]
 8003678:	687e      	ldr	r6, [r7, #4]
 800367a:	428f      	cmp	r7, r1
 800367c:	f026 0603 	bic.w	r6, r6, #3
 8003680:	f002 0201 	and.w	r2, r2, #1
 8003684:	d11b      	bne.n	80036be <_free_r+0x6a>
 8003686:	4430      	add	r0, r6
 8003688:	b93a      	cbnz	r2, 800369a <_free_r+0x46>
 800368a:	f858 2c08 	ldr.w	r2, [r8, #-8]
 800368e:	1a9b      	subs	r3, r3, r2
 8003690:	6899      	ldr	r1, [r3, #8]
 8003692:	4410      	add	r0, r2
 8003694:	68da      	ldr	r2, [r3, #12]
 8003696:	60ca      	str	r2, [r1, #12]
 8003698:	6091      	str	r1, [r2, #8]
 800369a:	f040 0201 	orr.w	r2, r0, #1
 800369e:	605a      	str	r2, [r3, #4]
 80036a0:	60ab      	str	r3, [r5, #8]
 80036a2:	4b47      	ldr	r3, [pc, #284]	; (80037c0 <_free_r+0x16c>)
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	4298      	cmp	r0, r3
 80036a8:	d304      	bcc.n	80036b4 <_free_r+0x60>
 80036aa:	4b46      	ldr	r3, [pc, #280]	; (80037c4 <_free_r+0x170>)
 80036ac:	4620      	mov	r0, r4
 80036ae:	6819      	ldr	r1, [r3, #0]
 80036b0:	f7ff ff7a 	bl	80035a8 <_malloc_trim_r>
 80036b4:	4620      	mov	r0, r4
 80036b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80036ba:	f000 bac9 	b.w	8003c50 <__malloc_unlock>
 80036be:	607e      	str	r6, [r7, #4]
 80036c0:	2a00      	cmp	r2, #0
 80036c2:	d139      	bne.n	8003738 <_free_r+0xe4>
 80036c4:	f858 1c08 	ldr.w	r1, [r8, #-8]
 80036c8:	f105 0e08 	add.w	lr, r5, #8
 80036cc:	1a5b      	subs	r3, r3, r1
 80036ce:	4408      	add	r0, r1
 80036d0:	6899      	ldr	r1, [r3, #8]
 80036d2:	4571      	cmp	r1, lr
 80036d4:	d032      	beq.n	800373c <_free_r+0xe8>
 80036d6:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 80036da:	f8c1 e00c 	str.w	lr, [r1, #12]
 80036de:	f8ce 1008 	str.w	r1, [lr, #8]
 80036e2:	19b9      	adds	r1, r7, r6
 80036e4:	6849      	ldr	r1, [r1, #4]
 80036e6:	07c9      	lsls	r1, r1, #31
 80036e8:	d40a      	bmi.n	8003700 <_free_r+0xac>
 80036ea:	4430      	add	r0, r6
 80036ec:	68b9      	ldr	r1, [r7, #8]
 80036ee:	bb3a      	cbnz	r2, 8003740 <_free_r+0xec>
 80036f0:	4e35      	ldr	r6, [pc, #212]	; (80037c8 <_free_r+0x174>)
 80036f2:	42b1      	cmp	r1, r6
 80036f4:	d124      	bne.n	8003740 <_free_r+0xec>
 80036f6:	2201      	movs	r2, #1
 80036f8:	616b      	str	r3, [r5, #20]
 80036fa:	612b      	str	r3, [r5, #16]
 80036fc:	60d9      	str	r1, [r3, #12]
 80036fe:	6099      	str	r1, [r3, #8]
 8003700:	f040 0101 	orr.w	r1, r0, #1
 8003704:	6059      	str	r1, [r3, #4]
 8003706:	5018      	str	r0, [r3, r0]
 8003708:	2a00      	cmp	r2, #0
 800370a:	d1d3      	bne.n	80036b4 <_free_r+0x60>
 800370c:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8003710:	d21a      	bcs.n	8003748 <_free_r+0xf4>
 8003712:	2201      	movs	r2, #1
 8003714:	08c0      	lsrs	r0, r0, #3
 8003716:	1081      	asrs	r1, r0, #2
 8003718:	408a      	lsls	r2, r1
 800371a:	6869      	ldr	r1, [r5, #4]
 800371c:	3001      	adds	r0, #1
 800371e:	430a      	orrs	r2, r1
 8003720:	606a      	str	r2, [r5, #4]
 8003722:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 8003726:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 800372a:	3a08      	subs	r2, #8
 800372c:	60da      	str	r2, [r3, #12]
 800372e:	6099      	str	r1, [r3, #8]
 8003730:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 8003734:	60cb      	str	r3, [r1, #12]
 8003736:	e7bd      	b.n	80036b4 <_free_r+0x60>
 8003738:	2200      	movs	r2, #0
 800373a:	e7d2      	b.n	80036e2 <_free_r+0x8e>
 800373c:	2201      	movs	r2, #1
 800373e:	e7d0      	b.n	80036e2 <_free_r+0x8e>
 8003740:	68fe      	ldr	r6, [r7, #12]
 8003742:	60ce      	str	r6, [r1, #12]
 8003744:	60b1      	str	r1, [r6, #8]
 8003746:	e7db      	b.n	8003700 <_free_r+0xac>
 8003748:	0a42      	lsrs	r2, r0, #9
 800374a:	2a04      	cmp	r2, #4
 800374c:	d813      	bhi.n	8003776 <_free_r+0x122>
 800374e:	0982      	lsrs	r2, r0, #6
 8003750:	3238      	adds	r2, #56	; 0x38
 8003752:	1c51      	adds	r1, r2, #1
 8003754:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8003758:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 800375c:	428e      	cmp	r6, r1
 800375e:	d124      	bne.n	80037aa <_free_r+0x156>
 8003760:	2001      	movs	r0, #1
 8003762:	1092      	asrs	r2, r2, #2
 8003764:	fa00 f202 	lsl.w	r2, r0, r2
 8003768:	6868      	ldr	r0, [r5, #4]
 800376a:	4302      	orrs	r2, r0
 800376c:	606a      	str	r2, [r5, #4]
 800376e:	60de      	str	r6, [r3, #12]
 8003770:	6099      	str	r1, [r3, #8]
 8003772:	60b3      	str	r3, [r6, #8]
 8003774:	e7de      	b.n	8003734 <_free_r+0xe0>
 8003776:	2a14      	cmp	r2, #20
 8003778:	d801      	bhi.n	800377e <_free_r+0x12a>
 800377a:	325b      	adds	r2, #91	; 0x5b
 800377c:	e7e9      	b.n	8003752 <_free_r+0xfe>
 800377e:	2a54      	cmp	r2, #84	; 0x54
 8003780:	d802      	bhi.n	8003788 <_free_r+0x134>
 8003782:	0b02      	lsrs	r2, r0, #12
 8003784:	326e      	adds	r2, #110	; 0x6e
 8003786:	e7e4      	b.n	8003752 <_free_r+0xfe>
 8003788:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 800378c:	d802      	bhi.n	8003794 <_free_r+0x140>
 800378e:	0bc2      	lsrs	r2, r0, #15
 8003790:	3277      	adds	r2, #119	; 0x77
 8003792:	e7de      	b.n	8003752 <_free_r+0xfe>
 8003794:	f240 5154 	movw	r1, #1364	; 0x554
 8003798:	428a      	cmp	r2, r1
 800379a:	bf9a      	itte	ls
 800379c:	0c82      	lsrls	r2, r0, #18
 800379e:	327c      	addls	r2, #124	; 0x7c
 80037a0:	227e      	movhi	r2, #126	; 0x7e
 80037a2:	e7d6      	b.n	8003752 <_free_r+0xfe>
 80037a4:	6889      	ldr	r1, [r1, #8]
 80037a6:	428e      	cmp	r6, r1
 80037a8:	d004      	beq.n	80037b4 <_free_r+0x160>
 80037aa:	684a      	ldr	r2, [r1, #4]
 80037ac:	f022 0203 	bic.w	r2, r2, #3
 80037b0:	4290      	cmp	r0, r2
 80037b2:	d3f7      	bcc.n	80037a4 <_free_r+0x150>
 80037b4:	68ce      	ldr	r6, [r1, #12]
 80037b6:	e7da      	b.n	800376e <_free_r+0x11a>
 80037b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80037bc:	200000f8 	.word	0x200000f8
 80037c0:	20000504 	.word	0x20000504
 80037c4:	200006f4 	.word	0x200006f4
 80037c8:	20000100 	.word	0x20000100

080037cc <_localeconv_r>:
 80037cc:	4b04      	ldr	r3, [pc, #16]	; (80037e0 <_localeconv_r+0x14>)
 80037ce:	681b      	ldr	r3, [r3, #0]
 80037d0:	6a18      	ldr	r0, [r3, #32]
 80037d2:	4b04      	ldr	r3, [pc, #16]	; (80037e4 <_localeconv_r+0x18>)
 80037d4:	2800      	cmp	r0, #0
 80037d6:	bf08      	it	eq
 80037d8:	4618      	moveq	r0, r3
 80037da:	30f0      	adds	r0, #240	; 0xf0
 80037dc:	4770      	bx	lr
 80037de:	bf00      	nop
 80037e0:	20000004 	.word	0x20000004
 80037e4:	20000508 	.word	0x20000508

080037e8 <malloc>:
 80037e8:	4b02      	ldr	r3, [pc, #8]	; (80037f4 <malloc+0xc>)
 80037ea:	4601      	mov	r1, r0
 80037ec:	6818      	ldr	r0, [r3, #0]
 80037ee:	f000 b803 	b.w	80037f8 <_malloc_r>
 80037f2:	bf00      	nop
 80037f4:	20000004 	.word	0x20000004

080037f8 <_malloc_r>:
 80037f8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037fc:	f101 040b 	add.w	r4, r1, #11
 8003800:	2c16      	cmp	r4, #22
 8003802:	4681      	mov	r9, r0
 8003804:	d907      	bls.n	8003816 <_malloc_r+0x1e>
 8003806:	f034 0407 	bics.w	r4, r4, #7
 800380a:	d505      	bpl.n	8003818 <_malloc_r+0x20>
 800380c:	230c      	movs	r3, #12
 800380e:	f8c9 3000 	str.w	r3, [r9]
 8003812:	2600      	movs	r6, #0
 8003814:	e131      	b.n	8003a7a <_malloc_r+0x282>
 8003816:	2410      	movs	r4, #16
 8003818:	428c      	cmp	r4, r1
 800381a:	d3f7      	bcc.n	800380c <_malloc_r+0x14>
 800381c:	4648      	mov	r0, r9
 800381e:	f000 fa11 	bl	8003c44 <__malloc_lock>
 8003822:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 8003826:	4d9b      	ldr	r5, [pc, #620]	; (8003a94 <_malloc_r+0x29c>)
 8003828:	d236      	bcs.n	8003898 <_malloc_r+0xa0>
 800382a:	f104 0208 	add.w	r2, r4, #8
 800382e:	442a      	add	r2, r5
 8003830:	6856      	ldr	r6, [r2, #4]
 8003832:	f1a2 0108 	sub.w	r1, r2, #8
 8003836:	428e      	cmp	r6, r1
 8003838:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 800383c:	d102      	bne.n	8003844 <_malloc_r+0x4c>
 800383e:	68d6      	ldr	r6, [r2, #12]
 8003840:	42b2      	cmp	r2, r6
 8003842:	d010      	beq.n	8003866 <_malloc_r+0x6e>
 8003844:	6873      	ldr	r3, [r6, #4]
 8003846:	68f2      	ldr	r2, [r6, #12]
 8003848:	68b1      	ldr	r1, [r6, #8]
 800384a:	f023 0303 	bic.w	r3, r3, #3
 800384e:	60ca      	str	r2, [r1, #12]
 8003850:	4433      	add	r3, r6
 8003852:	6091      	str	r1, [r2, #8]
 8003854:	685a      	ldr	r2, [r3, #4]
 8003856:	f042 0201 	orr.w	r2, r2, #1
 800385a:	605a      	str	r2, [r3, #4]
 800385c:	4648      	mov	r0, r9
 800385e:	f000 f9f7 	bl	8003c50 <__malloc_unlock>
 8003862:	3608      	adds	r6, #8
 8003864:	e109      	b.n	8003a7a <_malloc_r+0x282>
 8003866:	3302      	adds	r3, #2
 8003868:	4a8b      	ldr	r2, [pc, #556]	; (8003a98 <_malloc_r+0x2a0>)
 800386a:	692e      	ldr	r6, [r5, #16]
 800386c:	4611      	mov	r1, r2
 800386e:	4296      	cmp	r6, r2
 8003870:	d06d      	beq.n	800394e <_malloc_r+0x156>
 8003872:	6870      	ldr	r0, [r6, #4]
 8003874:	f020 0003 	bic.w	r0, r0, #3
 8003878:	1b07      	subs	r7, r0, r4
 800387a:	2f0f      	cmp	r7, #15
 800387c:	dd47      	ble.n	800390e <_malloc_r+0x116>
 800387e:	1933      	adds	r3, r6, r4
 8003880:	f044 0401 	orr.w	r4, r4, #1
 8003884:	6074      	str	r4, [r6, #4]
 8003886:	616b      	str	r3, [r5, #20]
 8003888:	612b      	str	r3, [r5, #16]
 800388a:	60da      	str	r2, [r3, #12]
 800388c:	609a      	str	r2, [r3, #8]
 800388e:	f047 0201 	orr.w	r2, r7, #1
 8003892:	605a      	str	r2, [r3, #4]
 8003894:	5037      	str	r7, [r6, r0]
 8003896:	e7e1      	b.n	800385c <_malloc_r+0x64>
 8003898:	0a63      	lsrs	r3, r4, #9
 800389a:	d02a      	beq.n	80038f2 <_malloc_r+0xfa>
 800389c:	2b04      	cmp	r3, #4
 800389e:	d812      	bhi.n	80038c6 <_malloc_r+0xce>
 80038a0:	09a3      	lsrs	r3, r4, #6
 80038a2:	3338      	adds	r3, #56	; 0x38
 80038a4:	1c5a      	adds	r2, r3, #1
 80038a6:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 80038aa:	6856      	ldr	r6, [r2, #4]
 80038ac:	f1a2 0008 	sub.w	r0, r2, #8
 80038b0:	4286      	cmp	r6, r0
 80038b2:	d006      	beq.n	80038c2 <_malloc_r+0xca>
 80038b4:	6872      	ldr	r2, [r6, #4]
 80038b6:	f022 0203 	bic.w	r2, r2, #3
 80038ba:	1b11      	subs	r1, r2, r4
 80038bc:	290f      	cmp	r1, #15
 80038be:	dd1c      	ble.n	80038fa <_malloc_r+0x102>
 80038c0:	3b01      	subs	r3, #1
 80038c2:	3301      	adds	r3, #1
 80038c4:	e7d0      	b.n	8003868 <_malloc_r+0x70>
 80038c6:	2b14      	cmp	r3, #20
 80038c8:	d801      	bhi.n	80038ce <_malloc_r+0xd6>
 80038ca:	335b      	adds	r3, #91	; 0x5b
 80038cc:	e7ea      	b.n	80038a4 <_malloc_r+0xac>
 80038ce:	2b54      	cmp	r3, #84	; 0x54
 80038d0:	d802      	bhi.n	80038d8 <_malloc_r+0xe0>
 80038d2:	0b23      	lsrs	r3, r4, #12
 80038d4:	336e      	adds	r3, #110	; 0x6e
 80038d6:	e7e5      	b.n	80038a4 <_malloc_r+0xac>
 80038d8:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 80038dc:	d802      	bhi.n	80038e4 <_malloc_r+0xec>
 80038de:	0be3      	lsrs	r3, r4, #15
 80038e0:	3377      	adds	r3, #119	; 0x77
 80038e2:	e7df      	b.n	80038a4 <_malloc_r+0xac>
 80038e4:	f240 5254 	movw	r2, #1364	; 0x554
 80038e8:	4293      	cmp	r3, r2
 80038ea:	d804      	bhi.n	80038f6 <_malloc_r+0xfe>
 80038ec:	0ca3      	lsrs	r3, r4, #18
 80038ee:	337c      	adds	r3, #124	; 0x7c
 80038f0:	e7d8      	b.n	80038a4 <_malloc_r+0xac>
 80038f2:	233f      	movs	r3, #63	; 0x3f
 80038f4:	e7d6      	b.n	80038a4 <_malloc_r+0xac>
 80038f6:	237e      	movs	r3, #126	; 0x7e
 80038f8:	e7d4      	b.n	80038a4 <_malloc_r+0xac>
 80038fa:	2900      	cmp	r1, #0
 80038fc:	68f1      	ldr	r1, [r6, #12]
 80038fe:	db04      	blt.n	800390a <_malloc_r+0x112>
 8003900:	68b3      	ldr	r3, [r6, #8]
 8003902:	60d9      	str	r1, [r3, #12]
 8003904:	608b      	str	r3, [r1, #8]
 8003906:	18b3      	adds	r3, r6, r2
 8003908:	e7a4      	b.n	8003854 <_malloc_r+0x5c>
 800390a:	460e      	mov	r6, r1
 800390c:	e7d0      	b.n	80038b0 <_malloc_r+0xb8>
 800390e:	2f00      	cmp	r7, #0
 8003910:	616a      	str	r2, [r5, #20]
 8003912:	612a      	str	r2, [r5, #16]
 8003914:	db05      	blt.n	8003922 <_malloc_r+0x12a>
 8003916:	4430      	add	r0, r6
 8003918:	6843      	ldr	r3, [r0, #4]
 800391a:	f043 0301 	orr.w	r3, r3, #1
 800391e:	6043      	str	r3, [r0, #4]
 8003920:	e79c      	b.n	800385c <_malloc_r+0x64>
 8003922:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8003926:	d244      	bcs.n	80039b2 <_malloc_r+0x1ba>
 8003928:	2201      	movs	r2, #1
 800392a:	08c0      	lsrs	r0, r0, #3
 800392c:	1087      	asrs	r7, r0, #2
 800392e:	fa02 f707 	lsl.w	r7, r2, r7
 8003932:	686a      	ldr	r2, [r5, #4]
 8003934:	3001      	adds	r0, #1
 8003936:	433a      	orrs	r2, r7
 8003938:	606a      	str	r2, [r5, #4]
 800393a:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 800393e:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 8003942:	3a08      	subs	r2, #8
 8003944:	60f2      	str	r2, [r6, #12]
 8003946:	60b7      	str	r7, [r6, #8]
 8003948:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 800394c:	60fe      	str	r6, [r7, #12]
 800394e:	2001      	movs	r0, #1
 8003950:	109a      	asrs	r2, r3, #2
 8003952:	fa00 f202 	lsl.w	r2, r0, r2
 8003956:	6868      	ldr	r0, [r5, #4]
 8003958:	4282      	cmp	r2, r0
 800395a:	f200 809f 	bhi.w	8003a9c <_malloc_r+0x2a4>
 800395e:	4202      	tst	r2, r0
 8003960:	d106      	bne.n	8003970 <_malloc_r+0x178>
 8003962:	f023 0303 	bic.w	r3, r3, #3
 8003966:	0052      	lsls	r2, r2, #1
 8003968:	4202      	tst	r2, r0
 800396a:	f103 0304 	add.w	r3, r3, #4
 800396e:	d0fa      	beq.n	8003966 <_malloc_r+0x16e>
 8003970:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 8003974:	46e0      	mov	r8, ip
 8003976:	469e      	mov	lr, r3
 8003978:	f8d8 600c 	ldr.w	r6, [r8, #12]
 800397c:	4546      	cmp	r6, r8
 800397e:	d153      	bne.n	8003a28 <_malloc_r+0x230>
 8003980:	f10e 0e01 	add.w	lr, lr, #1
 8003984:	f01e 0f03 	tst.w	lr, #3
 8003988:	f108 0808 	add.w	r8, r8, #8
 800398c:	d1f4      	bne.n	8003978 <_malloc_r+0x180>
 800398e:	0798      	lsls	r0, r3, #30
 8003990:	d179      	bne.n	8003a86 <_malloc_r+0x28e>
 8003992:	686b      	ldr	r3, [r5, #4]
 8003994:	ea23 0302 	bic.w	r3, r3, r2
 8003998:	606b      	str	r3, [r5, #4]
 800399a:	6868      	ldr	r0, [r5, #4]
 800399c:	0052      	lsls	r2, r2, #1
 800399e:	4282      	cmp	r2, r0
 80039a0:	d87c      	bhi.n	8003a9c <_malloc_r+0x2a4>
 80039a2:	2a00      	cmp	r2, #0
 80039a4:	d07a      	beq.n	8003a9c <_malloc_r+0x2a4>
 80039a6:	4673      	mov	r3, lr
 80039a8:	4202      	tst	r2, r0
 80039aa:	d1e1      	bne.n	8003970 <_malloc_r+0x178>
 80039ac:	3304      	adds	r3, #4
 80039ae:	0052      	lsls	r2, r2, #1
 80039b0:	e7fa      	b.n	80039a8 <_malloc_r+0x1b0>
 80039b2:	0a42      	lsrs	r2, r0, #9
 80039b4:	2a04      	cmp	r2, #4
 80039b6:	d815      	bhi.n	80039e4 <_malloc_r+0x1ec>
 80039b8:	0982      	lsrs	r2, r0, #6
 80039ba:	3238      	adds	r2, #56	; 0x38
 80039bc:	1c57      	adds	r7, r2, #1
 80039be:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 80039c2:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 80039c6:	45be      	cmp	lr, r7
 80039c8:	d126      	bne.n	8003a18 <_malloc_r+0x220>
 80039ca:	2001      	movs	r0, #1
 80039cc:	1092      	asrs	r2, r2, #2
 80039ce:	fa00 f202 	lsl.w	r2, r0, r2
 80039d2:	6868      	ldr	r0, [r5, #4]
 80039d4:	4310      	orrs	r0, r2
 80039d6:	6068      	str	r0, [r5, #4]
 80039d8:	f8c6 e00c 	str.w	lr, [r6, #12]
 80039dc:	60b7      	str	r7, [r6, #8]
 80039de:	f8ce 6008 	str.w	r6, [lr, #8]
 80039e2:	e7b3      	b.n	800394c <_malloc_r+0x154>
 80039e4:	2a14      	cmp	r2, #20
 80039e6:	d801      	bhi.n	80039ec <_malloc_r+0x1f4>
 80039e8:	325b      	adds	r2, #91	; 0x5b
 80039ea:	e7e7      	b.n	80039bc <_malloc_r+0x1c4>
 80039ec:	2a54      	cmp	r2, #84	; 0x54
 80039ee:	d802      	bhi.n	80039f6 <_malloc_r+0x1fe>
 80039f0:	0b02      	lsrs	r2, r0, #12
 80039f2:	326e      	adds	r2, #110	; 0x6e
 80039f4:	e7e2      	b.n	80039bc <_malloc_r+0x1c4>
 80039f6:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80039fa:	d802      	bhi.n	8003a02 <_malloc_r+0x20a>
 80039fc:	0bc2      	lsrs	r2, r0, #15
 80039fe:	3277      	adds	r2, #119	; 0x77
 8003a00:	e7dc      	b.n	80039bc <_malloc_r+0x1c4>
 8003a02:	f240 5754 	movw	r7, #1364	; 0x554
 8003a06:	42ba      	cmp	r2, r7
 8003a08:	bf9a      	itte	ls
 8003a0a:	0c82      	lsrls	r2, r0, #18
 8003a0c:	327c      	addls	r2, #124	; 0x7c
 8003a0e:	227e      	movhi	r2, #126	; 0x7e
 8003a10:	e7d4      	b.n	80039bc <_malloc_r+0x1c4>
 8003a12:	68bf      	ldr	r7, [r7, #8]
 8003a14:	45be      	cmp	lr, r7
 8003a16:	d004      	beq.n	8003a22 <_malloc_r+0x22a>
 8003a18:	687a      	ldr	r2, [r7, #4]
 8003a1a:	f022 0203 	bic.w	r2, r2, #3
 8003a1e:	4290      	cmp	r0, r2
 8003a20:	d3f7      	bcc.n	8003a12 <_malloc_r+0x21a>
 8003a22:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 8003a26:	e7d7      	b.n	80039d8 <_malloc_r+0x1e0>
 8003a28:	6870      	ldr	r0, [r6, #4]
 8003a2a:	68f7      	ldr	r7, [r6, #12]
 8003a2c:	f020 0003 	bic.w	r0, r0, #3
 8003a30:	eba0 0a04 	sub.w	sl, r0, r4
 8003a34:	f1ba 0f0f 	cmp.w	sl, #15
 8003a38:	dd10      	ble.n	8003a5c <_malloc_r+0x264>
 8003a3a:	68b2      	ldr	r2, [r6, #8]
 8003a3c:	1933      	adds	r3, r6, r4
 8003a3e:	f044 0401 	orr.w	r4, r4, #1
 8003a42:	6074      	str	r4, [r6, #4]
 8003a44:	60d7      	str	r7, [r2, #12]
 8003a46:	60ba      	str	r2, [r7, #8]
 8003a48:	f04a 0201 	orr.w	r2, sl, #1
 8003a4c:	616b      	str	r3, [r5, #20]
 8003a4e:	612b      	str	r3, [r5, #16]
 8003a50:	60d9      	str	r1, [r3, #12]
 8003a52:	6099      	str	r1, [r3, #8]
 8003a54:	605a      	str	r2, [r3, #4]
 8003a56:	f846 a000 	str.w	sl, [r6, r0]
 8003a5a:	e6ff      	b.n	800385c <_malloc_r+0x64>
 8003a5c:	f1ba 0f00 	cmp.w	sl, #0
 8003a60:	db0f      	blt.n	8003a82 <_malloc_r+0x28a>
 8003a62:	4430      	add	r0, r6
 8003a64:	6843      	ldr	r3, [r0, #4]
 8003a66:	f043 0301 	orr.w	r3, r3, #1
 8003a6a:	6043      	str	r3, [r0, #4]
 8003a6c:	f856 3f08 	ldr.w	r3, [r6, #8]!
 8003a70:	4648      	mov	r0, r9
 8003a72:	60df      	str	r7, [r3, #12]
 8003a74:	60bb      	str	r3, [r7, #8]
 8003a76:	f000 f8eb 	bl	8003c50 <__malloc_unlock>
 8003a7a:	4630      	mov	r0, r6
 8003a7c:	b003      	add	sp, #12
 8003a7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a82:	463e      	mov	r6, r7
 8003a84:	e77a      	b.n	800397c <_malloc_r+0x184>
 8003a86:	f85c 0908 	ldr.w	r0, [ip], #-8
 8003a8a:	3b01      	subs	r3, #1
 8003a8c:	4584      	cmp	ip, r0
 8003a8e:	f43f af7e 	beq.w	800398e <_malloc_r+0x196>
 8003a92:	e782      	b.n	800399a <_malloc_r+0x1a2>
 8003a94:	200000f8 	.word	0x200000f8
 8003a98:	20000100 	.word	0x20000100
 8003a9c:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8003aa0:	f8db 6004 	ldr.w	r6, [fp, #4]
 8003aa4:	f026 0603 	bic.w	r6, r6, #3
 8003aa8:	42b4      	cmp	r4, r6
 8003aaa:	d803      	bhi.n	8003ab4 <_malloc_r+0x2bc>
 8003aac:	1b33      	subs	r3, r6, r4
 8003aae:	2b0f      	cmp	r3, #15
 8003ab0:	f300 8095 	bgt.w	8003bde <_malloc_r+0x3e6>
 8003ab4:	4a4f      	ldr	r2, [pc, #316]	; (8003bf4 <_malloc_r+0x3fc>)
 8003ab6:	eb0b 0306 	add.w	r3, fp, r6
 8003aba:	6817      	ldr	r7, [r2, #0]
 8003abc:	4a4e      	ldr	r2, [pc, #312]	; (8003bf8 <_malloc_r+0x400>)
 8003abe:	3710      	adds	r7, #16
 8003ac0:	6811      	ldr	r1, [r2, #0]
 8003ac2:	4427      	add	r7, r4
 8003ac4:	3101      	adds	r1, #1
 8003ac6:	d005      	beq.n	8003ad4 <_malloc_r+0x2dc>
 8003ac8:	494c      	ldr	r1, [pc, #304]	; (8003bfc <_malloc_r+0x404>)
 8003aca:	3901      	subs	r1, #1
 8003acc:	440f      	add	r7, r1
 8003ace:	3101      	adds	r1, #1
 8003ad0:	4249      	negs	r1, r1
 8003ad2:	400f      	ands	r7, r1
 8003ad4:	4639      	mov	r1, r7
 8003ad6:	4648      	mov	r0, r9
 8003ad8:	9201      	str	r2, [sp, #4]
 8003ada:	9300      	str	r3, [sp, #0]
 8003adc:	f000 fb90 	bl	8004200 <_sbrk_r>
 8003ae0:	f1b0 3fff 	cmp.w	r0, #4294967295
 8003ae4:	4680      	mov	r8, r0
 8003ae6:	d055      	beq.n	8003b94 <_malloc_r+0x39c>
 8003ae8:	9b00      	ldr	r3, [sp, #0]
 8003aea:	9a01      	ldr	r2, [sp, #4]
 8003aec:	4283      	cmp	r3, r0
 8003aee:	d901      	bls.n	8003af4 <_malloc_r+0x2fc>
 8003af0:	45ab      	cmp	fp, r5
 8003af2:	d14f      	bne.n	8003b94 <_malloc_r+0x39c>
 8003af4:	4842      	ldr	r0, [pc, #264]	; (8003c00 <_malloc_r+0x408>)
 8003af6:	4543      	cmp	r3, r8
 8003af8:	6801      	ldr	r1, [r0, #0]
 8003afa:	4682      	mov	sl, r0
 8003afc:	eb07 0e01 	add.w	lr, r7, r1
 8003b00:	f8c0 e000 	str.w	lr, [r0]
 8003b04:	493f      	ldr	r1, [pc, #252]	; (8003c04 <_malloc_r+0x40c>)
 8003b06:	d113      	bne.n	8003b30 <_malloc_r+0x338>
 8003b08:	420b      	tst	r3, r1
 8003b0a:	d111      	bne.n	8003b30 <_malloc_r+0x338>
 8003b0c:	68ab      	ldr	r3, [r5, #8]
 8003b0e:	443e      	add	r6, r7
 8003b10:	f046 0601 	orr.w	r6, r6, #1
 8003b14:	605e      	str	r6, [r3, #4]
 8003b16:	4a3c      	ldr	r2, [pc, #240]	; (8003c08 <_malloc_r+0x410>)
 8003b18:	f8da 3000 	ldr.w	r3, [sl]
 8003b1c:	6811      	ldr	r1, [r2, #0]
 8003b1e:	428b      	cmp	r3, r1
 8003b20:	bf88      	it	hi
 8003b22:	6013      	strhi	r3, [r2, #0]
 8003b24:	4a39      	ldr	r2, [pc, #228]	; (8003c0c <_malloc_r+0x414>)
 8003b26:	6811      	ldr	r1, [r2, #0]
 8003b28:	428b      	cmp	r3, r1
 8003b2a:	bf88      	it	hi
 8003b2c:	6013      	strhi	r3, [r2, #0]
 8003b2e:	e031      	b.n	8003b94 <_malloc_r+0x39c>
 8003b30:	6810      	ldr	r0, [r2, #0]
 8003b32:	3001      	adds	r0, #1
 8003b34:	bf1b      	ittet	ne
 8003b36:	eba8 0303 	subne.w	r3, r8, r3
 8003b3a:	4473      	addne	r3, lr
 8003b3c:	f8c2 8000 	streq.w	r8, [r2]
 8003b40:	f8ca 3000 	strne.w	r3, [sl]
 8003b44:	f018 0007 	ands.w	r0, r8, #7
 8003b48:	bf1c      	itt	ne
 8003b4a:	f1c0 0008 	rsbne	r0, r0, #8
 8003b4e:	4480      	addne	r8, r0
 8003b50:	4b2a      	ldr	r3, [pc, #168]	; (8003bfc <_malloc_r+0x404>)
 8003b52:	4447      	add	r7, r8
 8003b54:	4418      	add	r0, r3
 8003b56:	400f      	ands	r7, r1
 8003b58:	1bc7      	subs	r7, r0, r7
 8003b5a:	4639      	mov	r1, r7
 8003b5c:	4648      	mov	r0, r9
 8003b5e:	f000 fb4f 	bl	8004200 <_sbrk_r>
 8003b62:	1c43      	adds	r3, r0, #1
 8003b64:	bf04      	itt	eq
 8003b66:	4640      	moveq	r0, r8
 8003b68:	2700      	moveq	r7, #0
 8003b6a:	f8da 3000 	ldr.w	r3, [sl]
 8003b6e:	eba0 0008 	sub.w	r0, r0, r8
 8003b72:	443b      	add	r3, r7
 8003b74:	4407      	add	r7, r0
 8003b76:	f047 0701 	orr.w	r7, r7, #1
 8003b7a:	45ab      	cmp	fp, r5
 8003b7c:	f8c5 8008 	str.w	r8, [r5, #8]
 8003b80:	f8ca 3000 	str.w	r3, [sl]
 8003b84:	f8c8 7004 	str.w	r7, [r8, #4]
 8003b88:	d0c5      	beq.n	8003b16 <_malloc_r+0x31e>
 8003b8a:	2e0f      	cmp	r6, #15
 8003b8c:	d810      	bhi.n	8003bb0 <_malloc_r+0x3b8>
 8003b8e:	2301      	movs	r3, #1
 8003b90:	f8c8 3004 	str.w	r3, [r8, #4]
 8003b94:	68ab      	ldr	r3, [r5, #8]
 8003b96:	685a      	ldr	r2, [r3, #4]
 8003b98:	f022 0203 	bic.w	r2, r2, #3
 8003b9c:	4294      	cmp	r4, r2
 8003b9e:	eba2 0304 	sub.w	r3, r2, r4
 8003ba2:	d801      	bhi.n	8003ba8 <_malloc_r+0x3b0>
 8003ba4:	2b0f      	cmp	r3, #15
 8003ba6:	dc1a      	bgt.n	8003bde <_malloc_r+0x3e6>
 8003ba8:	4648      	mov	r0, r9
 8003baa:	f000 f851 	bl	8003c50 <__malloc_unlock>
 8003bae:	e630      	b.n	8003812 <_malloc_r+0x1a>
 8003bb0:	2205      	movs	r2, #5
 8003bb2:	f8db 3004 	ldr.w	r3, [fp, #4]
 8003bb6:	3e0c      	subs	r6, #12
 8003bb8:	f026 0607 	bic.w	r6, r6, #7
 8003bbc:	f003 0301 	and.w	r3, r3, #1
 8003bc0:	4333      	orrs	r3, r6
 8003bc2:	f8cb 3004 	str.w	r3, [fp, #4]
 8003bc6:	2e0f      	cmp	r6, #15
 8003bc8:	eb0b 0306 	add.w	r3, fp, r6
 8003bcc:	605a      	str	r2, [r3, #4]
 8003bce:	609a      	str	r2, [r3, #8]
 8003bd0:	d9a1      	bls.n	8003b16 <_malloc_r+0x31e>
 8003bd2:	f10b 0108 	add.w	r1, fp, #8
 8003bd6:	4648      	mov	r0, r9
 8003bd8:	f7ff fd3c 	bl	8003654 <_free_r>
 8003bdc:	e79b      	b.n	8003b16 <_malloc_r+0x31e>
 8003bde:	68ae      	ldr	r6, [r5, #8]
 8003be0:	f044 0201 	orr.w	r2, r4, #1
 8003be4:	f043 0301 	orr.w	r3, r3, #1
 8003be8:	4434      	add	r4, r6
 8003bea:	6072      	str	r2, [r6, #4]
 8003bec:	60ac      	str	r4, [r5, #8]
 8003bee:	6063      	str	r3, [r4, #4]
 8003bf0:	e634      	b.n	800385c <_malloc_r+0x64>
 8003bf2:	bf00      	nop
 8003bf4:	200006f4 	.word	0x200006f4
 8003bf8:	20000500 	.word	0x20000500
 8003bfc:	00000080 	.word	0x00000080
 8003c00:	200006c4 	.word	0x200006c4
 8003c04:	0000007f 	.word	0x0000007f
 8003c08:	200006ec 	.word	0x200006ec
 8003c0c:	200006f0 	.word	0x200006f0

08003c10 <memchr>:
 8003c10:	b510      	push	{r4, lr}
 8003c12:	b2c9      	uxtb	r1, r1
 8003c14:	4402      	add	r2, r0
 8003c16:	4290      	cmp	r0, r2
 8003c18:	4603      	mov	r3, r0
 8003c1a:	d101      	bne.n	8003c20 <memchr+0x10>
 8003c1c:	2000      	movs	r0, #0
 8003c1e:	bd10      	pop	{r4, pc}
 8003c20:	781c      	ldrb	r4, [r3, #0]
 8003c22:	3001      	adds	r0, #1
 8003c24:	428c      	cmp	r4, r1
 8003c26:	d1f6      	bne.n	8003c16 <memchr+0x6>
 8003c28:	4618      	mov	r0, r3
 8003c2a:	bd10      	pop	{r4, pc}

08003c2c <memcpy>:
 8003c2c:	b510      	push	{r4, lr}
 8003c2e:	1e43      	subs	r3, r0, #1
 8003c30:	440a      	add	r2, r1
 8003c32:	4291      	cmp	r1, r2
 8003c34:	d100      	bne.n	8003c38 <memcpy+0xc>
 8003c36:	bd10      	pop	{r4, pc}
 8003c38:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003c3c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003c40:	e7f7      	b.n	8003c32 <memcpy+0x6>
	...

08003c44 <__malloc_lock>:
 8003c44:	4801      	ldr	r0, [pc, #4]	; (8003c4c <__malloc_lock+0x8>)
 8003c46:	f000 bb92 	b.w	800436e <__retarget_lock_acquire_recursive>
 8003c4a:	bf00      	nop
 8003c4c:	20000700 	.word	0x20000700

08003c50 <__malloc_unlock>:
 8003c50:	4801      	ldr	r0, [pc, #4]	; (8003c58 <__malloc_unlock+0x8>)
 8003c52:	f000 bb8d 	b.w	8004370 <__retarget_lock_release_recursive>
 8003c56:	bf00      	nop
 8003c58:	20000700 	.word	0x20000700

08003c5c <_Balloc>:
 8003c5c:	b570      	push	{r4, r5, r6, lr}
 8003c5e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8003c60:	4604      	mov	r4, r0
 8003c62:	460e      	mov	r6, r1
 8003c64:	b93d      	cbnz	r5, 8003c76 <_Balloc+0x1a>
 8003c66:	2010      	movs	r0, #16
 8003c68:	f7ff fdbe 	bl	80037e8 <malloc>
 8003c6c:	6260      	str	r0, [r4, #36]	; 0x24
 8003c6e:	6045      	str	r5, [r0, #4]
 8003c70:	6085      	str	r5, [r0, #8]
 8003c72:	6005      	str	r5, [r0, #0]
 8003c74:	60c5      	str	r5, [r0, #12]
 8003c76:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8003c78:	68eb      	ldr	r3, [r5, #12]
 8003c7a:	b183      	cbz	r3, 8003c9e <_Balloc+0x42>
 8003c7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003c7e:	68db      	ldr	r3, [r3, #12]
 8003c80:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8003c84:	b9b8      	cbnz	r0, 8003cb6 <_Balloc+0x5a>
 8003c86:	2101      	movs	r1, #1
 8003c88:	fa01 f506 	lsl.w	r5, r1, r6
 8003c8c:	1d6a      	adds	r2, r5, #5
 8003c8e:	0092      	lsls	r2, r2, #2
 8003c90:	4620      	mov	r0, r4
 8003c92:	f000 fb3f 	bl	8004314 <_calloc_r>
 8003c96:	b160      	cbz	r0, 8003cb2 <_Balloc+0x56>
 8003c98:	6046      	str	r6, [r0, #4]
 8003c9a:	6085      	str	r5, [r0, #8]
 8003c9c:	e00e      	b.n	8003cbc <_Balloc+0x60>
 8003c9e:	2221      	movs	r2, #33	; 0x21
 8003ca0:	2104      	movs	r1, #4
 8003ca2:	4620      	mov	r0, r4
 8003ca4:	f000 fb36 	bl	8004314 <_calloc_r>
 8003ca8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8003caa:	60e8      	str	r0, [r5, #12]
 8003cac:	68db      	ldr	r3, [r3, #12]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d1e4      	bne.n	8003c7c <_Balloc+0x20>
 8003cb2:	2000      	movs	r0, #0
 8003cb4:	bd70      	pop	{r4, r5, r6, pc}
 8003cb6:	6802      	ldr	r2, [r0, #0]
 8003cb8:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	6103      	str	r3, [r0, #16]
 8003cc0:	60c3      	str	r3, [r0, #12]
 8003cc2:	bd70      	pop	{r4, r5, r6, pc}

08003cc4 <_Bfree>:
 8003cc4:	b570      	push	{r4, r5, r6, lr}
 8003cc6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8003cc8:	4606      	mov	r6, r0
 8003cca:	460d      	mov	r5, r1
 8003ccc:	b93c      	cbnz	r4, 8003cde <_Bfree+0x1a>
 8003cce:	2010      	movs	r0, #16
 8003cd0:	f7ff fd8a 	bl	80037e8 <malloc>
 8003cd4:	6270      	str	r0, [r6, #36]	; 0x24
 8003cd6:	6044      	str	r4, [r0, #4]
 8003cd8:	6084      	str	r4, [r0, #8]
 8003cda:	6004      	str	r4, [r0, #0]
 8003cdc:	60c4      	str	r4, [r0, #12]
 8003cde:	b13d      	cbz	r5, 8003cf0 <_Bfree+0x2c>
 8003ce0:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8003ce2:	686a      	ldr	r2, [r5, #4]
 8003ce4:	68db      	ldr	r3, [r3, #12]
 8003ce6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003cea:	6029      	str	r1, [r5, #0]
 8003cec:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8003cf0:	bd70      	pop	{r4, r5, r6, pc}

08003cf2 <__multadd>:
 8003cf2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cf6:	461f      	mov	r7, r3
 8003cf8:	4606      	mov	r6, r0
 8003cfa:	460c      	mov	r4, r1
 8003cfc:	2300      	movs	r3, #0
 8003cfe:	690d      	ldr	r5, [r1, #16]
 8003d00:	f101 0e14 	add.w	lr, r1, #20
 8003d04:	f8de 0000 	ldr.w	r0, [lr]
 8003d08:	3301      	adds	r3, #1
 8003d0a:	b281      	uxth	r1, r0
 8003d0c:	fb02 7101 	mla	r1, r2, r1, r7
 8003d10:	0c00      	lsrs	r0, r0, #16
 8003d12:	0c0f      	lsrs	r7, r1, #16
 8003d14:	fb02 7000 	mla	r0, r2, r0, r7
 8003d18:	b289      	uxth	r1, r1
 8003d1a:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8003d1e:	429d      	cmp	r5, r3
 8003d20:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8003d24:	f84e 1b04 	str.w	r1, [lr], #4
 8003d28:	dcec      	bgt.n	8003d04 <__multadd+0x12>
 8003d2a:	b1d7      	cbz	r7, 8003d62 <__multadd+0x70>
 8003d2c:	68a3      	ldr	r3, [r4, #8]
 8003d2e:	429d      	cmp	r5, r3
 8003d30:	db12      	blt.n	8003d58 <__multadd+0x66>
 8003d32:	6861      	ldr	r1, [r4, #4]
 8003d34:	4630      	mov	r0, r6
 8003d36:	3101      	adds	r1, #1
 8003d38:	f7ff ff90 	bl	8003c5c <_Balloc>
 8003d3c:	4680      	mov	r8, r0
 8003d3e:	6922      	ldr	r2, [r4, #16]
 8003d40:	f104 010c 	add.w	r1, r4, #12
 8003d44:	3202      	adds	r2, #2
 8003d46:	0092      	lsls	r2, r2, #2
 8003d48:	300c      	adds	r0, #12
 8003d4a:	f7ff ff6f 	bl	8003c2c <memcpy>
 8003d4e:	4621      	mov	r1, r4
 8003d50:	4630      	mov	r0, r6
 8003d52:	f7ff ffb7 	bl	8003cc4 <_Bfree>
 8003d56:	4644      	mov	r4, r8
 8003d58:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003d5c:	3501      	adds	r5, #1
 8003d5e:	615f      	str	r7, [r3, #20]
 8003d60:	6125      	str	r5, [r4, #16]
 8003d62:	4620      	mov	r0, r4
 8003d64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08003d68 <__hi0bits>:
 8003d68:	0c02      	lsrs	r2, r0, #16
 8003d6a:	0412      	lsls	r2, r2, #16
 8003d6c:	4603      	mov	r3, r0
 8003d6e:	b9b2      	cbnz	r2, 8003d9e <__hi0bits+0x36>
 8003d70:	0403      	lsls	r3, r0, #16
 8003d72:	2010      	movs	r0, #16
 8003d74:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8003d78:	bf04      	itt	eq
 8003d7a:	021b      	lsleq	r3, r3, #8
 8003d7c:	3008      	addeq	r0, #8
 8003d7e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8003d82:	bf04      	itt	eq
 8003d84:	011b      	lsleq	r3, r3, #4
 8003d86:	3004      	addeq	r0, #4
 8003d88:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003d8c:	bf04      	itt	eq
 8003d8e:	009b      	lsleq	r3, r3, #2
 8003d90:	3002      	addeq	r0, #2
 8003d92:	2b00      	cmp	r3, #0
 8003d94:	db06      	blt.n	8003da4 <__hi0bits+0x3c>
 8003d96:	005b      	lsls	r3, r3, #1
 8003d98:	d503      	bpl.n	8003da2 <__hi0bits+0x3a>
 8003d9a:	3001      	adds	r0, #1
 8003d9c:	4770      	bx	lr
 8003d9e:	2000      	movs	r0, #0
 8003da0:	e7e8      	b.n	8003d74 <__hi0bits+0xc>
 8003da2:	2020      	movs	r0, #32
 8003da4:	4770      	bx	lr

08003da6 <__lo0bits>:
 8003da6:	6803      	ldr	r3, [r0, #0]
 8003da8:	4601      	mov	r1, r0
 8003daa:	f013 0207 	ands.w	r2, r3, #7
 8003dae:	d00b      	beq.n	8003dc8 <__lo0bits+0x22>
 8003db0:	07da      	lsls	r2, r3, #31
 8003db2:	d423      	bmi.n	8003dfc <__lo0bits+0x56>
 8003db4:	0798      	lsls	r0, r3, #30
 8003db6:	bf49      	itett	mi
 8003db8:	085b      	lsrmi	r3, r3, #1
 8003dba:	089b      	lsrpl	r3, r3, #2
 8003dbc:	2001      	movmi	r0, #1
 8003dbe:	600b      	strmi	r3, [r1, #0]
 8003dc0:	bf5c      	itt	pl
 8003dc2:	600b      	strpl	r3, [r1, #0]
 8003dc4:	2002      	movpl	r0, #2
 8003dc6:	4770      	bx	lr
 8003dc8:	b298      	uxth	r0, r3
 8003dca:	b9a8      	cbnz	r0, 8003df8 <__lo0bits+0x52>
 8003dcc:	2010      	movs	r0, #16
 8003dce:	0c1b      	lsrs	r3, r3, #16
 8003dd0:	f013 0fff 	tst.w	r3, #255	; 0xff
 8003dd4:	bf04      	itt	eq
 8003dd6:	0a1b      	lsreq	r3, r3, #8
 8003dd8:	3008      	addeq	r0, #8
 8003dda:	071a      	lsls	r2, r3, #28
 8003ddc:	bf04      	itt	eq
 8003dde:	091b      	lsreq	r3, r3, #4
 8003de0:	3004      	addeq	r0, #4
 8003de2:	079a      	lsls	r2, r3, #30
 8003de4:	bf04      	itt	eq
 8003de6:	089b      	lsreq	r3, r3, #2
 8003de8:	3002      	addeq	r0, #2
 8003dea:	07da      	lsls	r2, r3, #31
 8003dec:	d402      	bmi.n	8003df4 <__lo0bits+0x4e>
 8003dee:	085b      	lsrs	r3, r3, #1
 8003df0:	d006      	beq.n	8003e00 <__lo0bits+0x5a>
 8003df2:	3001      	adds	r0, #1
 8003df4:	600b      	str	r3, [r1, #0]
 8003df6:	4770      	bx	lr
 8003df8:	4610      	mov	r0, r2
 8003dfa:	e7e9      	b.n	8003dd0 <__lo0bits+0x2a>
 8003dfc:	2000      	movs	r0, #0
 8003dfe:	4770      	bx	lr
 8003e00:	2020      	movs	r0, #32
 8003e02:	4770      	bx	lr

08003e04 <__i2b>:
 8003e04:	b510      	push	{r4, lr}
 8003e06:	460c      	mov	r4, r1
 8003e08:	2101      	movs	r1, #1
 8003e0a:	f7ff ff27 	bl	8003c5c <_Balloc>
 8003e0e:	2201      	movs	r2, #1
 8003e10:	6144      	str	r4, [r0, #20]
 8003e12:	6102      	str	r2, [r0, #16]
 8003e14:	bd10      	pop	{r4, pc}

08003e16 <__multiply>:
 8003e16:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e1a:	4614      	mov	r4, r2
 8003e1c:	690a      	ldr	r2, [r1, #16]
 8003e1e:	6923      	ldr	r3, [r4, #16]
 8003e20:	4689      	mov	r9, r1
 8003e22:	429a      	cmp	r2, r3
 8003e24:	bfbe      	ittt	lt
 8003e26:	460b      	movlt	r3, r1
 8003e28:	46a1      	movlt	r9, r4
 8003e2a:	461c      	movlt	r4, r3
 8003e2c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003e30:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003e34:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8003e38:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003e3c:	eb07 060a 	add.w	r6, r7, sl
 8003e40:	429e      	cmp	r6, r3
 8003e42:	bfc8      	it	gt
 8003e44:	3101      	addgt	r1, #1
 8003e46:	f7ff ff09 	bl	8003c5c <_Balloc>
 8003e4a:	f100 0514 	add.w	r5, r0, #20
 8003e4e:	462b      	mov	r3, r5
 8003e50:	2200      	movs	r2, #0
 8003e52:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003e56:	4543      	cmp	r3, r8
 8003e58:	d316      	bcc.n	8003e88 <__multiply+0x72>
 8003e5a:	f104 0214 	add.w	r2, r4, #20
 8003e5e:	f109 0114 	add.w	r1, r9, #20
 8003e62:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8003e66:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8003e6a:	9301      	str	r3, [sp, #4]
 8003e6c:	9c01      	ldr	r4, [sp, #4]
 8003e6e:	4613      	mov	r3, r2
 8003e70:	4294      	cmp	r4, r2
 8003e72:	d80c      	bhi.n	8003e8e <__multiply+0x78>
 8003e74:	2e00      	cmp	r6, #0
 8003e76:	dd03      	ble.n	8003e80 <__multiply+0x6a>
 8003e78:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003e7c:	2b00      	cmp	r3, #0
 8003e7e:	d054      	beq.n	8003f2a <__multiply+0x114>
 8003e80:	6106      	str	r6, [r0, #16]
 8003e82:	b003      	add	sp, #12
 8003e84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e88:	f843 2b04 	str.w	r2, [r3], #4
 8003e8c:	e7e3      	b.n	8003e56 <__multiply+0x40>
 8003e8e:	f8b3 a000 	ldrh.w	sl, [r3]
 8003e92:	3204      	adds	r2, #4
 8003e94:	f1ba 0f00 	cmp.w	sl, #0
 8003e98:	d020      	beq.n	8003edc <__multiply+0xc6>
 8003e9a:	46ae      	mov	lr, r5
 8003e9c:	4689      	mov	r9, r1
 8003e9e:	f04f 0c00 	mov.w	ip, #0
 8003ea2:	f859 4b04 	ldr.w	r4, [r9], #4
 8003ea6:	f8be b000 	ldrh.w	fp, [lr]
 8003eaa:	b2a3      	uxth	r3, r4
 8003eac:	fb0a b303 	mla	r3, sl, r3, fp
 8003eb0:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8003eb4:	f8de 4000 	ldr.w	r4, [lr]
 8003eb8:	4463      	add	r3, ip
 8003eba:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003ebe:	fb0a c40b 	mla	r4, sl, fp, ip
 8003ec2:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8003ec6:	b29b      	uxth	r3, r3
 8003ec8:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8003ecc:	454f      	cmp	r7, r9
 8003ece:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8003ed2:	f84e 3b04 	str.w	r3, [lr], #4
 8003ed6:	d8e4      	bhi.n	8003ea2 <__multiply+0x8c>
 8003ed8:	f8ce c000 	str.w	ip, [lr]
 8003edc:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8003ee0:	f1b9 0f00 	cmp.w	r9, #0
 8003ee4:	d01f      	beq.n	8003f26 <__multiply+0x110>
 8003ee6:	46ae      	mov	lr, r5
 8003ee8:	468c      	mov	ip, r1
 8003eea:	f04f 0a00 	mov.w	sl, #0
 8003eee:	682b      	ldr	r3, [r5, #0]
 8003ef0:	f8bc 4000 	ldrh.w	r4, [ip]
 8003ef4:	f8be b002 	ldrh.w	fp, [lr, #2]
 8003ef8:	b29b      	uxth	r3, r3
 8003efa:	fb09 b404 	mla	r4, r9, r4, fp
 8003efe:	44a2      	add	sl, r4
 8003f00:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8003f04:	f84e 3b04 	str.w	r3, [lr], #4
 8003f08:	f85c 3b04 	ldr.w	r3, [ip], #4
 8003f0c:	f8be 4000 	ldrh.w	r4, [lr]
 8003f10:	0c1b      	lsrs	r3, r3, #16
 8003f12:	fb09 4303 	mla	r3, r9, r3, r4
 8003f16:	4567      	cmp	r7, ip
 8003f18:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8003f1c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003f20:	d8e6      	bhi.n	8003ef0 <__multiply+0xda>
 8003f22:	f8ce 3000 	str.w	r3, [lr]
 8003f26:	3504      	adds	r5, #4
 8003f28:	e7a0      	b.n	8003e6c <__multiply+0x56>
 8003f2a:	3e01      	subs	r6, #1
 8003f2c:	e7a2      	b.n	8003e74 <__multiply+0x5e>
	...

08003f30 <__pow5mult>:
 8003f30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003f34:	4615      	mov	r5, r2
 8003f36:	f012 0203 	ands.w	r2, r2, #3
 8003f3a:	4606      	mov	r6, r0
 8003f3c:	460f      	mov	r7, r1
 8003f3e:	d007      	beq.n	8003f50 <__pow5mult+0x20>
 8003f40:	4c21      	ldr	r4, [pc, #132]	; (8003fc8 <__pow5mult+0x98>)
 8003f42:	3a01      	subs	r2, #1
 8003f44:	2300      	movs	r3, #0
 8003f46:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003f4a:	f7ff fed2 	bl	8003cf2 <__multadd>
 8003f4e:	4607      	mov	r7, r0
 8003f50:	10ad      	asrs	r5, r5, #2
 8003f52:	d035      	beq.n	8003fc0 <__pow5mult+0x90>
 8003f54:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8003f56:	b93c      	cbnz	r4, 8003f68 <__pow5mult+0x38>
 8003f58:	2010      	movs	r0, #16
 8003f5a:	f7ff fc45 	bl	80037e8 <malloc>
 8003f5e:	6270      	str	r0, [r6, #36]	; 0x24
 8003f60:	6044      	str	r4, [r0, #4]
 8003f62:	6084      	str	r4, [r0, #8]
 8003f64:	6004      	str	r4, [r0, #0]
 8003f66:	60c4      	str	r4, [r0, #12]
 8003f68:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8003f6c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003f70:	b94c      	cbnz	r4, 8003f86 <__pow5mult+0x56>
 8003f72:	f240 2171 	movw	r1, #625	; 0x271
 8003f76:	4630      	mov	r0, r6
 8003f78:	f7ff ff44 	bl	8003e04 <__i2b>
 8003f7c:	2300      	movs	r3, #0
 8003f7e:	4604      	mov	r4, r0
 8003f80:	f8c8 0008 	str.w	r0, [r8, #8]
 8003f84:	6003      	str	r3, [r0, #0]
 8003f86:	f04f 0800 	mov.w	r8, #0
 8003f8a:	07eb      	lsls	r3, r5, #31
 8003f8c:	d50a      	bpl.n	8003fa4 <__pow5mult+0x74>
 8003f8e:	4639      	mov	r1, r7
 8003f90:	4622      	mov	r2, r4
 8003f92:	4630      	mov	r0, r6
 8003f94:	f7ff ff3f 	bl	8003e16 <__multiply>
 8003f98:	4681      	mov	r9, r0
 8003f9a:	4639      	mov	r1, r7
 8003f9c:	4630      	mov	r0, r6
 8003f9e:	f7ff fe91 	bl	8003cc4 <_Bfree>
 8003fa2:	464f      	mov	r7, r9
 8003fa4:	106d      	asrs	r5, r5, #1
 8003fa6:	d00b      	beq.n	8003fc0 <__pow5mult+0x90>
 8003fa8:	6820      	ldr	r0, [r4, #0]
 8003faa:	b938      	cbnz	r0, 8003fbc <__pow5mult+0x8c>
 8003fac:	4622      	mov	r2, r4
 8003fae:	4621      	mov	r1, r4
 8003fb0:	4630      	mov	r0, r6
 8003fb2:	f7ff ff30 	bl	8003e16 <__multiply>
 8003fb6:	6020      	str	r0, [r4, #0]
 8003fb8:	f8c0 8000 	str.w	r8, [r0]
 8003fbc:	4604      	mov	r4, r0
 8003fbe:	e7e4      	b.n	8003f8a <__pow5mult+0x5a>
 8003fc0:	4638      	mov	r0, r7
 8003fc2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003fc6:	bf00      	nop
 8003fc8:	08004988 	.word	0x08004988

08003fcc <__lshift>:
 8003fcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fd0:	460c      	mov	r4, r1
 8003fd2:	4607      	mov	r7, r0
 8003fd4:	4616      	mov	r6, r2
 8003fd6:	6923      	ldr	r3, [r4, #16]
 8003fd8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003fdc:	eb0a 0903 	add.w	r9, sl, r3
 8003fe0:	6849      	ldr	r1, [r1, #4]
 8003fe2:	68a3      	ldr	r3, [r4, #8]
 8003fe4:	f109 0501 	add.w	r5, r9, #1
 8003fe8:	42ab      	cmp	r3, r5
 8003fea:	db31      	blt.n	8004050 <__lshift+0x84>
 8003fec:	4638      	mov	r0, r7
 8003fee:	f7ff fe35 	bl	8003c5c <_Balloc>
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	4680      	mov	r8, r0
 8003ff6:	4611      	mov	r1, r2
 8003ff8:	f100 0314 	add.w	r3, r0, #20
 8003ffc:	4552      	cmp	r2, sl
 8003ffe:	db2a      	blt.n	8004056 <__lshift+0x8a>
 8004000:	6920      	ldr	r0, [r4, #16]
 8004002:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004006:	f104 0114 	add.w	r1, r4, #20
 800400a:	f016 021f 	ands.w	r2, r6, #31
 800400e:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8004012:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8004016:	d022      	beq.n	800405e <__lshift+0x92>
 8004018:	2000      	movs	r0, #0
 800401a:	f1c2 0c20 	rsb	ip, r2, #32
 800401e:	680e      	ldr	r6, [r1, #0]
 8004020:	4096      	lsls	r6, r2
 8004022:	4330      	orrs	r0, r6
 8004024:	f843 0b04 	str.w	r0, [r3], #4
 8004028:	f851 0b04 	ldr.w	r0, [r1], #4
 800402c:	458e      	cmp	lr, r1
 800402e:	fa20 f00c 	lsr.w	r0, r0, ip
 8004032:	d8f4      	bhi.n	800401e <__lshift+0x52>
 8004034:	6018      	str	r0, [r3, #0]
 8004036:	b108      	cbz	r0, 800403c <__lshift+0x70>
 8004038:	f109 0502 	add.w	r5, r9, #2
 800403c:	3d01      	subs	r5, #1
 800403e:	4638      	mov	r0, r7
 8004040:	f8c8 5010 	str.w	r5, [r8, #16]
 8004044:	4621      	mov	r1, r4
 8004046:	f7ff fe3d 	bl	8003cc4 <_Bfree>
 800404a:	4640      	mov	r0, r8
 800404c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004050:	3101      	adds	r1, #1
 8004052:	005b      	lsls	r3, r3, #1
 8004054:	e7c8      	b.n	8003fe8 <__lshift+0x1c>
 8004056:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800405a:	3201      	adds	r2, #1
 800405c:	e7ce      	b.n	8003ffc <__lshift+0x30>
 800405e:	3b04      	subs	r3, #4
 8004060:	f851 2b04 	ldr.w	r2, [r1], #4
 8004064:	458e      	cmp	lr, r1
 8004066:	f843 2f04 	str.w	r2, [r3, #4]!
 800406a:	d8f9      	bhi.n	8004060 <__lshift+0x94>
 800406c:	e7e6      	b.n	800403c <__lshift+0x70>

0800406e <__mcmp>:
 800406e:	6903      	ldr	r3, [r0, #16]
 8004070:	690a      	ldr	r2, [r1, #16]
 8004072:	b530      	push	{r4, r5, lr}
 8004074:	1a9b      	subs	r3, r3, r2
 8004076:	d10c      	bne.n	8004092 <__mcmp+0x24>
 8004078:	0092      	lsls	r2, r2, #2
 800407a:	3014      	adds	r0, #20
 800407c:	3114      	adds	r1, #20
 800407e:	1884      	adds	r4, r0, r2
 8004080:	4411      	add	r1, r2
 8004082:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004086:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800408a:	4295      	cmp	r5, r2
 800408c:	d003      	beq.n	8004096 <__mcmp+0x28>
 800408e:	d305      	bcc.n	800409c <__mcmp+0x2e>
 8004090:	2301      	movs	r3, #1
 8004092:	4618      	mov	r0, r3
 8004094:	bd30      	pop	{r4, r5, pc}
 8004096:	42a0      	cmp	r0, r4
 8004098:	d3f3      	bcc.n	8004082 <__mcmp+0x14>
 800409a:	e7fa      	b.n	8004092 <__mcmp+0x24>
 800409c:	f04f 33ff 	mov.w	r3, #4294967295
 80040a0:	e7f7      	b.n	8004092 <__mcmp+0x24>

080040a2 <__mdiff>:
 80040a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80040a6:	460d      	mov	r5, r1
 80040a8:	4607      	mov	r7, r0
 80040aa:	4611      	mov	r1, r2
 80040ac:	4628      	mov	r0, r5
 80040ae:	4614      	mov	r4, r2
 80040b0:	f7ff ffdd 	bl	800406e <__mcmp>
 80040b4:	1e06      	subs	r6, r0, #0
 80040b6:	d108      	bne.n	80040ca <__mdiff+0x28>
 80040b8:	4631      	mov	r1, r6
 80040ba:	4638      	mov	r0, r7
 80040bc:	f7ff fdce 	bl	8003c5c <_Balloc>
 80040c0:	2301      	movs	r3, #1
 80040c2:	6146      	str	r6, [r0, #20]
 80040c4:	6103      	str	r3, [r0, #16]
 80040c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80040ca:	bfa4      	itt	ge
 80040cc:	4623      	movge	r3, r4
 80040ce:	462c      	movge	r4, r5
 80040d0:	4638      	mov	r0, r7
 80040d2:	6861      	ldr	r1, [r4, #4]
 80040d4:	bfa6      	itte	ge
 80040d6:	461d      	movge	r5, r3
 80040d8:	2600      	movge	r6, #0
 80040da:	2601      	movlt	r6, #1
 80040dc:	f7ff fdbe 	bl	8003c5c <_Balloc>
 80040e0:	f04f 0c00 	mov.w	ip, #0
 80040e4:	60c6      	str	r6, [r0, #12]
 80040e6:	692b      	ldr	r3, [r5, #16]
 80040e8:	6926      	ldr	r6, [r4, #16]
 80040ea:	f104 0214 	add.w	r2, r4, #20
 80040ee:	f105 0914 	add.w	r9, r5, #20
 80040f2:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 80040f6:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 80040fa:	f100 0114 	add.w	r1, r0, #20
 80040fe:	f852 ab04 	ldr.w	sl, [r2], #4
 8004102:	f859 5b04 	ldr.w	r5, [r9], #4
 8004106:	fa1f f38a 	uxth.w	r3, sl
 800410a:	4463      	add	r3, ip
 800410c:	b2ac      	uxth	r4, r5
 800410e:	1b1b      	subs	r3, r3, r4
 8004110:	0c2c      	lsrs	r4, r5, #16
 8004112:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8004116:	eb04 4423 	add.w	r4, r4, r3, asr #16
 800411a:	b29b      	uxth	r3, r3
 800411c:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8004120:	45c8      	cmp	r8, r9
 8004122:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8004126:	4696      	mov	lr, r2
 8004128:	f841 4b04 	str.w	r4, [r1], #4
 800412c:	d8e7      	bhi.n	80040fe <__mdiff+0x5c>
 800412e:	45be      	cmp	lr, r7
 8004130:	d305      	bcc.n	800413e <__mdiff+0x9c>
 8004132:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8004136:	b18b      	cbz	r3, 800415c <__mdiff+0xba>
 8004138:	6106      	str	r6, [r0, #16]
 800413a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800413e:	f85e 4b04 	ldr.w	r4, [lr], #4
 8004142:	b2a2      	uxth	r2, r4
 8004144:	4462      	add	r2, ip
 8004146:	1413      	asrs	r3, r2, #16
 8004148:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 800414c:	b292      	uxth	r2, r2
 800414e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8004152:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8004156:	f841 2b04 	str.w	r2, [r1], #4
 800415a:	e7e8      	b.n	800412e <__mdiff+0x8c>
 800415c:	3e01      	subs	r6, #1
 800415e:	e7e8      	b.n	8004132 <__mdiff+0x90>

08004160 <__d2b>:
 8004160:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004164:	461c      	mov	r4, r3
 8004166:	2101      	movs	r1, #1
 8004168:	4690      	mov	r8, r2
 800416a:	9e08      	ldr	r6, [sp, #32]
 800416c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800416e:	f7ff fd75 	bl	8003c5c <_Balloc>
 8004172:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8004176:	f3c4 540a 	ubfx	r4, r4, #20, #11
 800417a:	4607      	mov	r7, r0
 800417c:	bb34      	cbnz	r4, 80041cc <__d2b+0x6c>
 800417e:	9201      	str	r2, [sp, #4]
 8004180:	f1b8 0f00 	cmp.w	r8, #0
 8004184:	d027      	beq.n	80041d6 <__d2b+0x76>
 8004186:	a802      	add	r0, sp, #8
 8004188:	f840 8d08 	str.w	r8, [r0, #-8]!
 800418c:	f7ff fe0b 	bl	8003da6 <__lo0bits>
 8004190:	9900      	ldr	r1, [sp, #0]
 8004192:	b1f0      	cbz	r0, 80041d2 <__d2b+0x72>
 8004194:	9a01      	ldr	r2, [sp, #4]
 8004196:	f1c0 0320 	rsb	r3, r0, #32
 800419a:	fa02 f303 	lsl.w	r3, r2, r3
 800419e:	430b      	orrs	r3, r1
 80041a0:	40c2      	lsrs	r2, r0
 80041a2:	617b      	str	r3, [r7, #20]
 80041a4:	9201      	str	r2, [sp, #4]
 80041a6:	9b01      	ldr	r3, [sp, #4]
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	bf14      	ite	ne
 80041ac:	2102      	movne	r1, #2
 80041ae:	2101      	moveq	r1, #1
 80041b0:	61bb      	str	r3, [r7, #24]
 80041b2:	6139      	str	r1, [r7, #16]
 80041b4:	b1c4      	cbz	r4, 80041e8 <__d2b+0x88>
 80041b6:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80041ba:	4404      	add	r4, r0
 80041bc:	6034      	str	r4, [r6, #0]
 80041be:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80041c2:	6028      	str	r0, [r5, #0]
 80041c4:	4638      	mov	r0, r7
 80041c6:	b002      	add	sp, #8
 80041c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041cc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80041d0:	e7d5      	b.n	800417e <__d2b+0x1e>
 80041d2:	6179      	str	r1, [r7, #20]
 80041d4:	e7e7      	b.n	80041a6 <__d2b+0x46>
 80041d6:	a801      	add	r0, sp, #4
 80041d8:	f7ff fde5 	bl	8003da6 <__lo0bits>
 80041dc:	2101      	movs	r1, #1
 80041de:	9b01      	ldr	r3, [sp, #4]
 80041e0:	6139      	str	r1, [r7, #16]
 80041e2:	617b      	str	r3, [r7, #20]
 80041e4:	3020      	adds	r0, #32
 80041e6:	e7e5      	b.n	80041b4 <__d2b+0x54>
 80041e8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80041ec:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80041f0:	6030      	str	r0, [r6, #0]
 80041f2:	6918      	ldr	r0, [r3, #16]
 80041f4:	f7ff fdb8 	bl	8003d68 <__hi0bits>
 80041f8:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80041fc:	e7e1      	b.n	80041c2 <__d2b+0x62>
	...

08004200 <_sbrk_r>:
 8004200:	b538      	push	{r3, r4, r5, lr}
 8004202:	2300      	movs	r3, #0
 8004204:	4c05      	ldr	r4, [pc, #20]	; (800421c <_sbrk_r+0x1c>)
 8004206:	4605      	mov	r5, r0
 8004208:	4608      	mov	r0, r1
 800420a:	6023      	str	r3, [r4, #0]
 800420c:	f7fd fa4a 	bl	80016a4 <_sbrk>
 8004210:	1c43      	adds	r3, r0, #1
 8004212:	d102      	bne.n	800421a <_sbrk_r+0x1a>
 8004214:	6823      	ldr	r3, [r4, #0]
 8004216:	b103      	cbz	r3, 800421a <_sbrk_r+0x1a>
 8004218:	602b      	str	r3, [r5, #0]
 800421a:	bd38      	pop	{r3, r4, r5, pc}
 800421c:	200006f8 	.word	0x200006f8

08004220 <__ssprint_r>:
 8004220:	6893      	ldr	r3, [r2, #8]
 8004222:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004226:	4681      	mov	r9, r0
 8004228:	460c      	mov	r4, r1
 800422a:	4617      	mov	r7, r2
 800422c:	2b00      	cmp	r3, #0
 800422e:	d060      	beq.n	80042f2 <__ssprint_r+0xd2>
 8004230:	f04f 0b00 	mov.w	fp, #0
 8004234:	465e      	mov	r6, fp
 8004236:	f8d2 a000 	ldr.w	sl, [r2]
 800423a:	b356      	cbz	r6, 8004292 <__ssprint_r+0x72>
 800423c:	68a3      	ldr	r3, [r4, #8]
 800423e:	429e      	cmp	r6, r3
 8004240:	d344      	bcc.n	80042cc <__ssprint_r+0xac>
 8004242:	89a2      	ldrh	r2, [r4, #12]
 8004244:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004248:	d03e      	beq.n	80042c8 <__ssprint_r+0xa8>
 800424a:	2302      	movs	r3, #2
 800424c:	6825      	ldr	r5, [r4, #0]
 800424e:	6921      	ldr	r1, [r4, #16]
 8004250:	eba5 0801 	sub.w	r8, r5, r1
 8004254:	6965      	ldr	r5, [r4, #20]
 8004256:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800425a:	fb95 f5f3 	sdiv	r5, r5, r3
 800425e:	f108 0301 	add.w	r3, r8, #1
 8004262:	4433      	add	r3, r6
 8004264:	429d      	cmp	r5, r3
 8004266:	bf38      	it	cc
 8004268:	461d      	movcc	r5, r3
 800426a:	0553      	lsls	r3, r2, #21
 800426c:	d546      	bpl.n	80042fc <__ssprint_r+0xdc>
 800426e:	4629      	mov	r1, r5
 8004270:	4648      	mov	r0, r9
 8004272:	f7ff fac1 	bl	80037f8 <_malloc_r>
 8004276:	b998      	cbnz	r0, 80042a0 <__ssprint_r+0x80>
 8004278:	230c      	movs	r3, #12
 800427a:	f8c9 3000 	str.w	r3, [r9]
 800427e:	89a3      	ldrh	r3, [r4, #12]
 8004280:	f04f 30ff 	mov.w	r0, #4294967295
 8004284:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004288:	81a3      	strh	r3, [r4, #12]
 800428a:	2300      	movs	r3, #0
 800428c:	60bb      	str	r3, [r7, #8]
 800428e:	607b      	str	r3, [r7, #4]
 8004290:	e031      	b.n	80042f6 <__ssprint_r+0xd6>
 8004292:	f8da b000 	ldr.w	fp, [sl]
 8004296:	f8da 6004 	ldr.w	r6, [sl, #4]
 800429a:	f10a 0a08 	add.w	sl, sl, #8
 800429e:	e7cc      	b.n	800423a <__ssprint_r+0x1a>
 80042a0:	4642      	mov	r2, r8
 80042a2:	6921      	ldr	r1, [r4, #16]
 80042a4:	9001      	str	r0, [sp, #4]
 80042a6:	f7ff fcc1 	bl	8003c2c <memcpy>
 80042aa:	89a2      	ldrh	r2, [r4, #12]
 80042ac:	9b01      	ldr	r3, [sp, #4]
 80042ae:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80042b2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80042b6:	81a2      	strh	r2, [r4, #12]
 80042b8:	6123      	str	r3, [r4, #16]
 80042ba:	4443      	add	r3, r8
 80042bc:	6023      	str	r3, [r4, #0]
 80042be:	4633      	mov	r3, r6
 80042c0:	6165      	str	r5, [r4, #20]
 80042c2:	eba5 0508 	sub.w	r5, r5, r8
 80042c6:	60a5      	str	r5, [r4, #8]
 80042c8:	429e      	cmp	r6, r3
 80042ca:	d200      	bcs.n	80042ce <__ssprint_r+0xae>
 80042cc:	4633      	mov	r3, r6
 80042ce:	461a      	mov	r2, r3
 80042d0:	4659      	mov	r1, fp
 80042d2:	6820      	ldr	r0, [r4, #0]
 80042d4:	9301      	str	r3, [sp, #4]
 80042d6:	f000 f85e 	bl	8004396 <memmove>
 80042da:	68a2      	ldr	r2, [r4, #8]
 80042dc:	9b01      	ldr	r3, [sp, #4]
 80042de:	1ad2      	subs	r2, r2, r3
 80042e0:	60a2      	str	r2, [r4, #8]
 80042e2:	6822      	ldr	r2, [r4, #0]
 80042e4:	4413      	add	r3, r2
 80042e6:	6023      	str	r3, [r4, #0]
 80042e8:	68bb      	ldr	r3, [r7, #8]
 80042ea:	1b9e      	subs	r6, r3, r6
 80042ec:	60be      	str	r6, [r7, #8]
 80042ee:	2e00      	cmp	r6, #0
 80042f0:	d1cf      	bne.n	8004292 <__ssprint_r+0x72>
 80042f2:	2000      	movs	r0, #0
 80042f4:	6078      	str	r0, [r7, #4]
 80042f6:	b003      	add	sp, #12
 80042f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042fc:	462a      	mov	r2, r5
 80042fe:	4648      	mov	r0, r9
 8004300:	f000 f86c 	bl	80043dc <_realloc_r>
 8004304:	4603      	mov	r3, r0
 8004306:	2800      	cmp	r0, #0
 8004308:	d1d6      	bne.n	80042b8 <__ssprint_r+0x98>
 800430a:	6921      	ldr	r1, [r4, #16]
 800430c:	4648      	mov	r0, r9
 800430e:	f7ff f9a1 	bl	8003654 <_free_r>
 8004312:	e7b1      	b.n	8004278 <__ssprint_r+0x58>

08004314 <_calloc_r>:
 8004314:	b510      	push	{r4, lr}
 8004316:	4351      	muls	r1, r2
 8004318:	f7ff fa6e 	bl	80037f8 <_malloc_r>
 800431c:	4604      	mov	r4, r0
 800431e:	b198      	cbz	r0, 8004348 <_calloc_r+0x34>
 8004320:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8004324:	f022 0203 	bic.w	r2, r2, #3
 8004328:	3a04      	subs	r2, #4
 800432a:	2a24      	cmp	r2, #36	; 0x24
 800432c:	d81b      	bhi.n	8004366 <_calloc_r+0x52>
 800432e:	2a13      	cmp	r2, #19
 8004330:	d917      	bls.n	8004362 <_calloc_r+0x4e>
 8004332:	2100      	movs	r1, #0
 8004334:	2a1b      	cmp	r2, #27
 8004336:	6001      	str	r1, [r0, #0]
 8004338:	6041      	str	r1, [r0, #4]
 800433a:	d807      	bhi.n	800434c <_calloc_r+0x38>
 800433c:	f100 0308 	add.w	r3, r0, #8
 8004340:	2200      	movs	r2, #0
 8004342:	601a      	str	r2, [r3, #0]
 8004344:	605a      	str	r2, [r3, #4]
 8004346:	609a      	str	r2, [r3, #8]
 8004348:	4620      	mov	r0, r4
 800434a:	bd10      	pop	{r4, pc}
 800434c:	2a24      	cmp	r2, #36	; 0x24
 800434e:	6081      	str	r1, [r0, #8]
 8004350:	60c1      	str	r1, [r0, #12]
 8004352:	bf11      	iteee	ne
 8004354:	f100 0310 	addne.w	r3, r0, #16
 8004358:	6101      	streq	r1, [r0, #16]
 800435a:	f100 0318 	addeq.w	r3, r0, #24
 800435e:	6141      	streq	r1, [r0, #20]
 8004360:	e7ee      	b.n	8004340 <_calloc_r+0x2c>
 8004362:	4603      	mov	r3, r0
 8004364:	e7ec      	b.n	8004340 <_calloc_r+0x2c>
 8004366:	2100      	movs	r1, #0
 8004368:	f000 f82f 	bl	80043ca <memset>
 800436c:	e7ec      	b.n	8004348 <_calloc_r+0x34>

0800436e <__retarget_lock_acquire_recursive>:
 800436e:	4770      	bx	lr

08004370 <__retarget_lock_release_recursive>:
 8004370:	4770      	bx	lr

08004372 <__ascii_mbtowc>:
 8004372:	b082      	sub	sp, #8
 8004374:	b901      	cbnz	r1, 8004378 <__ascii_mbtowc+0x6>
 8004376:	a901      	add	r1, sp, #4
 8004378:	b142      	cbz	r2, 800438c <__ascii_mbtowc+0x1a>
 800437a:	b14b      	cbz	r3, 8004390 <__ascii_mbtowc+0x1e>
 800437c:	7813      	ldrb	r3, [r2, #0]
 800437e:	600b      	str	r3, [r1, #0]
 8004380:	7812      	ldrb	r2, [r2, #0]
 8004382:	1c10      	adds	r0, r2, #0
 8004384:	bf18      	it	ne
 8004386:	2001      	movne	r0, #1
 8004388:	b002      	add	sp, #8
 800438a:	4770      	bx	lr
 800438c:	4610      	mov	r0, r2
 800438e:	e7fb      	b.n	8004388 <__ascii_mbtowc+0x16>
 8004390:	f06f 0001 	mvn.w	r0, #1
 8004394:	e7f8      	b.n	8004388 <__ascii_mbtowc+0x16>

08004396 <memmove>:
 8004396:	4288      	cmp	r0, r1
 8004398:	b510      	push	{r4, lr}
 800439a:	eb01 0302 	add.w	r3, r1, r2
 800439e:	d803      	bhi.n	80043a8 <memmove+0x12>
 80043a0:	1e42      	subs	r2, r0, #1
 80043a2:	4299      	cmp	r1, r3
 80043a4:	d10c      	bne.n	80043c0 <memmove+0x2a>
 80043a6:	bd10      	pop	{r4, pc}
 80043a8:	4298      	cmp	r0, r3
 80043aa:	d2f9      	bcs.n	80043a0 <memmove+0xa>
 80043ac:	1881      	adds	r1, r0, r2
 80043ae:	1ad2      	subs	r2, r2, r3
 80043b0:	42d3      	cmn	r3, r2
 80043b2:	d100      	bne.n	80043b6 <memmove+0x20>
 80043b4:	bd10      	pop	{r4, pc}
 80043b6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80043ba:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80043be:	e7f7      	b.n	80043b0 <memmove+0x1a>
 80043c0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80043c4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80043c8:	e7eb      	b.n	80043a2 <memmove+0xc>

080043ca <memset>:
 80043ca:	4603      	mov	r3, r0
 80043cc:	4402      	add	r2, r0
 80043ce:	4293      	cmp	r3, r2
 80043d0:	d100      	bne.n	80043d4 <memset+0xa>
 80043d2:	4770      	bx	lr
 80043d4:	f803 1b01 	strb.w	r1, [r3], #1
 80043d8:	e7f9      	b.n	80043ce <memset+0x4>
	...

080043dc <_realloc_r>:
 80043dc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043e0:	4682      	mov	sl, r0
 80043e2:	460c      	mov	r4, r1
 80043e4:	b929      	cbnz	r1, 80043f2 <_realloc_r+0x16>
 80043e6:	4611      	mov	r1, r2
 80043e8:	b003      	add	sp, #12
 80043ea:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043ee:	f7ff ba03 	b.w	80037f8 <_malloc_r>
 80043f2:	9201      	str	r2, [sp, #4]
 80043f4:	f7ff fc26 	bl	8003c44 <__malloc_lock>
 80043f8:	9a01      	ldr	r2, [sp, #4]
 80043fa:	f854 5c04 	ldr.w	r5, [r4, #-4]
 80043fe:	f102 080b 	add.w	r8, r2, #11
 8004402:	f1b8 0f16 	cmp.w	r8, #22
 8004406:	f1a4 0908 	sub.w	r9, r4, #8
 800440a:	f025 0603 	bic.w	r6, r5, #3
 800440e:	d90a      	bls.n	8004426 <_realloc_r+0x4a>
 8004410:	f038 0807 	bics.w	r8, r8, #7
 8004414:	d509      	bpl.n	800442a <_realloc_r+0x4e>
 8004416:	230c      	movs	r3, #12
 8004418:	2700      	movs	r7, #0
 800441a:	f8ca 3000 	str.w	r3, [sl]
 800441e:	4638      	mov	r0, r7
 8004420:	b003      	add	sp, #12
 8004422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004426:	f04f 0810 	mov.w	r8, #16
 800442a:	4590      	cmp	r8, r2
 800442c:	d3f3      	bcc.n	8004416 <_realloc_r+0x3a>
 800442e:	45b0      	cmp	r8, r6
 8004430:	f340 8148 	ble.w	80046c4 <_realloc_r+0x2e8>
 8004434:	4ba9      	ldr	r3, [pc, #676]	; (80046dc <_realloc_r+0x300>)
 8004436:	eb09 0106 	add.w	r1, r9, r6
 800443a:	f8d3 e008 	ldr.w	lr, [r3, #8]
 800443e:	469b      	mov	fp, r3
 8004440:	4571      	cmp	r1, lr
 8004442:	684b      	ldr	r3, [r1, #4]
 8004444:	d005      	beq.n	8004452 <_realloc_r+0x76>
 8004446:	f023 0001 	bic.w	r0, r3, #1
 800444a:	4408      	add	r0, r1
 800444c:	6840      	ldr	r0, [r0, #4]
 800444e:	07c7      	lsls	r7, r0, #31
 8004450:	d447      	bmi.n	80044e2 <_realloc_r+0x106>
 8004452:	f023 0303 	bic.w	r3, r3, #3
 8004456:	4571      	cmp	r1, lr
 8004458:	eb06 0703 	add.w	r7, r6, r3
 800445c:	d119      	bne.n	8004492 <_realloc_r+0xb6>
 800445e:	f108 0010 	add.w	r0, r8, #16
 8004462:	4287      	cmp	r7, r0
 8004464:	db3f      	blt.n	80044e6 <_realloc_r+0x10a>
 8004466:	eba7 0708 	sub.w	r7, r7, r8
 800446a:	eb09 0308 	add.w	r3, r9, r8
 800446e:	f047 0701 	orr.w	r7, r7, #1
 8004472:	f8cb 3008 	str.w	r3, [fp, #8]
 8004476:	605f      	str	r7, [r3, #4]
 8004478:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800447c:	4650      	mov	r0, sl
 800447e:	f003 0301 	and.w	r3, r3, #1
 8004482:	ea43 0308 	orr.w	r3, r3, r8
 8004486:	f844 3c04 	str.w	r3, [r4, #-4]
 800448a:	f7ff fbe1 	bl	8003c50 <__malloc_unlock>
 800448e:	4627      	mov	r7, r4
 8004490:	e7c5      	b.n	800441e <_realloc_r+0x42>
 8004492:	45b8      	cmp	r8, r7
 8004494:	dc27      	bgt.n	80044e6 <_realloc_r+0x10a>
 8004496:	68cb      	ldr	r3, [r1, #12]
 8004498:	688a      	ldr	r2, [r1, #8]
 800449a:	60d3      	str	r3, [r2, #12]
 800449c:	609a      	str	r2, [r3, #8]
 800449e:	eba7 0008 	sub.w	r0, r7, r8
 80044a2:	280f      	cmp	r0, #15
 80044a4:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80044a8:	eb09 0207 	add.w	r2, r9, r7
 80044ac:	f240 810c 	bls.w	80046c8 <_realloc_r+0x2ec>
 80044b0:	f003 0301 	and.w	r3, r3, #1
 80044b4:	eb09 0108 	add.w	r1, r9, r8
 80044b8:	ea43 0308 	orr.w	r3, r3, r8
 80044bc:	f040 0001 	orr.w	r0, r0, #1
 80044c0:	f8c9 3004 	str.w	r3, [r9, #4]
 80044c4:	6048      	str	r0, [r1, #4]
 80044c6:	6853      	ldr	r3, [r2, #4]
 80044c8:	3108      	adds	r1, #8
 80044ca:	f043 0301 	orr.w	r3, r3, #1
 80044ce:	6053      	str	r3, [r2, #4]
 80044d0:	4650      	mov	r0, sl
 80044d2:	f7ff f8bf 	bl	8003654 <_free_r>
 80044d6:	4650      	mov	r0, sl
 80044d8:	f7ff fbba 	bl	8003c50 <__malloc_unlock>
 80044dc:	f109 0708 	add.w	r7, r9, #8
 80044e0:	e79d      	b.n	800441e <_realloc_r+0x42>
 80044e2:	2300      	movs	r3, #0
 80044e4:	4619      	mov	r1, r3
 80044e6:	07e8      	lsls	r0, r5, #31
 80044e8:	f100 8085 	bmi.w	80045f6 <_realloc_r+0x21a>
 80044ec:	f854 5c08 	ldr.w	r5, [r4, #-8]
 80044f0:	eba9 0505 	sub.w	r5, r9, r5
 80044f4:	6868      	ldr	r0, [r5, #4]
 80044f6:	f020 0003 	bic.w	r0, r0, #3
 80044fa:	4430      	add	r0, r6
 80044fc:	2900      	cmp	r1, #0
 80044fe:	d077      	beq.n	80045f0 <_realloc_r+0x214>
 8004500:	4571      	cmp	r1, lr
 8004502:	d151      	bne.n	80045a8 <_realloc_r+0x1cc>
 8004504:	4403      	add	r3, r0
 8004506:	f108 0110 	add.w	r1, r8, #16
 800450a:	428b      	cmp	r3, r1
 800450c:	db70      	blt.n	80045f0 <_realloc_r+0x214>
 800450e:	462f      	mov	r7, r5
 8004510:	68ea      	ldr	r2, [r5, #12]
 8004512:	f857 1f08 	ldr.w	r1, [r7, #8]!
 8004516:	60ca      	str	r2, [r1, #12]
 8004518:	6091      	str	r1, [r2, #8]
 800451a:	1f32      	subs	r2, r6, #4
 800451c:	2a24      	cmp	r2, #36	; 0x24
 800451e:	d83c      	bhi.n	800459a <_realloc_r+0x1be>
 8004520:	2a13      	cmp	r2, #19
 8004522:	d937      	bls.n	8004594 <_realloc_r+0x1b8>
 8004524:	6821      	ldr	r1, [r4, #0]
 8004526:	2a1b      	cmp	r2, #27
 8004528:	60a9      	str	r1, [r5, #8]
 800452a:	6861      	ldr	r1, [r4, #4]
 800452c:	60e9      	str	r1, [r5, #12]
 800452e:	d81c      	bhi.n	800456a <_realloc_r+0x18e>
 8004530:	f105 0210 	add.w	r2, r5, #16
 8004534:	f104 0108 	add.w	r1, r4, #8
 8004538:	6808      	ldr	r0, [r1, #0]
 800453a:	6010      	str	r0, [r2, #0]
 800453c:	6848      	ldr	r0, [r1, #4]
 800453e:	6050      	str	r0, [r2, #4]
 8004540:	6889      	ldr	r1, [r1, #8]
 8004542:	6091      	str	r1, [r2, #8]
 8004544:	eba3 0308 	sub.w	r3, r3, r8
 8004548:	eb05 0208 	add.w	r2, r5, r8
 800454c:	f043 0301 	orr.w	r3, r3, #1
 8004550:	f8cb 2008 	str.w	r2, [fp, #8]
 8004554:	6053      	str	r3, [r2, #4]
 8004556:	686b      	ldr	r3, [r5, #4]
 8004558:	f003 0301 	and.w	r3, r3, #1
 800455c:	ea43 0308 	orr.w	r3, r3, r8
 8004560:	606b      	str	r3, [r5, #4]
 8004562:	4650      	mov	r0, sl
 8004564:	f7ff fb74 	bl	8003c50 <__malloc_unlock>
 8004568:	e759      	b.n	800441e <_realloc_r+0x42>
 800456a:	68a1      	ldr	r1, [r4, #8]
 800456c:	2a24      	cmp	r2, #36	; 0x24
 800456e:	6129      	str	r1, [r5, #16]
 8004570:	68e1      	ldr	r1, [r4, #12]
 8004572:	bf18      	it	ne
 8004574:	f105 0218 	addne.w	r2, r5, #24
 8004578:	6169      	str	r1, [r5, #20]
 800457a:	bf09      	itett	eq
 800457c:	6922      	ldreq	r2, [r4, #16]
 800457e:	f104 0110 	addne.w	r1, r4, #16
 8004582:	61aa      	streq	r2, [r5, #24]
 8004584:	6960      	ldreq	r0, [r4, #20]
 8004586:	bf02      	ittt	eq
 8004588:	f105 0220 	addeq.w	r2, r5, #32
 800458c:	f104 0118 	addeq.w	r1, r4, #24
 8004590:	61e8      	streq	r0, [r5, #28]
 8004592:	e7d1      	b.n	8004538 <_realloc_r+0x15c>
 8004594:	463a      	mov	r2, r7
 8004596:	4621      	mov	r1, r4
 8004598:	e7ce      	b.n	8004538 <_realloc_r+0x15c>
 800459a:	4621      	mov	r1, r4
 800459c:	4638      	mov	r0, r7
 800459e:	9301      	str	r3, [sp, #4]
 80045a0:	f7ff fef9 	bl	8004396 <memmove>
 80045a4:	9b01      	ldr	r3, [sp, #4]
 80045a6:	e7cd      	b.n	8004544 <_realloc_r+0x168>
 80045a8:	18c7      	adds	r7, r0, r3
 80045aa:	45b8      	cmp	r8, r7
 80045ac:	dc20      	bgt.n	80045f0 <_realloc_r+0x214>
 80045ae:	68cb      	ldr	r3, [r1, #12]
 80045b0:	688a      	ldr	r2, [r1, #8]
 80045b2:	60d3      	str	r3, [r2, #12]
 80045b4:	609a      	str	r2, [r3, #8]
 80045b6:	4628      	mov	r0, r5
 80045b8:	68eb      	ldr	r3, [r5, #12]
 80045ba:	f850 2f08 	ldr.w	r2, [r0, #8]!
 80045be:	60d3      	str	r3, [r2, #12]
 80045c0:	609a      	str	r2, [r3, #8]
 80045c2:	1f32      	subs	r2, r6, #4
 80045c4:	2a24      	cmp	r2, #36	; 0x24
 80045c6:	d843      	bhi.n	8004650 <_realloc_r+0x274>
 80045c8:	2a13      	cmp	r2, #19
 80045ca:	d93f      	bls.n	800464c <_realloc_r+0x270>
 80045cc:	6823      	ldr	r3, [r4, #0]
 80045ce:	2a1b      	cmp	r2, #27
 80045d0:	60ab      	str	r3, [r5, #8]
 80045d2:	6863      	ldr	r3, [r4, #4]
 80045d4:	60eb      	str	r3, [r5, #12]
 80045d6:	d824      	bhi.n	8004622 <_realloc_r+0x246>
 80045d8:	f105 0010 	add.w	r0, r5, #16
 80045dc:	f104 0308 	add.w	r3, r4, #8
 80045e0:	681a      	ldr	r2, [r3, #0]
 80045e2:	6002      	str	r2, [r0, #0]
 80045e4:	685a      	ldr	r2, [r3, #4]
 80045e6:	6042      	str	r2, [r0, #4]
 80045e8:	689b      	ldr	r3, [r3, #8]
 80045ea:	6083      	str	r3, [r0, #8]
 80045ec:	46a9      	mov	r9, r5
 80045ee:	e756      	b.n	800449e <_realloc_r+0xc2>
 80045f0:	4580      	cmp	r8, r0
 80045f2:	4607      	mov	r7, r0
 80045f4:	dddf      	ble.n	80045b6 <_realloc_r+0x1da>
 80045f6:	4611      	mov	r1, r2
 80045f8:	4650      	mov	r0, sl
 80045fa:	f7ff f8fd 	bl	80037f8 <_malloc_r>
 80045fe:	4607      	mov	r7, r0
 8004600:	2800      	cmp	r0, #0
 8004602:	d0ae      	beq.n	8004562 <_realloc_r+0x186>
 8004604:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8004608:	f1a0 0208 	sub.w	r2, r0, #8
 800460c:	f023 0301 	bic.w	r3, r3, #1
 8004610:	444b      	add	r3, r9
 8004612:	429a      	cmp	r2, r3
 8004614:	d120      	bne.n	8004658 <_realloc_r+0x27c>
 8004616:	f850 7c04 	ldr.w	r7, [r0, #-4]
 800461a:	f027 0703 	bic.w	r7, r7, #3
 800461e:	4437      	add	r7, r6
 8004620:	e73d      	b.n	800449e <_realloc_r+0xc2>
 8004622:	68a3      	ldr	r3, [r4, #8]
 8004624:	2a24      	cmp	r2, #36	; 0x24
 8004626:	612b      	str	r3, [r5, #16]
 8004628:	68e3      	ldr	r3, [r4, #12]
 800462a:	bf18      	it	ne
 800462c:	f105 0018 	addne.w	r0, r5, #24
 8004630:	616b      	str	r3, [r5, #20]
 8004632:	bf09      	itett	eq
 8004634:	6923      	ldreq	r3, [r4, #16]
 8004636:	f104 0310 	addne.w	r3, r4, #16
 800463a:	61ab      	streq	r3, [r5, #24]
 800463c:	6962      	ldreq	r2, [r4, #20]
 800463e:	bf02      	ittt	eq
 8004640:	f105 0020 	addeq.w	r0, r5, #32
 8004644:	f104 0318 	addeq.w	r3, r4, #24
 8004648:	61ea      	streq	r2, [r5, #28]
 800464a:	e7c9      	b.n	80045e0 <_realloc_r+0x204>
 800464c:	4623      	mov	r3, r4
 800464e:	e7c7      	b.n	80045e0 <_realloc_r+0x204>
 8004650:	4621      	mov	r1, r4
 8004652:	f7ff fea0 	bl	8004396 <memmove>
 8004656:	e7c9      	b.n	80045ec <_realloc_r+0x210>
 8004658:	1f32      	subs	r2, r6, #4
 800465a:	2a24      	cmp	r2, #36	; 0x24
 800465c:	d82e      	bhi.n	80046bc <_realloc_r+0x2e0>
 800465e:	2a13      	cmp	r2, #19
 8004660:	d929      	bls.n	80046b6 <_realloc_r+0x2da>
 8004662:	6823      	ldr	r3, [r4, #0]
 8004664:	2a1b      	cmp	r2, #27
 8004666:	6003      	str	r3, [r0, #0]
 8004668:	6863      	ldr	r3, [r4, #4]
 800466a:	6043      	str	r3, [r0, #4]
 800466c:	d80e      	bhi.n	800468c <_realloc_r+0x2b0>
 800466e:	f100 0308 	add.w	r3, r0, #8
 8004672:	f104 0208 	add.w	r2, r4, #8
 8004676:	6811      	ldr	r1, [r2, #0]
 8004678:	6019      	str	r1, [r3, #0]
 800467a:	6851      	ldr	r1, [r2, #4]
 800467c:	6059      	str	r1, [r3, #4]
 800467e:	6892      	ldr	r2, [r2, #8]
 8004680:	609a      	str	r2, [r3, #8]
 8004682:	4621      	mov	r1, r4
 8004684:	4650      	mov	r0, sl
 8004686:	f7fe ffe5 	bl	8003654 <_free_r>
 800468a:	e76a      	b.n	8004562 <_realloc_r+0x186>
 800468c:	68a3      	ldr	r3, [r4, #8]
 800468e:	2a24      	cmp	r2, #36	; 0x24
 8004690:	6083      	str	r3, [r0, #8]
 8004692:	68e3      	ldr	r3, [r4, #12]
 8004694:	bf18      	it	ne
 8004696:	f104 0210 	addne.w	r2, r4, #16
 800469a:	60c3      	str	r3, [r0, #12]
 800469c:	bf09      	itett	eq
 800469e:	6923      	ldreq	r3, [r4, #16]
 80046a0:	f100 0310 	addne.w	r3, r0, #16
 80046a4:	6103      	streq	r3, [r0, #16]
 80046a6:	6961      	ldreq	r1, [r4, #20]
 80046a8:	bf02      	ittt	eq
 80046aa:	f100 0318 	addeq.w	r3, r0, #24
 80046ae:	f104 0218 	addeq.w	r2, r4, #24
 80046b2:	6141      	streq	r1, [r0, #20]
 80046b4:	e7df      	b.n	8004676 <_realloc_r+0x29a>
 80046b6:	4603      	mov	r3, r0
 80046b8:	4622      	mov	r2, r4
 80046ba:	e7dc      	b.n	8004676 <_realloc_r+0x29a>
 80046bc:	4621      	mov	r1, r4
 80046be:	f7ff fe6a 	bl	8004396 <memmove>
 80046c2:	e7de      	b.n	8004682 <_realloc_r+0x2a6>
 80046c4:	4637      	mov	r7, r6
 80046c6:	e6ea      	b.n	800449e <_realloc_r+0xc2>
 80046c8:	f003 0301 	and.w	r3, r3, #1
 80046cc:	431f      	orrs	r7, r3
 80046ce:	f8c9 7004 	str.w	r7, [r9, #4]
 80046d2:	6853      	ldr	r3, [r2, #4]
 80046d4:	f043 0301 	orr.w	r3, r3, #1
 80046d8:	6053      	str	r3, [r2, #4]
 80046da:	e6fc      	b.n	80044d6 <_realloc_r+0xfa>
 80046dc:	200000f8 	.word	0x200000f8

080046e0 <__ascii_wctomb>:
 80046e0:	b149      	cbz	r1, 80046f6 <__ascii_wctomb+0x16>
 80046e2:	2aff      	cmp	r2, #255	; 0xff
 80046e4:	bf8b      	itete	hi
 80046e6:	238a      	movhi	r3, #138	; 0x8a
 80046e8:	700a      	strbls	r2, [r1, #0]
 80046ea:	6003      	strhi	r3, [r0, #0]
 80046ec:	2001      	movls	r0, #1
 80046ee:	bf88      	it	hi
 80046f0:	f04f 30ff 	movhi.w	r0, #4294967295
 80046f4:	4770      	bx	lr
 80046f6:	4608      	mov	r0, r1
 80046f8:	4770      	bx	lr
	...

080046fc <_init>:
 80046fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046fe:	bf00      	nop
 8004700:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004702:	bc08      	pop	{r3}
 8004704:	469e      	mov	lr, r3
 8004706:	4770      	bx	lr

08004708 <_fini>:
 8004708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800470a:	bf00      	nop
 800470c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800470e:	bc08      	pop	{r3}
 8004710:	469e      	mov	lr, r3
 8004712:	4770      	bx	lr
